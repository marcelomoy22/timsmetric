webpackJsonp([1,5],{

/***/ 1032:
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 485,
	"./af.js": 485,
	"./ar": 492,
	"./ar-dz": 486,
	"./ar-dz.js": 486,
	"./ar-kw": 487,
	"./ar-kw.js": 487,
	"./ar-ly": 488,
	"./ar-ly.js": 488,
	"./ar-ma": 489,
	"./ar-ma.js": 489,
	"./ar-sa": 490,
	"./ar-sa.js": 490,
	"./ar-tn": 491,
	"./ar-tn.js": 491,
	"./ar.js": 492,
	"./az": 493,
	"./az.js": 493,
	"./be": 494,
	"./be.js": 494,
	"./bg": 495,
	"./bg.js": 495,
	"./bm": 496,
	"./bm.js": 496,
	"./bn": 498,
	"./bn-bd": 497,
	"./bn-bd.js": 497,
	"./bn.js": 498,
	"./bo": 499,
	"./bo.js": 499,
	"./br": 500,
	"./br.js": 500,
	"./bs": 501,
	"./bs.js": 501,
	"./ca": 502,
	"./ca.js": 502,
	"./cs": 503,
	"./cs.js": 503,
	"./cv": 504,
	"./cv.js": 504,
	"./cy": 505,
	"./cy.js": 505,
	"./da": 506,
	"./da.js": 506,
	"./de": 509,
	"./de-at": 507,
	"./de-at.js": 507,
	"./de-ch": 508,
	"./de-ch.js": 508,
	"./de.js": 509,
	"./dv": 510,
	"./dv.js": 510,
	"./el": 511,
	"./el.js": 511,
	"./en-au": 512,
	"./en-au.js": 512,
	"./en-ca": 513,
	"./en-ca.js": 513,
	"./en-gb": 514,
	"./en-gb.js": 514,
	"./en-ie": 515,
	"./en-ie.js": 515,
	"./en-il": 516,
	"./en-il.js": 516,
	"./en-in": 517,
	"./en-in.js": 517,
	"./en-nz": 518,
	"./en-nz.js": 518,
	"./en-sg": 519,
	"./en-sg.js": 519,
	"./eo": 520,
	"./eo.js": 520,
	"./es": 524,
	"./es-do": 521,
	"./es-do.js": 521,
	"./es-mx": 522,
	"./es-mx.js": 522,
	"./es-us": 523,
	"./es-us.js": 523,
	"./es.js": 524,
	"./et": 525,
	"./et.js": 525,
	"./eu": 526,
	"./eu.js": 526,
	"./fa": 527,
	"./fa.js": 527,
	"./fi": 528,
	"./fi.js": 528,
	"./fil": 529,
	"./fil.js": 529,
	"./fo": 530,
	"./fo.js": 530,
	"./fr": 533,
	"./fr-ca": 531,
	"./fr-ca.js": 531,
	"./fr-ch": 532,
	"./fr-ch.js": 532,
	"./fr.js": 533,
	"./fy": 534,
	"./fy.js": 534,
	"./ga": 535,
	"./ga.js": 535,
	"./gd": 536,
	"./gd.js": 536,
	"./gl": 537,
	"./gl.js": 537,
	"./gom-deva": 538,
	"./gom-deva.js": 538,
	"./gom-latn": 539,
	"./gom-latn.js": 539,
	"./gu": 540,
	"./gu.js": 540,
	"./he": 541,
	"./he.js": 541,
	"./hi": 542,
	"./hi.js": 542,
	"./hr": 543,
	"./hr.js": 543,
	"./hu": 544,
	"./hu.js": 544,
	"./hy-am": 545,
	"./hy-am.js": 545,
	"./id": 546,
	"./id.js": 546,
	"./is": 547,
	"./is.js": 547,
	"./it": 549,
	"./it-ch": 548,
	"./it-ch.js": 548,
	"./it.js": 549,
	"./ja": 550,
	"./ja.js": 550,
	"./jv": 551,
	"./jv.js": 551,
	"./ka": 552,
	"./ka.js": 552,
	"./kk": 553,
	"./kk.js": 553,
	"./km": 554,
	"./km.js": 554,
	"./kn": 555,
	"./kn.js": 555,
	"./ko": 556,
	"./ko.js": 556,
	"./ku": 557,
	"./ku.js": 557,
	"./ky": 558,
	"./ky.js": 558,
	"./lb": 559,
	"./lb.js": 559,
	"./lo": 560,
	"./lo.js": 560,
	"./lt": 561,
	"./lt.js": 561,
	"./lv": 562,
	"./lv.js": 562,
	"./me": 563,
	"./me.js": 563,
	"./mi": 564,
	"./mi.js": 564,
	"./mk": 565,
	"./mk.js": 565,
	"./ml": 566,
	"./ml.js": 566,
	"./mn": 567,
	"./mn.js": 567,
	"./mr": 568,
	"./mr.js": 568,
	"./ms": 570,
	"./ms-my": 569,
	"./ms-my.js": 569,
	"./ms.js": 570,
	"./mt": 571,
	"./mt.js": 571,
	"./my": 572,
	"./my.js": 572,
	"./nb": 573,
	"./nb.js": 573,
	"./ne": 574,
	"./ne.js": 574,
	"./nl": 576,
	"./nl-be": 575,
	"./nl-be.js": 575,
	"./nl.js": 576,
	"./nn": 577,
	"./nn.js": 577,
	"./oc-lnc": 578,
	"./oc-lnc.js": 578,
	"./pa-in": 579,
	"./pa-in.js": 579,
	"./pl": 580,
	"./pl.js": 580,
	"./pt": 582,
	"./pt-br": 581,
	"./pt-br.js": 581,
	"./pt.js": 582,
	"./ro": 583,
	"./ro.js": 583,
	"./ru": 584,
	"./ru.js": 584,
	"./sd": 585,
	"./sd.js": 585,
	"./se": 586,
	"./se.js": 586,
	"./si": 587,
	"./si.js": 587,
	"./sk": 588,
	"./sk.js": 588,
	"./sl": 589,
	"./sl.js": 589,
	"./sq": 590,
	"./sq.js": 590,
	"./sr": 592,
	"./sr-cyrl": 591,
	"./sr-cyrl.js": 591,
	"./sr.js": 592,
	"./ss": 593,
	"./ss.js": 593,
	"./sv": 594,
	"./sv.js": 594,
	"./sw": 595,
	"./sw.js": 595,
	"./ta": 596,
	"./ta.js": 596,
	"./te": 597,
	"./te.js": 597,
	"./tet": 598,
	"./tet.js": 598,
	"./tg": 599,
	"./tg.js": 599,
	"./th": 600,
	"./th.js": 600,
	"./tk": 601,
	"./tk.js": 601,
	"./tl-ph": 602,
	"./tl-ph.js": 602,
	"./tlh": 603,
	"./tlh.js": 603,
	"./tr": 604,
	"./tr.js": 604,
	"./tzl": 605,
	"./tzl.js": 605,
	"./tzm": 607,
	"./tzm-latn": 606,
	"./tzm-latn.js": 606,
	"./tzm.js": 607,
	"./ug-cn": 608,
	"./ug-cn.js": 608,
	"./uk": 609,
	"./uk.js": 609,
	"./ur": 610,
	"./ur.js": 610,
	"./uz": 612,
	"./uz-latn": 611,
	"./uz-latn.js": 611,
	"./uz.js": 612,
	"./vi": 613,
	"./vi.js": 613,
	"./x-pseudo": 614,
	"./x-pseudo.js": 614,
	"./yo": 615,
	"./yo.js": 615,
	"./zh-cn": 616,
	"./zh-cn.js": 616,
	"./zh-hk": 617,
	"./zh-hk.js": 617,
	"./zh-mo": 618,
	"./zh-mo.js": 618,
	"./zh-tw": 619,
	"./zh-tw.js": 619
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 1032;


/***/ }),

/***/ 1044:
/***/ (function(module, exports) {

module.exports = "<!-------------------------------------------------------------\n-------------******* Vista de Sucursal GRANDE *******------------\n--------------------------------------------------------------->\n<div *ngIf=\"identity && message =='Sucursal' && medida=='grande'\" class=\"navigation col-lg-2\">\n<div class=\"color\">\n  <div class=\"color-top\"></div>\n  <div style=\"text-align: center; margin-top: -5px;\">\n    <img src=\"{{'https://dev-soporte.timhortonsmx.com/img/hojamapple.png'}}\" class=\"avatar\" alt=\"Imagen\" style=\"margin-top:-10px; height: 100px; width: 100px\">\n    </div>\n  <h1 class=\"head-title\">\n    <a id=\"titulo\" style=\"height: 30px; margin-left: -20px;\" [routerLink]=\"['/home']\">\n      <img src=\"{{'https://dev-soporte.timhortonsmx.com/img/logotimckets.png'}}\" class=\"logo-gray\" alt=\"Imagen\" style=\"width: 220px; height: 50px; margin-top: -25px;\">\n    </a>\n  </h1>\n</div>\n\n  <nav>\n    <a class=\"textos\" [routerLink]=\"['/home']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 9%; height: 56px; font-family: 'sofia-pro'; font-size: 105%;\">\n      <svg style=\"margin-top: -4%; margin-left: 15px\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-house-fill\" viewBox=\"0 0 16 16\">\n        <path fill-rule=\"evenodd\" d=\"m8 3.293 6 6V13.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5V9.293l6-6zm5-.793V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\"/>\n        <path fill-rule=\"evenodd\" d=\"M7.293 1.5a1 1 0 0 1 1.414 0l6.647 6.646a.5.5 0 0 1-.708.708L8 2.207 1.354 8.854a.5.5 0 1 1-.708-.708L7.293 1.5z\"/>\n      </svg>\n      Inicio\n    </a>\n    <a class=\"textos\" [routerLink]=\"['/requestNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 7%;  height: 56px; font-family: 'sofia-pro'; font-size: 105%;\">\n      <span style=\"margin-left: 15px\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n      Nuevo Requerimiento\n    </a>\n    <a class=\"textos\" [routerLink]=\"['/requestProces']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 5%; height: 56px; font-family: 'sofia-pro'; font-size: 105%;\">\n      <svg style=\"margin-left: 15px\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" fill=\"currentColor\" class=\"bi bi-chat-dots-fill\" viewBox=\"0 0 16 16\">\n        <path d=\"M16 8c0 3.866-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.584.296-1.925.864-4.181 1.234-.2.032-.352-.176-.273-.362.354-.836.674-1.95.77-2.966C.744 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7zM5 8a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm4 0a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"/>\n      </svg>\n    Requerimientos en\n    <div style=\"margin-left: 23%;\">\n      Proceso\n    </div>\n  </a>\n    <a class=\"textos\" [routerLink]=\"['/answer']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 7%; height: 56px; font-family: 'sofia-pro'; font-size: 105%;\">\n      <span style=\"margin-left: 15px\" class=\"glyphicon glyphicon-cd\" aria-hidden=\"true\"></span>\n      Preguntas y Respuestas\n    </a>\n    <a class=\"textos\" [routerLink]=\"['/requestClosed']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 4%; height: 58px; font-family: 'sofia-pro'; font-size: 105%;\">\n        <span style=\"margin-left: 15px\" class=\"glyphicon glyphicon-remove-sign\" aria-hidden=\"true\"></span>\n      Requerimientos\n      <div style=\"margin-left: 23%;\">\n        solucionados\n      </div>\n    </a>\n    \n\n  </nav>\n\n  <div>\n    <nav id=\"user_logged\">\n      <div style=\"margin-top: 2px;\">\n    <span style=\"text-align: center;\">\n      {{identity.name}}\n    </span>\n    <span class=\"btn\" style=\"color: #3F2021; background-color: #DDCBA4\" (click)=\"logout()\" [routerLink]=\"['/']\">\n      Cerrar sesion\n    </span>\n    <a style=\"margin-top: 17px; color:#DDCBA4\" [routerLink]=\"['/usersEdit']\" [routerLinkActive]=\"['actived']\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-gear-fill\" viewBox=\"0 0 16 16\">\n        <path d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z\"/>\n      </svg>\n      Mis datos\n    </a>\n    <div style=\"margin-left: 15px;\">\n      <img src=\"{{'https://dev-soporte.timhortonsmx.com/img/logocafe.png'}}\" class=\"logo-gray\" alt=\"Imagen\">\n    </div>\n      </div>\n    </nav>\n  </div>\n\n</div>\n\n<div class=\"col-lg-2\" *ngIf=\"identity && message =='Sucursal' && medida=='grande'\">\n</div>\n\n<div *ngIf=\"identity && message =='Sucursal' && medida=='grande'\"  class=\"col-lg-10\" id=\"contenido\">\n  <router-outlet></router-outlet>\n</div>\n\n<div  *ngIf=\"identity && message =='Sucursal' && medida=='grande'\" class=\"clearfix\"></div>\n\n<!-----******* Cierre de Vista de Sucursal GRANDE *************************----->\n\n\n<!-------------------------------------------------------------\n-------------******* Vista de Sucursal CHICO *******------------\n--------------------------------------------------------------->\n\n<div *ngIf=\"identity && message =='Sucursal' && medida=='chica'\" class=\"navsup2 col-lg-12\">\n \n  <div>\n    <button type=\"button\" class=\"btn btn-link\" style=\"color: white; width: 60px; margin-top: -22px;\" (click)=\"menus()\">\n      <div>\n      <h3><span class=\"glyphicon glyphicon-menu-hamburger\"></span></h3>\n    </div>\n  \n    </button>\n   </div>\n\n   <div style=\" margin-left: 70px; margin-top: -58px;\">\n    <img src=\"{{'https://dev-soporte.timhortonsmx.com/img/logotimckets.png'}}\" class=\"logo-gray\" alt=\"Imagen\" style=\"width: 200px; height: 50px;\">\n   </div>\n   \n </div>\n\n\n <div *ngIf=\"identity && message =='Sucursal' && medida=='chica' && menu==true\" class=\"navigation2 col-lg-2\" style=\"position: initial;\">\n  <div class=\"color\">\n    <div class=\"color-top\"></div>\n\n    <h1 class=\"head-title\">\n      <a id=\"titulo\" style=\"height: 9px;\" [routerLink]=\"['/home']\">\n      </a>\n    </h1>\n  </div>\n  \n    <nav>\n      <a class=\"textos\" (click)=\"menus()\" [routerLink]=\"['/home']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 12px; height: 40px;\">\n        <svg style=\"margin-top: -2%; margin-left: 15px\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-house-fill\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"m8 3.293 6 6V13.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5V9.293l6-6zm5-.793V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.293 1.5a1 1 0 0 1 1.414 0l6.647 6.646a.5.5 0 0 1-.708.708L8 2.207 1.354 8.854a.5.5 0 1 1-.708-.708L7.293 1.5z\"/>\n        </svg>\n        Inicio\n      </a>\n      <a class=\"textos\" (click)=\"menus()\" [routerLink]=\"['/requestNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 12px;  height: 45px;\">\n        <span style=\"margin-left: 15px ; margin-top: -2%;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n        Nuevo Requerimiento\n      </a>\n      <a class=\"textos\" (click)=\"menus()\" [routerLink]=\"['/requestProces']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 12px; height: 45px;\">\n        <svg style=\"margin-left: 15px; margin-top: -2%;\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" fill=\"currentColor\" class=\"bi bi-chat-dots-fill\" viewBox=\"0 0 16 16\">\n          <path d=\"M16 8c0 3.866-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.584.296-1.925.864-4.181 1.234-.2.032-.352-.176-.273-.362.354-.836.674-1.95.77-2.966C.744 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7zM5 8a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm4 0a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"/>\n        </svg>\n      Requerimientos en Proceso\n    </a>\n      <a class=\"textos\" (click)=\"menus()\" [routerLink]=\"['/answer']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 12px; height: 45px;\">\n        <span style=\"margin-left: 15px ; margin-top: -2%;\" class=\"glyphicon glyphicon-cd\" aria-hidden=\"true\"></span>\n        Preguntas y Respuestas\n      </a>\n      <a class=\"textos\" (click)=\"menus()\" [routerLink]=\"['/requestClosed']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 13px; height: 45px;\">\n          <span style=\"margin-left: 15px ; margin-top: -1%;\" class=\"glyphicon glyphicon-remove-sign\" aria-hidden=\"true\"></span>\n        Requerimientos solucionados\n      </a>\n      \n  \n    </nav>\n  \n    <div>\n      <nav id=\"user_logged2\">\n        <div style=\"margin-top: 2px;\">\n      <span style=\"text-align: center;\">\n        {{identity.name}}\n      </span>\n      <span class=\"btn\" style=\"color: #3F2021; background-color: #DDCBA4\" (click)=\"logout()\" [routerLink]=\"['/']\">\n        Cerrar sesion\n      </span>\n      <a style=\"margin-top: 17px; color: #DDCBA4\" (click)=\"menus()\"  [routerLink]=\"['/usersEdit']\" [routerLinkActive]=\"['actived']\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-gear-fill\" viewBox=\"0 0 16 16\">\n          <path d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z\"/>\n        </svg>\n        Mis datos\n      </a>\n      <div style=\"margin-left: 0px;\">\n        <img src=\"{{'https://dev-soporte.timhortonsmx.com/img/logocafe.png'}}\" class=\"logo-gray\" alt=\"Imagen\">\n      </div>\n        </div>\n      </nav>\n    </div>\n  \n  </div>\n\n  <div class=\"col-lg-2\" *ngIf=\"identity && message =='Sucursal' && medida=='chica'\">\n  </div>\n  \n  <div *ngIf=\"identity && message =='Sucursal' && medida=='chica'\"  class=\"col-lg-10\" style=\"margin-top: 10%;\" id=\"contenido\">\n    <router-outlet></router-outlet>\n  </div>\n  \n  <div  *ngIf=\"identity && message =='Sucursal' && medida=='chica'\" class=\"clearfix\"></div>\n  \n  <!-----******* Cierre de Vista de Sucursal CHICO *************************----->\n  \n\n\n<!-------------------------------------------------------------\n-------------******* Vista de Administrador GRANDE *******------------\n--------------------------------------------------------------->\n\n<div *ngIf=\"identity && medida=='grande' && (message =='Administrador' || message =='Super-Admin' || message =='Area-Manager' || message =='Proveedor'  || message =='CallCenter') \" class=\"navigation0 col-lg-12\">\n <div class=\"navsup col-lg-12\" >\n   <div style=\"text-align: end; margin-left: 4%; padding-top: 0.6%;\" class=\"col-lg-4\">\n   </div>\n\n   <div style=\"text-align: center; margin-top: -0.5%; padding-left:10%;\" class=\"col-lg-3\" >\n    <button type=\"button\" class=\"btn btn-link\" style=\"color: #ffffff;\" (click)=\"logout()\" [routerLink]=\"['/']\">\n      <div style=\"margin-top: -70%; margin-left: -100%;\">\n      <h3><span class=\"glyphicon glyphicon-bell\"></span></h3>\n    </div>\n  \n    </button>\n   </div>\n\n   <div style=\"text-align: end;\">\n\n      <label (click)=\"prfile()\" >\n\n        <div class=\"col-md-1\" style=\"margin-top: 2%; margin-left: 4.5%;\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-gear-fill\" viewBox=\"0 0 16 16\">\n            <path d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z\"/>\n          </svg>\n        </div>  \n        <div class=\"col-md-12\" style=\"margin-top: -6%;\">\n          {{identity.fname}} {{identity.lname}}\n        </div>      \n       </label>\n\n      <button type=\"button\" class=\"btn btn-link\" style=\"color: #ffffff; margin-top: -2%;\" (click)=\"logout()\" [routerLink]=\"['/']\">\n        <div style=\"margin-left: -90%;\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-power\" viewBox=\"0 0 16 16\">\n            <path d=\"M7.5 1v7h1V1h-1z\"/>\n            <path d=\"M3 8.812a4.999 4.999 0 0 1 2.578-4.375l-.485-.874A6 6 0 1 0 11 3.616l-.501.865A5 5 0 1 1 3 8.812z\"/>\n          </svg>\n      </div>\n      </button>\n\n\n  </div>\n  <div class=\"clearfix\"></div>\n\n  </div>\n\n</div>\n\n<div *ngIf=\"identity && medida=='grande' && (message =='Administrador'|| message =='Super-Admin' || message =='Area-Manager' || message =='Proveedor' || message =='CallCenter') \" class=\"navigation col-lg-2\">\n  <!-- <div style=\"background-color: #bd1327; margin-top: -10%; margin-left: -6%; height:6%; width: 700%;\">\n    <div class=\"color\">\n    </div>\n      <h3 style=\"margin-left: 3.5%; padding-top: 0.5%; color: white;\">\n        Timckets 2.0\n      </h3>\n\n  </div> -->\n  <div class=\"color2\">\n    <div style=\"margin-top: -5px;\">\n        <img src=\"{{'https://dev-soporte.timhortonsmx.com/img/logotimckets.png'}}\" class=\"logo-gray\" alt=\"Imagen\" style=\"width: 200px; height: 50px;\">\n    </div>\n    <!-- <h3 style=\"margin-left: 17%; margin-top: 1.5%; color: white;\">\n      Timckets 2.0\n    </h3> -->\n  </div>\n\n  \n    <nav style=\"margin-top: 40%;\">\n      <a class=\"textos\" [routerLink]=\"['/homeAdmin']\" [routerLinkActive]=\"['actived']\" (click)=\"clickNav=''\" style=\"margin-left: -15px; padding-top: 7%; font-family: 'sofia-pro'; font-size: 105%;\">\n        <svg style=\"margin-top: -7px; margin-left: 15px;\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-house-fill\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"m8 3.293 6 6V13.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5V9.293l6-6zm5-.793V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.293 1.5a1 1 0 0 1 1.414 0l6.647 6.646a.5.5 0 0 1-.708.708L8 2.207 1.354 8.854a.5.5 0 1 1-.708-.708L7.293 1.5z\"/>\n        </svg>\n        Inicio\n      </a>\n      <a class=\"textos\" (click)=\"clickNav='misTimckets'\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n        <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n        Mis Timckets\n      </a>\n      <div *ngIf=\"clickNav=='misTimckets'\"  style=\"text-align: start; margin-left: 12%;\">\n        <a class=\"textos\" [routerLink]=\"['/requestProces']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n          <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n          Asignados a Mí\n        </a>\n        <a class=\"textos\" [routerLink]=\"['/requestClosed']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n          <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n          Cerrados\n        </a>\n        <a class=\"textos\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n          <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n          Resumen General\n        </a>\n        <a class=\"textos\" [routerLink]=\"['/requestNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n          <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n          Nuevo Requerimiento\n        </a>\n      </div>\n      <a class=\"textos\" (click)=\"clickNav=''\"  [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 7%; font-family: 'sofia-pro'; font-size: 105%;\">\n        <svg style=\"margin-top: -4.5%; margin-left:15px\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" fill=\"currentColor\" class=\"bi bi-chat-dots-fill\" viewBox=\"0 0 16 16\">\n          <path d=\"M16 8c0 3.866-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.584.296-1.925.864-4.181 1.234-.2.032-.352-.176-.273-.362.354-.836.674-1.95.77-2.966C.744 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7zM5 8a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm4 0a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"/>\n        </svg>\n      Notificaciones\n    </a>\n      <a class=\"textos\" (click)=\"clickNav=''\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n        <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-cd\" aria-hidden=\"true\"></span>\n        Perfil\n      </a>\n      <a class=\"textos\" *ngIf=\"identity.type!='proveedor'\" (click)=\"clickNav='crear'\" style=\"margin-left: -15px; padding-top: 5%; height: 55px; font-family: 'sofia-pro'; font-size: 105%;\">\n        <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n        Creación de \n        <div style=\"margin-left: 23%;\">\n          Información\n        </div>\n      </a>\n          <div *ngIf=\"clickNav=='crear' && identity.email!='mgj@timhortonsmx.com'\"  style=\"text-align: star; margin-left: 12%;\">\n            <a class=\"textos\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n              <svg style=\"margin-left: 9px;\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\"  aria-hidden=\"true\" class=\"bi bi-person-plus-fill\" viewBox=\"0 0 16 16\">\n                <path d=\"M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\n                <path fill-rule=\"evenodd\" d=\"M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z\"/>\n              </svg>                Crear Usuarios\n            </a>\n            <a class=\"textos\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n              <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n              Crear de Áreas\n            </a>\n            <a class=\"textos\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n              <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n              Crear Departamentos\n            </a>\n            <a class=\"textos\" *ngIf=\"identity.type=='superAdmin' || identity.type=='admin' \" [routerLink]=\"['/issuesNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n              <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n              Crear Servicios\n            </a>\n            <a class=\"textos\" *ngIf=\"identity.type=='superAdmin' || identity.type=='admin' \" [routerLink]=\"['/answerNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n              <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n              Preguntas/Respuestas\n            </a>\n          </div>\n\n          <div *ngIf=\"clickNav=='crear' && identity.email=='mgj@timhortonsmx.com'\"  style=\"text-align: star; margin-left: 12%;\">\n            <a class=\"textos\" [routerLink]=\"['/usersNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n              <svg style=\"margin-left: 9px;\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\"  aria-hidden=\"true\" class=\"bi bi-person-plus-fill\" viewBox=\"0 0 16 16\">\n                <path d=\"M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\n                <path fill-rule=\"evenodd\" d=\"M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z\"/>\n              </svg>                Crear Usuarios\n            </a>\n            <a class=\"textos\" [routerLink]=\"['/areasNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n              <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n              Crear de Áreas\n            </a>\n            <a class=\"textos\" [routerLink]=\"['/departmentsNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n              <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n              Crear Departamentos\n            </a>\n            <a class=\"textos\" [routerLink]=\"['/issuesNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n              <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n              Crear Servicios\n            </a>\n            <a class=\"textos\" [routerLink]=\"['/answerNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n              <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n              Preguntas/Respuestas\n            </a>\n          </div>\n\n          <a class=\"textos\" (click)=\"clickNav='editar'\" style=\"margin-left: -15px; padding-top: 5%; height: 55px; font-family: 'sofia-pro'; font-size: 105%;\">\n            <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n            Editar \n            <div style=\"margin-left: 23%;\">\n              Información\n            </div>\n          </a>\n            <div *ngIf=\"clickNav=='editar'\"  style=\"text-align: start; margin-left: 12%;\">\n              <a class=\"textos\" [routerLink]=\"['/usersEdit']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n                <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n                Editar Usuarios\n              </a>\n              <a class=\"textos\" *ngIf=\"identity.type!='proveedor'\" [routerLink]=\"['/localsEdit']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n                <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n                Editar Sucursales\n              </a>\n              <a class=\"textos\" *ngIf=\"identity.type!='proveedor'\" [routerLink]=\"['/areasEdit']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n                <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n                Editar de Áreas\n              </a>\n              <a class=\"textos\" *ngIf=\"identity.type!='proveedor'\" [routerLink]=\"['/departmentsEdit']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n                <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n                Editar Departamentos\n              </a>\n              <a class=\"textos\" *ngIf=\"identity.type!='proveedor'\" [routerLink]=\"['/issuesEdit']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 6%; font-family: 'sofia-pro'; font-size: 105%;\">\n                <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n                Editar Servicios\n              </a>\n            </div>\n\n            <a class=\"textos\" *ngIf=\"identity.type=='superAdmin'|| identity.history=='si'\" [routerLink]=\"['/history']\" [routerLinkActive]=\"['actived']\" (click)=\"clickNav=''\" style=\"margin-left: -15px; padding-top: 7%; font-family: 'sofia-pro'; font-size: 105%;\">\n            <i style=\"margin-left: 15px;\" class=\"w3-xxxlarge glyphicon glyphicon-menu-hamburger\"></i>\n              Historial\n            </a>\n  \n    </nav>\n  \n    <div>\n      <nav id=\"user_logged\">\n        <div style=\"margin-top: 1px; margin-left: 15px;\">\n      <img src=\"{{'https://dev-soporte.timhortonsmx.com/img/logocafe.png'}}\" class=\"logo-gray\" alt=\"Imagen\">\n        </div>\n      </nav>\n    </div>\n  \n  </div>\n  \n  <div class=\"col-lg-2\" *ngIf=\"identity && (medida=='grande' && message =='Administrador' || message =='Super-Admin' || message =='Area-Manager' || message =='Proveedor' || message =='CallCenter')\">\n  </div>\n\n\n<div *ngIf=\"identity && medida=='grande' && (message =='Administrador' || message =='Super-Admin' || message =='Area-Manager' || message =='Proveedor' || message =='CallCenter')\"  class=\"col-lg-10\" id=\"contenido\" style=\"margin-top: 2%;\">\n\n  <router-outlet></router-outlet>\n</div>\n\n<div  *ngIf=\"identity && medida=='grande' && (message =='Administrador' || message =='Super-Admin' || message =='Area-Manager' || message =='Proveedor' || message =='CallCenter')\" class=\"clearfix\"></div>\n<!-----******* Cierre de Vista de Administrador GRANDE *************************----->\n\n\n\n\n\n\n<!-------------------------------------------------------------\n-------------******* Vista de Administrador CHICA *******------------\n---------------------------------------------------------------> \n<div *ngIf=\"identity && medida=='chica' && (message =='Administrador' || message =='Super-Admin' || message =='Area-Manager' || message =='Proveedor'  || message =='CallCenter') \" class=\"navsup2 col-lg-12\" style=\"margin-top: -1px;\">\n \n  <div>\n    <button type=\"button\" class=\"btn btn-link\" style=\"color: #ffffff; width: 60px; margin-top: -22px;\" (click)=\"menus()\">\n      <div>\n      <h3><span class=\"glyphicon glyphicon-menu-hamburger\"></span></h3>\n    </div>\n  \n    </button>\n   </div>\n\n   <div style=\" margin-left: 40px; margin-top: -58px;\">\n      <img src=\"{{'https://dev-soporte.timhortonsmx.com/img/logotimckets.png'}}\" class=\"logo-gray\" alt=\"Imagen\" style=\"width: 200px; height: 50px;\">\n   </div>\n\n   <div class=\"col-md-12\"  style=\" text-align: end; margin-left: 240px; margin-top: -34px; width: 40%;\">\n    {{identity.fname}}\n\n    <button type=\"button\" class=\"btn btn-link\" style=\"color: #ffffff; margin-top: -5%; margin-left: -13px;\" (click)=\"logout()\" [routerLink]=\"['/']\">\n      <div>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-power\" viewBox=\"0 0 16 16\">\n          <path d=\"M7.5 1v7h1V1h-1z\"/>\n          <path d=\"M3 8.812a4.999 4.999 0 0 1 2.578-4.375l-.485-.874A6 6 0 1 0 11 3.616l-.501.865A5 5 0 1 1 3 8.812z\"/>\n        </svg>\n    </div>\n    </button>\n  </div>  \n   \n </div>\n\n\n\n <div *ngIf=\"identity && medida=='chica' && menu==true && (message =='Administrador'|| message =='Super-Admin' || message =='Area-Manager' || message =='Proveedor' || message =='CallCenter') \" class=\"navigation2 col-lg-2\"  style=\"position: initial; height: 90%;\">\n  <div class=\"color\">\n    <div class=\"color-top\"></div>\n\n    <h1 class=\"head-title\">\n      <a id=\"titulo\" style=\"height: 0px;\" [routerLink]=\"['/homeAdmin']\">\n      </a>\n    </h1>\n  </div>\n\n     <nav>\n\n      <a class=\"textos\" [routerLink]=\"['/homeAdmin']\" [routerLinkActive]=\"['actived']\" (click)=\"menus(clickNav='')\" style=\"margin-left: -15px; padding-top: 12px; height: 40px;\">\n        <svg style=\"margin-top: -2%; margin-left: 15px\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" class=\"bi bi-house-fill\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"m8 3.293 6 6V13.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5V9.293l6-6zm5-.793V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.293 1.5a1 1 0 0 1 1.414 0l6.647 6.646a.5.5 0 0 1-.708.708L8 2.207 1.354 8.854a.5.5 0 1 1-.708-.708L7.293 1.5z\"/>\n        </svg>\n        Inicio\n      </a>\n\n       <a class=\"textos\" (click)=\"clickNav='misTimckets'\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n         <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n         Mis Timckets\n       </a>\n       <div *ngIf=\"clickNav=='misTimckets'\" (click)=\"menus()\"  style=\"text-align: start; margin-left: 12%;\">\n         <a class=\"textos\" [routerLink]=\"['/requestProces']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n           <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n           Asignados a Mí\n         </a>\n         <a class=\"textos\" [routerLink]=\"['/requestClosed']\" (click)=\"menus()\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n           <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n           Cerrados\n         </a>\n         <a class=\"textos\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\" (click)=\"menus()\">\n           <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n           Resumen General\n         </a>\n         <a class=\"textos\" [routerLink]=\"['/requestNew']\" (click)=\"menus()\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n           <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n           Nuevo Requerimiento\n         </a>\n       </div>\n       <a class=\"textos\" (click)=\"menus(clickNav='')\"  [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n         <svg style=\"margin-top: -0.5%; margin-left:15px\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" fill=\"currentColor\" class=\"bi bi-chat-dots-fill\" viewBox=\"0 0 16 16\">\n           <path d=\"M16 8c0 3.866-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.584.296-1.925.864-4.181 1.234-.2.032-.352-.176-.273-.362.354-.836.674-1.95.77-2.966C.744 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7zM5 8a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm4 0a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"/>\n         </svg>\n       Notificaciones\n     </a>\n       <a class=\"textos\" (click)=\"menus(clickNav='')\" [routerLink]=\"['/usersEdit']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n         <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-cd\" aria-hidden=\"true\"></span>\n         Perfil\n       </a>\n       <a class=\"textos\" *ngIf=\"identity.type!='proveedor'\" (click)=\"clickNav='crear'\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n         <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n         Creación de Información\n       </a>\n           <div *ngIf=\"clickNav=='crear' && identity.email!='mgj@timhortonsmx.com'\"  style=\"text-align: star; margin-left: 12%;\">\n             <a class=\"textos\" (click)=\"menus()\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n               <svg style=\"margin-left: 9px;\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\"  aria-hidden=\"true\" class=\"bi bi-person-plus-fill\" viewBox=\"0 0 16 16\">\n                 <path d=\"M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\n                 <path fill-rule=\"evenodd\" d=\"M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z\"/>\n               </svg>                Crear Usuarios\n             </a>\n             <a class=\"textos\" (click)=\"menus()\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n               <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n               Crear de Áreas\n             </a>\n             <a class=\"textos\" (click)=\"menus()\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n               <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n               Crear Departamentos\n             </a>\n             <a class=\"textos\" (click)=\"menus()\" *ngIf=\"identity.type=='superAdmin' || identity.type=='admin' \" [routerLink]=\"['/issuesNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n               <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n               Crear Servicios\n             </a>\n             <a class=\"textos\" (click)=\"menus()\" *ngIf=\"identity.type=='superAdmin' || identity.type=='admin' \" [routerLink]=\"['/answerNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n               <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n               Preguntas/Respuestas\n             </a>\n           </div>\n \n           <div *ngIf=\"clickNav=='crear' && identity.email=='mgj@timhortonsmx.com'\"  style=\"text-align: star; margin-left: 12%;\">\n             <a class=\"textos\" (click)=\"menus()\" [routerLink]=\"['/usersNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n               <svg style=\"margin-left: 9px;\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\"  aria-hidden=\"true\" class=\"bi bi-person-plus-fill\" viewBox=\"0 0 16 16\">\n                 <path d=\"M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\n                 <path fill-rule=\"evenodd\" d=\"M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z\"/>\n               </svg>                Crear Usuarios\n             </a>\n             <a class=\"textos\" (click)=\"menus()\" [routerLink]=\"['/areasNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n               <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n               Crear de Áreas\n             </a>\n             <a class=\"textos\" (click)=\"menus()\" [routerLink]=\"['/departmentsNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n               <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n               Crear Departamentos\n             </a>\n             <a class=\"textos\" (click)=\"menus()\" [routerLink]=\"['/issuesNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n               <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n               Crear Servicios\n             </a>\n             <a class=\"textos\" (click)=\"menus()\" [routerLink]=\"['/answerNew']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n               <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n               Preguntas/Respuestas\n             </a>\n           </div>\n \n           <a class=\"textos\" (click)=\"clickNav='editar'\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n             <span style=\"margin-left: 15px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n             Editar Información\n           </a>\n             <div *ngIf=\"clickNav=='editar'\"  style=\"text-align: start; margin-left: 12%;\">\n               <a class=\"textos\" (click)=\"menus()\" [routerLink]=\"['/usersEdit']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n                 <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n                 Editar Usuarios\n               </a>\n               <a class=\"textos\" (click)=\"menus()\" *ngIf=\"identity.type!='proveedor'\" [routerLink]=\"['/localsEdit']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n                 <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n                 Editar Sucursales\n               </a>\n               <a class=\"textos\" (click)=\"menus()\" *ngIf=\"identity.type!='proveedor'\" [routerLink]=\"['/areasEdit']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n                 <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n                 Editar de Áreas\n               </a>\n               <a class=\"textos\" (click)=\"menus()\" *ngIf=\"identity.type!='proveedor'\" [routerLink]=\"['/departmentsEdit']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n                 <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n                 Editar Departamentos\n               </a>\n               <a class=\"textos\" (click)=\"menus()\" *ngIf=\"identity.type!='proveedor'\" [routerLink]=\"['/issuesEdit']\" [routerLinkActive]=\"['actived']\" style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n                 <span style=\"margin-left: 9px;\" class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n                 Editar Servicios\n               </a>\n             </div>\n \n             <a class=\"textos\" *ngIf=\"identity.type=='superAdmin'|| identity.history=='si'\" [routerLink]=\"['/history']\" [routerLinkActive]=\"['actived']\" (click)=\"menus(clickNav='')\"  style=\"margin-left: -15px; padding-top: 11px; height: 40px;\">\n             <i style=\"margin-left: 15px;\" class=\"w3-xxxlarge glyphicon glyphicon-menu-hamburger\"></i>\n               Historial\n             </a>\n   \n     </nav>\n   \n     <div>\n       <nav id=\"user_logged2\">\n         <div style=\"margin-left: 15px; margin-top: 10px;\">\n          <img src=\"{{'https://dev-soporte.timhortonsmx.com/img/logocafe.png'}}\" class=\"logo-gray\" alt=\"Imagen\">\n        </div>\n       </nav>\n     </div>\n   \n   </div>\n   \n   <div class=\"col-lg-2\" *ngIf=\"identity && medida=='chica' && (message =='Administrador' || message =='Super-Admin' || message =='Area-Manager' || message =='Proveedor' || message =='CallCenter')\">\n   </div>\n \n \n <div *ngIf=\"identity && medida=='chica' && (message =='Administrador' || message =='Super-Admin' || message =='Area-Manager' || message =='Proveedor' || message =='CallCenter')\"  class=\"col-lg-10\" id=\"contenido\" style=\"margin-top: 10%;\">\n   <router-outlet></router-outlet>\n </div>\n \n <div  *ngIf=\"identity && medida=='chica' && (message =='Administrador' || message =='Super-Admin' || message =='Area-Manager' || message =='Proveedor' || message =='CallCenter')\" class=\"clearfix\"></div>\n\n <!-----******* Cierre de Vista de Administrador CHICA *************************----->\n \n\n\n\n\n\n\n\n\n<div *ngIf=\"!identity && changePass==false\" class=\"col-lg-12\">\n    \n  <div class=\"login-box\">\n    <img src=\"{{'https://dev-soporte.timhortonsmx.com/img/logo-short.jpeg'}}\" class=\"avatar\" alt=\"Imagen\">\n    <h1 style=\"font-family: 'sofia-pro'; font-size: 190%; font-weight:520;\">Timckets</h1>\n    <form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n      <!-- USERNAME INPUT -->\n      <label for=\"username\">Usuario ó email</label>\n      <input type=\"text\" #email=\"ngModel\" name=\"email\" [(ngModel)]=\"users.email\" placeholder=\"Ingresar usuario ó email\">\n      <!-- PASSWORD INPUT -->\n      <label for=\"password\">Contraseña</label>\n      <input type=\"password\" #password=\"ngModel\" name=\"password\" [(ngModel)]=\"users.password\" placeholder=\"Ingresar contraseña\">\n      <input style=\"margin-top: 3%;\" type=\"submit\" value=\"Ingresar\">\n      <a href=\"#\" (click)=\"resumePasword()\" style=\"margin-top: 5%;\">Restablecer contraseña</a>\n    </form>\n  </div>\n  <div class=\"clearfix\"></div>\n\n</div>\n\n<div *ngIf=\"!identity && changePass==true\" class=\"col-lg-12\">\n  <div class=\"card\" style=\"height: 100%; margin-left: 25%; margin-right: 25%; margin-top: 1%;\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n          <h2 style=\"text-align: center;\"> Cambio de contraseña</h2>\n            <form #userUpdateForm=\"ngForm\" (ngSubmit)=\"onSubmitChangePass()\" class=\"col-md-10\">\n                <div class=\"col-lg-12\">\n                    <div style=\"margin-top: 30px ;margin-bottom: 5%;\">\n                        <div class=\"col-md-12\" style=\"margin-top: 30px;\">\n                            <label class=\"col-md-4\" style=\"text-align: right;\">Nueva contraseña:</label>\n                            <div class=\"col-md-7\">\n                                <input type=\"password\" #name=\"ngModel\" name=\"password\" [(ngModel)]=\"password\" class=\"form-control\"/>\n                            </div>\n                        </div>\n                        <div class=\"clearfix\"></div>\n\n                        <div class=\"col-md-12\" style=\"margin-top: 30px;\">\n                            <label class=\"col-md-4\" style=\"text-align: right;\">Nueva contraseña:</label>\n                            <div class=\"col-md-7\">\n                                <input type=\"password\" #name=\"ngModel\" name=\"password2\" [(ngModel)]=\"password2\" class=\"form-control\"/>\n                            </div>\n                        </div>\n                        <div class=\"clearfix\"></div>\n                        <div class=\"col-md-11\" style=\"margin-top: 30px ;margin-bottom: 5%; text-align: center;\">\n                            <span class=\"btn btn-primary\" (click)=\"changePassword2()\" >\n                                Cambiar contraseña\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n        <div class=\"clearfix\"></div>\n    </div>\n</div>\n</div>\n\n<footer >\n  <div *ngIf=\"!identity && changePass==false\" style=\"position: fixed; bottom: 3px; left: 1%;\">\n    <p style=\"font-size: 90%; color: #3F2021\">{{version}}</p>\n  </div>\n  <div *ngIf=\"!identity && changePass==false\" style=\"position: fixed; bottom: 3px; right: 1%; color: #3F2021\">\n    <p >Timckets 2023 Ⓜ</p>\n  </div>\n</footer>\n\n  <div *ngIf=\"identity && medida=='grande'\" style=\"position: fixed; bottom: 3px; left: 1%;\">\n    <p style=\"font-size: 90%; color: #DDCBA4\">{{version}}</p>\n  </div>\n  <div *ngIf=\"identity && medida=='chica'\" style=\"position: fixed; bottom: 3px; left: 1%;\">\n    <p style=\"font-size: 90%; color: #3F2021\">{{version}}</p>\n  </div>\n\n  <div *ngIf=\"identity\" style=\"position: fixed; bottom: 3px; right: 1%; color: #3F2021\">\n    <p >Timckets 2023 Ⓜ</p>\n  </div>\n\n<style>\n\n.textos{\n  color: #DDCBA4;\n}\n\n.actived{\n    background-color: #DDCBA4;\n    color: #3F2021;\n    width: 113%;\n}\n\n.login-box {\n  margin: auto;\n  text-align: center;\n  width: 310px;\n  height: 440px;\n  background: #DDCBA4;\n  color: #3F2021;\n  position: center;\n  box-sizing: border-box;\n  padding: 70px 30px;\n  margin-top: 120px;\n  border-radius: 20px\n}\n\n.login-box .avatar {\n  width: 100px;\n  height: 100px;\n  border-radius: 40%;\n  position: absolute;\n  left: calc(50% - 50px);\n  overflow: hidden;\n  background-color: #C8102E;\n  margin-top: -120px;\n}\n\n.login-box h1 {\n  margin: 0;\n  padding: 0 0 25px;\n  text-align: center;\n  font-size: 22px;\n}\n\n.login-box label {\n  margin: 0;\n  padding: 0;\n  font-weight: bold;\n  display: block;\n  text-align: start;\n}\n\n.login-box input {\n  width: 100%;\n  margin-bottom: 25px;\n}\n\n.login-box input[type=\"text\"], .login-box input[type=\"password\"] {\n  border: none;\n  border-bottom: 1px solid #3F2021;\n  background: transparent;\n  outline: none;\n  height: 40px;\n  color: #3F2021;\n  font-size: 16px;\n}\n\n.login-box input[type=\"submit\"] {\n  border: none;\n  outline: none;\n  height: 40px;\n  background: #C8102E;\n  color: rgb(255, 255, 255);\n  font-size: 18px;\n  border-radius: 20px;\n}\n\n.login-box input[type=\"submit\"]:hover {\n  cursor: pointer;\n  background: #810707;\n  color: rgba(255, 255, 255, 0.979);\n}\n\n.login-box a {\n  text-decoration: none;\n  font-size: 12px;\n  line-height: 20px;\n  color: #79311d;\n}\n\n.login-box a:hover {\n  color: rgb(12, 11, 11);\n}\n.logo-navi{\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  overflow: hidden;\n  background-color: #C8102E;\n  margin-left: 37%;\n}\n.newImg{\n  color: rgb(165, 164, 164);\n  width: 80px;\n  height: 100px;\n}\n.color-top{\n  background-color: #C8102E;\n  margin-left: -10%;\n  width: 100%;\n  height: 15px;\n}\n\n\n.logo-gray{\n  width: 130px;\n  margin-left: 30px;\n}\n\n@import url(\"https://p.typekit.net/p.css?s=1&k=lkr2zif&ht=tk&f=24539.24540.24547&a=6178157&app=typekit&e=css\");\n@font-face {\nfont-family:\"sofia-pro\";\nsrc:url(\"https://use.typekit.net/af/5d97ff/00000000000000007735f999/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"woff2\"),url(\"https://use.typekit.net/af/5d97ff/00000000000000007735f999/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"woff\"),url(\"https://use.typekit.net/af/5d97ff/00000000000000007735f999/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"opentype\");\nfont-display:auto;font-style:normal;font-weight:700;font-stretch:normal;\n}\n@font-face {\nfont-family:\"sofia-pro\";\nsrc:url(\"https://use.typekit.net/af/66e20c/00000000000000007735f993/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3\") format(\"woff2\"),url(\"https://use.typekit.net/af/66e20c/00000000000000007735f993/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3\") format(\"woff\"),url(\"https://use.typekit.net/af/66e20c/00000000000000007735f993/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3\") format(\"opentype\");\nfont-display:auto;font-style:italic;font-weight:700;font-stretch:normal;\n}\n@font-face {\nfont-family:\"sofia-pro\";\nsrc:url(\"https://use.typekit.net/af/b718ff/00000000000000007735f98d/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"woff2\"),url(\"https://use.typekit.net/af/b718ff/00000000000000007735f98d/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"woff\"),url(\"https://use.typekit.net/af/b718ff/00000000000000007735f98d/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"opentype\");\nfont-display:auto;font-style:normal;font-weight:400;font-stretch:normal;\n}\n\n  </style>"

/***/ }),

/***/ 1045:
/***/ (function(module, exports) {

module.exports = "<div class=\"col-lg-12\" >\n    <h1 class=\"col-md-10\">{{title}}</h1>\n    <div class=\"clearfix\"></div> \n\n    <div class=\"card\" style=\"width: 100%; height: 100%;\">\n        <div class=\"card-body\">\n            <div class=\"row\">\n                <ul id=\"menu\" style=\"margin-left: 1%;\">\n                    <hr style=\"color: #707070; margin-left: -1%;\" width=\"100%\"/>\n    \n                    <div *ngFor=\"let allAnswer of allAnswers; let i = index\" [attr.data-index]=\"i\">\n                    <li type=\"checkbox\">\n                      <input type=\"checkbox\" name=\"list\" id=\"nivel1-{{i+1}}\"><label for=\"nivel1-{{i+1}}\">{{allAnswer.name}}</label>\n                      <ul class=\"interior\">\n                        <div *ngFor=\"let issue of allAnswer.issue; let ii = index\" [attr.data-index]=\"ii\">\n                          <hr style=\"color: #707070;\" width=\"98%\"/>\n                            <li><input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" (click)=\"getIssue(issue)\" data-toggle=\"modal\" data-target=\"#exampleModalIssue\">{{issue.issue}}</label></li>\n                          </div>\n                          </ul>\n                    </li>\n                    <hr style=\"color: #707070;\" width=\"98%\"/>\n                    </div>\n                    </ul>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n\n\n\n<!-- Modal -->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModalIssue\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n          <h4 class=\"modal-title\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255);\">{{issue.issue}}</h4>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 3%; color: rgb(255, 255, 255);\">\n            <span  aria-hidden=\"true\" >&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n\n          <div class=\"col-md-2\" style=\"left: -2%;\">\n            <label>Categoría</label>\n            <br>\n            <label style=\"font-weight: normal;\">-{{issue.category}}</label>\n          </div>        \n          <div class=\"col-md-5\" style=\"left: -2%;\">\n            <label>Asunto</label>\n            <br>\n            <label style=\"font-weight: normal;\">-{{issue.issue}}</label>\n          </div>\n          <div class=\"col-md-5\" style=\"left: -2%;\">\n            <label>Descripción</label>\n            <br>\n            <label style=\"font-weight: normal;\">-{{issue.descIssue}}</label>\n          </div>\n          <div class=\"clearfix\"></div>\n\n          <div class=\"col-md-12\" style=\"margin-top: 40px;\">\n\n            <div *ngFor=\"let info of issue.info; let i = index\" [attr.data-index]=\"i\">\n\n              <div *ngIf=\"info.texto\" class=\"col-md-12\">\n                <div *ngIf=\"info.texto\" class=\"col-md-12\" style=\"width: 96.7%;\">\n                  <textarea class=\"form-control\" rows=\"7\" [disabled]=\"true\">{{info.texto}}</textarea>\n                </div>\n                <br>\n              </div>\n\n              <div *ngIf=\"info.documento\" class=\"col-md-12\" style=\"text-align: center\">\n                <br>\n                <div *ngIf=\"info.documento.ext=='png' || info.documento.ext=='jpg' || info.documento.ext=='jpeg' || info.documento.ext=='gif' \">\n                  <img style=\"margin-top: 2%; max-width: 75%;\" src=\"{{url + 'answers/getImage/' + info.documento.img}}\"/>\n                </div>\n\n                <div *ngIf=\"info.documento.ext=='pdf' || info.documento.ext=='xls' || info.documento.ext=='xlsx' || info.documento.ext=='csv' || info.documento.ext=='doc' || info.documento.ext=='docx' || info.documento.ext=='ppt' || info.documento.ext=='pptx' || info.documento.ext=='txt'\" style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                  <a style=\"margin-left: 5%;\" href=\"{{url + 'answers/getImage/' + info.documento.img}}\">\n                    <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                      <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                      <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                    </svg>\n                    {{info.documento.img}}</a>\n                  </div>\n                <!-- <div *ngIf=\"info.documento.ext='png' || info.documento.ext='jpg' || info.documento.ext='jpeg' || info.documento.ext='gif' \">\n                  <img style=\"margin-top: 2%; max-width: 75%;\" src=\"{{url + 'answers/getImage/' + info.documento.img}}\"/>\n                </div> -->\n\n                <br>\n                <hr>\n              </div>\n\n              <div *ngIf=\"info.hipervinculo\" class=\"col-md-12\" style=\"text-align: center\">\n                <br>\n                <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\" [routerLink]=\"['/requestNew',info.hipervinculo]\" [routerLinkActive]=\"['actived']\"><u> Click en el enlace </u></button>\n              </div>\n\n\n            </div>\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" data-dismiss=\"modal\">Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n<style>\n\n#menu * { list-style:none; color: rgb(231, 13, 13);}\n#menu li{ line-height:30%;}\n#menu input[name=\"list\"] {position: absolute; left: -1000em}\n#menu label{font-weight: normal}\n#menu label:before{ content:\"\\025b8\"; margin-right:4px;}\n#menu input:checked ~ label:before{ content:\"\\025be\";}\n#menu .interior{display: none; margin-left: 2%;}\n#menu input:checked ~ ul{display:block;}\n\n</style>\n"

/***/ }),

/***/ 1046:
/***/ (function(module, exports) {

module.exports = "<h1 class=\"col-md-10\">{{title}}</h1>\n<div class=\"clearfix\"></div> \n\n<section class=\"row\" id=\"main-content\">\n  <div class=\"col-xs-12\">\n  \n    <div class=\"panel panel-default\">\n      <div class=\"panel-body\">\n  \n        <div class=\"col-lg-11\">\n\n          <div class=\"col-md-6\" style=\"margin-top: 15px;\" >\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Departamento: *</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.departments\">\n                    <option value=\"\">▼</option>\n                    <option *ngFor=\"let department of departments; let i = index\" value={{department._id+coma+department.name}}>{{department.name}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n          <label class=\"col-md-2\" style=\"text-align: right; margin-top: 5px;\">Pregunta: *</label>\n          <div class=\"col-md-9\">\n              <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.issue\"/>\n          </div>\n      </div>\n      <div class=\"clearfix\"></div>\n\n      <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n        <label class=\"col-md-2\" style=\"text-align: right; margin-top: 5px;\">Descripción de la pregunta:</label>\n        <div class=\"col-md-9\">\n            <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.descIssue\"/>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n\n    <div *ngIf=\"!campo1\" style=\"text-align: center; margin-top: 30px; margin-bottom: 10px; text-align: start;\">\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo1(campo1='texto')\">+ Texto</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo1(campo1='imagen')\">+ Documento (img, pdf, word, excel, pp, gif)</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo1(campo1='hipervinculo')\">+ Hipervínculo</button>\n    </div>\n\n    <div *ngIf=\"campo1=='texto'\" class=\"col-md-12\" style=\"margin-top: 30px;\">\n      <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"text.text1\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n    </div>\n\n    <div *ngIf=\"campo1=='imagen'\" style=\"margin-top: 40px;\">\n      <input *ngIf=\"!fileToUpload1\" type=\"file\" clas=\"btn btn-primary\" (change)=\"fileChangeEvent1($event)\">\n      \n      <div class=\"col-md-12\" style=\"text-align: center;\" *ngIf=\"fileToUpload1\">\n        <img style=\"height: 120px; width: 95px;\"/>\n        <label style=\"text-align: left; margin-top: 5px;\">{{newName1}}</label>\n        <button (click)=\"imgCancel1()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n      </div>\n    </div>\n\n    <div *ngIf=\"campo1=='hipervinculo'\" class=\"col-md-6\" style=\"margin-top: 30px;\" >\n      <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Servicio: *</label>\n      <div class=\"col-md-8\">\n          <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"category.category1\" (change)=\"searchCategory1(category.category1)\">\n              <option value=undefined>▼</option>\n              <option *ngFor=\"let category of allCategory; let i = index\" value={{category.name}}>{{category.name}}</option>\n          </select>\n      </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div *ngIf=\"campo1=='hipervinculo' && category.category1\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n    <div class=\"col-md-8\">\n        <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"serviceH.service1\" (change)=\"searchService1(serviceH.service1)\">\n            <option value=undefined>▼</option>\n            <option *ngFor=\"let service1 of allService1; let i = index\" value={{service1.issue}}>{{service1.issue}}</option>\n        </select>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div *ngIf=\"campo1=='hipervinculo' && serviceH.service1\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n  <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n  <div class=\"col-md-8\">\n      <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"subService.subService1\" (change)=\"searchService1(subService.subService1)\">\n          <option value=undefined>▼</option>\n          <option *ngFor=\"let subService1 of allSubService1; let i = index\" value={{subService1.id}}>{{subService1.subcategory}}</option>\n      </select>\n  </div>\n</div>\n<div class=\"clearfix\"></div>\n\n    <div *ngIf=\"campo1\" class=\"col-md-12\" style=\"margin-top: 1px; margin-bottom: 40px;\">\n      <button type=\"file\" class=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"cancelCampo1(campo1=undefined)\">X</button>\n    </div>\n\n    <div *ngIf=\"campo1 && !campo2\" style=\"text-align: center; margin-bottom: 10px; text-align: start;\">\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo2(campo2='texto')\">+ Texto</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo2(campo2='imagen')\">+ Documento (img, pdf, word, excel, pp, gif)</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo2(campo2='hipervinculo')\">+ Hipervínculo</button>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2=='texto'\" class=\"col-md-12\" style=\"margin-top: 15px;\">\n      <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"text.text2\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2=='imagen'\">\n      <input *ngIf=\"!fileToUpload2\" type=\"file\" clas=\"btn btn-primary\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent2($event)\">\n      <div class=\"col-md-12\" style=\"text-align: center;\" *ngIf=\"fileToUpload2\">\n        <img style=\"height: 120px; width: 95px;\"/>\n      <label *ngIf=\"fileToUpload2\" style=\"text-align: left; margin-top: 5px;\">{{newName2}}</label>\n      <button *ngIf=\"fileToUpload2\" (click)=\"imgCancel2()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n    </div>\n  </div>\n\n\n    <div *ngIf=\"campo1 && campo2=='hipervinculo'\" class=\"col-md-6\" style=\"margin-top: 30px;\" >\n      <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Servicio: *</label>\n      <div class=\"col-md-8\">\n          <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"category.category2\" (change)=\"searchCategory2(category.category2)\">\n              <option value=undefined>▼</option>\n              <option *ngFor=\"let category of allCategory; let i = index\" value={{category.name}}>{{category.name}}</option>\n          </select>\n      </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div *ngIf=\"campo1 && campo2=='hipervinculo' && category.category2\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n    <div class=\"col-md-8\">\n        <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"serviceH.service2\" (change)=\"searchService2(serviceH.service2)\">\n            <option value=undefined>▼</option>\n            <option *ngFor=\"let service2 of allService2; let i = index\" value={{service2.issue}}>{{service2.issue}}</option>\n        </select>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div *ngIf=\"campo1 && campo2=='hipervinculo' && serviceH.service2\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n  <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n  <div class=\"col-md-8\">\n      <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"subService.subService2\" (change)=\"searchService2(subService.subService2)\">\n          <option value=undefined>▼</option>\n          <option *ngFor=\"let subService2 of allSubService2; let i = index\" value={{subService2.id}}>{{subService2.subcategory}}</option>\n      </select>\n  </div>\n</div>\n<div class=\"clearfix\"></div>\n\n    <div *ngIf=\"campo1 && campo2\" class=\"col-md-12\" style=\"margin-top: 1px; margin-bottom: 40px;\">\n      <button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"cancelCampo2(campo2=undefined)\">X</button>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && !campo3\" style=\"text-align: center; margin-bottom: 10px; text-align: start;\">\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo3(campo3='texto')\">+ Texto</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo3(campo3='imagen')\">+ Documento (img, pdf, word, excel, pp, gif)</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo3(campo3='hipervinculo')\">+ Hipervínculo</button>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3=='texto'\" class=\"col-md-12\" style=\"margin-top: 15px;\">\n      <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"text.text3\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3=='imagen'\">\n      <input *ngIf=\"!fileToUpload3\" type=\"file\" clas=\"btn btn-primary\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent3($event)\">\n      <div class=\"col-md-12\" style=\"text-align: center;\" *ngIf=\"fileToUpload3\">\n        <img style=\"height: 120px; width: 95px;\"/>\n      <label *ngIf=\"fileToUpload3\" style=\"text-align: left; margin-top: 5px;\">{{newName3}}</label>\n      <button *ngIf=\"fileToUpload3\" (click)=\"imgCancel3()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n    </div>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3=='hipervinculo'\" class=\"col-md-6\" style=\"margin-top: 30px;\" >\n      <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Servicio: *</label>\n      <div class=\"col-md-8\">\n          <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"category.category3\" (change)=\"searchCategory3(category.category3)\">\n              <option value=undefined>▼</option>\n              <option *ngFor=\"let category of allCategory; let i = index\" value={{category.name}}>{{category.name}}</option>\n          </select>\n      </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div *ngIf=\"campo1 && campo2 && campo3=='hipervinculo' && category.category3\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n    <div class=\"col-md-8\">\n        <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"serviceH.service3\" (change)=\"searchService3(serviceH.service3)\">\n            <option value=undefined>▼</option>\n            <option *ngFor=\"let service3 of allService3; let i = index\" value={{service3.issue}}>{{service3.issue}}</option>\n        </select>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div *ngIf=\"campo1 && campo2 && campo3=='hipervinculo' && serviceH.service3\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n  <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n  <div class=\"col-md-8\">\n      <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"subService.subService3\" (change)=\"searchService3(subService.subService3)\">\n          <option value=undefined>▼</option>\n          <option *ngFor=\"let subService3 of allSubService3; let i = index\" value={{subService3.id}}>{{subService3.subcategory}}</option>\n      </select>\n  </div>\n</div>\n<div class=\"clearfix\"></div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3\" class=\"col-md-12\" style=\"margin-top: 1px; margin-bottom: 40px;\">\n      <button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"cancelCampo3(campo3=undefined)\">X</button>\n    </div>\n    \n\n    <div *ngIf=\"campo1 && campo2 && campo3 && !campo4\" style=\"text-align: center; margin-bottom: 10px; text-align: start;\">\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo4(campo4='texto')\">+ Texto</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo4(campo4='imagen')\">+ Documento (img, pdf, word, excel, pp, gif)</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo4(campo4='hipervinculo')\">+ Hipervínculo</button>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4=='texto'\" class=\"col-md-12\" style=\"margin-top: 15px;\">\n      <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"text.text4\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4=='imagen'\">\n      <input *ngIf=\"!fileToUpload4\" type=\"file\" clas=\"btn btn-primary\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent4($event)\">\n      <div class=\"col-md-12\" style=\"text-align: center;\" *ngIf=\"fileToUpload4\">\n        <img style=\"height: 120px; width: 95px;\"/>\n      <label *ngIf=\"fileToUpload4\" style=\"text-align: left; margin-top: 5px;\">{{newName4}}</label>\n      <button *ngIf=\"fileToUpload4\" (click)=\"imgCancel4()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n    </div>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4=='hipervinculo'\" class=\"col-md-6\" style=\"margin-top: 30px;\" >\n      <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Servicio: *</label>\n      <div class=\"col-md-8\">\n          <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"category.category4\" (change)=\"searchCategory4(category.category4)\">\n              <option value=undefined>▼</option>\n              <option *ngFor=\"let category of allCategory; let i = index\" value={{category.name}}>{{category.name}}</option>\n          </select>\n      </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div *ngIf=\"campo1 && campo2 && campo3 && campo4=='hipervinculo' && category.category4\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n    <div class=\"col-md-8\">\n        <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"serviceH.service4\" (change)=\"searchService4(serviceH.service4)\">\n            <option value=undefined>▼</option>\n            <option *ngFor=\"let service4 of allService4; let i = index\" value={{service4.issue}}>{{service4.issue}}</option>\n        </select>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div *ngIf=\"campo1 && campo2 && campo3 && campo4=='hipervinculo' && serviceH.service4\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n  <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n  <div class=\"col-md-8\">\n      <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"subService.subService4\" (change)=\"searchService4(subService.subService4)\">\n          <option value=undefined>▼</option>\n          <option *ngFor=\"let subService4 of allSubService4; let i = index\" value={{subService4.id}}>{{subService4.subcategory}}</option>\n      </select>\n  </div>\n</div>\n<div class=\"clearfix\"></div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4\" class=\"col-md-12\" style=\"margin-top: 1px; margin-bottom: 40px;\">\n      <button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"cancelCampo4(campo4=undefined)\">X</button>\n    </div>\n\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && !campo5\" style=\"text-align: center; margin-bottom: 10px; text-align: start;\">\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo5(campo5='texto')\">+ Texto</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo5(campo5='imagen')\">+ Documento (img, pdf, word, excel, pp, gif)</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo5(campo5='hipervinculo')\">+ Hipervínculo</button>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5=='texto'\" class=\"col-md-12\" style=\"margin-top: 15px;\">\n      <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"text.text5\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5=='imagen'\">\n      <input *ngIf=\"!fileToUpload5\" type=\"file\" clas=\"btn btn-primary\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent5($event)\">\n      <div class=\"col-md-12\" style=\"text-align: center;\" *ngIf=\"fileToUpload5\">\n        <img style=\"height: 120px; width: 95px;\"/>\n      <label *ngIf=\"fileToUpload5\" style=\"text-align: left; margin-top: 5px;\">{{newName5}}</label>\n      <button *ngIf=\"fileToUpload5\" (click)=\"imgCancel5()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n    </div>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5=='hipervinculo'\" class=\"col-md-6\" style=\"margin-top: 30px;\" >\n      <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Servicio: *</label>\n      <div class=\"col-md-8\">\n          <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"category.category5\" (change)=\"searchCategory5(category.category5)\">\n              <option value=undefined>▼</option>\n              <option *ngFor=\"let category of allCategory; let i = index\" value={{category.name}}>{{category.name}}</option>\n          </select>\n      </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5=='hipervinculo' && category.category5\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n    <div class=\"col-md-8\">\n        <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"serviceH.service5\" (change)=\"searchService5(serviceH.service5)\">\n            <option value=undefined>▼</option>\n            <option *ngFor=\"let service5 of allService5; let i = index\" value={{service5.issue}}>{{service5.issue}}</option>\n        </select>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5=='hipervinculo' && serviceH.service5\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n  <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n  <div class=\"col-md-8\">\n      <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"subService.subService5\" (change)=\"searchService5(subService.subService5)\">\n          <option value=undefined>▼</option>\n          <option *ngFor=\"let subService5 of allSubService5; let i = index\" value={{subService5.id}}>{{subService5.subcategory}}</option>\n      </select>\n  </div>\n</div>\n<div class=\"clearfix\"></div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5\" class=\"col-md-12\" style=\"margin-top: 1px; margin-bottom: 40px;\">\n      <button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"cancelCampo5(campo5=undefined)\">X</button>\n    </div>\n\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && !campo6\" style=\"text-align: center; margin-bottom: 10px; text-align: start;\">\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo6(campo6='texto')\">+ Texto</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo6(campo6='imagen')\">+ Documento (img, pdf, word, excel, pp, gif)</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo6(campo6='hipervinculo')\">+ Hipervínculo</button>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6=='texto'\" class=\"col-md-12\" style=\"margin-top: 15px;\">\n      <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"text.text6\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6=='imagen'\">\n      <input *ngIf=\"!fileToUpload6\" type=\"file\" clas=\"btn btn-primary\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent6($event)\">\n      <div class=\"col-md-12\" style=\"text-align: center;\" *ngIf=\"fileToUpload6\">\n        <img style=\"height: 120px; width: 95px;\"/>\n      <label *ngIf=\"fileToUpload6\" style=\"text-align: left; margin-top: 5px;\">{{newName6}}</label>\n      <button *ngIf=\"fileToUpload6\" (click)=\"imgCancel6()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n    </div>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6=='hipervinculo'\" class=\"col-md-6\" style=\"margin-top: 30px;\" >\n      <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Servicio: *</label>\n      <div class=\"col-md-8\">\n          <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"category.category6\" (change)=\"searchCategory6(category.category6)\">\n              <option value=undefined>▼</option>\n              <option *ngFor=\"let category of allCategory; let i = index\" value={{category.name}}>{{category.name}}</option>\n          </select>\n      </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6=='hipervinculo' && category.category6\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n    <div class=\"col-md-8\">\n        <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"serviceH.service6\" (change)=\"searchService6(serviceH.service6)\">\n            <option value=undefined>▼</option>\n            <option *ngFor=\"let service6 of allService6; let i = index\" value={{service6.issue}}>{{service6.issue}}</option>\n        </select>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6=='hipervinculo' && serviceH.service6\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n  <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n  <div class=\"col-md-8\">\n      <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"subService.subService6\" (change)=\"searchService6(subService.subService6)\">\n          <option value=undefined>▼</option>\n          <option *ngFor=\"let subService6 of allSubService6; let i = index\" value={{subService6.id}}>{{subService6.subcategory}}</option>\n      </select>\n  </div>\n</div>\n<div class=\"clearfix\"></div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6\" class=\"col-md-12\" style=\"margin-top: 1px; margin-bottom: 40px;\">\n      <button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"cancelCampo6(campo6=undefined)\">X</button>\n    </div>\n\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6 && !campo7\" style=\"text-align: center; margin-bottom: 10px; text-align: start;\">\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo7(campo7='texto')\">+ Texto</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo7(campo7='imagen')\">+ Documento (img, pdf, word, excel, pp, gif)</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo7(campo7='hipervinculo')\">+ Hipervínculo</button>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6 && campo7=='texto'\" class=\"col-md-12\" style=\"margin-top: 15px;\">\n      <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"text.text7\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6 && campo7=='imagen'\">\n      <input *ngIf=\"!fileToUpload7\" type=\"file\" clas=\"btn btn-primary\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent7($event)\">\n      <div class=\"col-md-12\" style=\"text-align: center;\" *ngIf=\"fileToUpload7\">\n        <img style=\"height: 120px; width: 95px;\"/>\n      <label *ngIf=\"fileToUpload7\" style=\"text-align: left; margin-top: 5px;\">{{newName7}}</label>\n      <button *ngIf=\"fileToUpload7\" (click)=\"imgCancel7()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n    </div>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6 && campo7=='hipervinculo'\" class=\"col-md-6\" style=\"margin-top: 30px;\" >\n      <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Servicio: *</label>\n      <div class=\"col-md-8\">\n          <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"category.category7\" (change)=\"searchCategory7(category.category7)\">\n              <option value=undefined>▼</option>\n              <option *ngFor=\"let category of allCategory; let i = index\" value={{category.name}}>{{category.name}}</option>\n          </select>\n      </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6 && campo7=='hipervinculo' && category.category7\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n    <div class=\"col-md-8\">\n        <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"serviceH.service7\" (change)=\"searchService7(serviceH.service7)\">\n            <option value=undefined>▼</option>\n            <option *ngFor=\"let service7 of allService7; let i = index\" value={{service7.issue}}>{{service7.issue}}</option>\n        </select>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6 && campo7=='hipervinculo' && serviceH.service7\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n  <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n  <div class=\"col-md-8\">\n      <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"subService.subService7\" (change)=\"searchService7(subService.subService7)\">\n          <option value=undefined>▼</option>\n          <option *ngFor=\"let subService7 of allSubService7; let i = index\" value={{subService7.id}}>{{subService7.subcategory}}</option>\n      </select>\n  </div>\n</div>\n<div class=\"clearfix\"></div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6 && campo7\" class=\"col-md-12\" style=\"margin-top: 1px; margin-bottom: 40px;\">\n      <button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"cancelCampo7(campo7=undefined)\">X</button>\n    </div>\n\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6 && campo7 && !campo8\" style=\"text-align: center; margin-bottom: 10px; text-align: start;\">\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo8(campo8='texto')\">+ Texto</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo8(campo8='imagen')\">+ Documento (img, pdf, word, excel, pp, gif)</button>\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addCampo8(campo8='hipervinculo')\">+ Hipervínculo</button>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6 && campo7 && campo8=='texto'\" class=\"col-md-12\" style=\"margin-top: 15px;\">\n      <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"text.text8\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6 && campo7 && campo8=='imagen'\">\n      <input *ngIf=\"!fileToUpload8\" type=\"file\" clas=\"btn btn-primary\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent8($event)\">\n      <div class=\"col-md-12\" style=\"text-align: center;\" *ngIf=\"fileToUpload8\">\n        <img style=\"height: 120px; width: 95px;\"/>\n      <label *ngIf=\"fileToUpload8\" style=\"text-align: left; margin-top: 5px;\">{{newName8}}</label>\n      <button *ngIf=\"fileToUpload8\" (click)=\"imgCancel8()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n    </div>\n    </div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6 && campo7 && campo8=='hipervinculo'\" class=\"col-md-6\" style=\"margin-top: 30px;\" >\n      <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Servicio: *</label>\n      <div class=\"col-md-8\">\n          <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"category.category8\" (change)=\"searchCategory8(category.category8)\">\n              <option value=undefined>▼</option>\n              <option *ngFor=\"let category of allCategory; let i = index\" value={{category.name}}>{{category.name}}</option>\n          </select>\n      </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6 && campo7 && campo8=='hipervinculo' && category.category8\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n    <div class=\"col-md-8\">\n        <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"serviceH.service8\" (change)=\"searchService8(serviceH.service8)\">\n            <option value=undefined>▼</option>\n            <option *ngFor=\"let service8 of allService8; let i = index\" value={{service8.issue}}>{{service8.issue}}</option>\n        </select>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6 && campo7 && campo8=='hipervinculo' && serviceH.service8\" class=\"col-md-6\" style=\"margin-top: 5px;\" >\n  <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\"></label>\n  <div class=\"col-md-8\">\n      <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"subService.subService8\" (change)=\"searchService8(subService.subService8)\">\n          <option value=undefined>▼</option>\n          <option *ngFor=\"let subService8 of allSubService8; let i = index\" value={{subService8.id}}>{{subService8.subcategory}}</option>\n      </select>\n  </div>\n</div>\n<div class=\"clearfix\"></div>\n\n    <div *ngIf=\"campo1 && campo2 && campo3 && campo4 && campo5 && campo6 && campo7 && campo8\" class=\"col-md-12\" style=\"margin-top: 1px; margin-bottom: 40px;\">\n      <button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"cancelCampo8(campo8=undefined)\">X</button>\n    </div>\n    \n\n    <div style=\"text-align: center; margin-bottom: 10px; text-align: end;\">\n      <button style=\"margin-top: 30px;\" type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addNew(newIssue)\">Guardar</button>\n  </div>\n  <div class=\"clearfix\"></div>\n\n        </div>\n\n      </div>\n    </div>\n  </div>\n</section>\n<div *ngIf=\"load==true\">\n  <div id=\"loader-wrapper\">\n    <div id=\"loader\"></div>\n  </div>\n</div>\n\n\n<!-- Modal -->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255);\">{{issue.issue}}</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 3%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"col-md-4\" style=\"left: -2%;\">\n          <label>Categoría</label>\n          <br>\n          <label style=\"font-weight: normal;\">-{{issue.category}}</label>\n          <br><br>\n          <label>Asunto</label>\n          <br>\n          <label style=\"font-weight: normal;\">-{{issue.issue}}</label>\n          <br><br>\n          <label>Palabras Clave</label>\n          <br>\n          <label style=\"font-weight: normal;\">-{{issue.keyword}}</label>\n          <br><br>\n          <label>Resumen</label>\n          <br>\n          <label style=\"font-weight: normal;\">-{{issue.abstract}}</label>\n          <br><br>\n        </div>        \n        <div class=\"col-md-8\">\n          <label>Descripción</label>\n          <br>\n          <label style=\"font-weight: normal;\">Aquí va la descripcion para solucionar el problema y tambien las imagenes cargadas</label>\n          <br>\n          <label style=\"font-weight: normal;\">imagenes y mas descripciones</label>\n\n        </div>\n        <div class=\"clearfix\"></div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" data-dismiss=\"modal\">Close</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<style>\n\n#loader-wrapper {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1000;\n}\n\n#loader {\n  display: block;\n  position: relative;\n  left: 50%;\n  top: 50%;\n  width: 150px;\n  height: 150px;\n  margin: -75px 0 0 -75px;\n  border-radius: 50%;\n  border: 3px solid transparent;\n  border-top-color:#f53737;\n  -webkit-animation: spin 2s linear infinite;\n  /* Chrome, Opera 15+, Safari 5+ */\n  animation: spin 2s linear infinite;\n  /* Chrome, Firefox 16+, IE 10+, Opera */\n}\n\n#loader:before {\n  content: \"\";\n  position: absolute;\n  top: 5px;\n  left: 5px;\n  right: 5px;\n  bottom: 5px;\n  border-radius: 50%;\n  border: 3px solid transparent;\n  border-top-color: #eeeeee;\n  -webkit-animation: spin 3s linear infinite;\n  /* Chrome, Opera 15+, Safari 5+ */\n  animation: spin 3s linear infinite;\n  /* Chrome, Firefox 16+, IE 10+, Opera */\n}\n\n#loader:after {\n  content: \"\";\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n  border-radius: 50%;\n  border: 3px solid transparent;\n  border-top-color: #bb2121;\n  -webkit-animation: spin 1.5s linear infinite;\n  /* Chrome, Opera 15+, Safari 5+ */\n  animation: spin 1.5s linear infinite;\n  /* Chrome, Firefox 16+, IE 10+, Opera */\n}\n\n@-webkit-keyframes spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(0deg);\n    /* IE 9 */\n    transform: rotate(0deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n\n  100% {\n    -webkit-transform: rotate(360deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(360deg);\n    /* IE 9 */\n    transform: rotate(360deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n}\n\n@keyframes spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(0deg);\n    /* IE 9 */\n    transform: rotate(0deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n\n  100% {\n    -webkit-transform: rotate(360deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(360deg);\n    /* IE 9 */\n    transform: rotate(360deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n}\n\n</style>\n"

/***/ }),

/***/ 1047:
/***/ (function(module, exports) {

module.exports = "<h1> {{ title }} </h1>\n\n<section class=\"row\" id=\"main-content\">\n    <div class=\"col-xs-12\">\n\n<div class=\"panel panel-default\">\n<div class=\"panel-body\">\n\n    <div class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n        <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" datatable=\"ng\">\n          <thead>\n            <tr>\n              <th style=\"text-align: center;\"><a> Àrea</a></th>\n              <th style=\"text-align: center;\"><a> Responsable </a></th>\n              <th style=\"text-align: center;\"><a> Sucursales </a></th>\n              <th style=\"text-align: center;\"><a> Activo </a></th>\n              <th style=\"text-align: center;\"><a> Editar </a></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr class=\"odd gradeX\" *ngFor=\"let item of areas; let i = index\" style=\"background-color: rgb(196, 196, 196);\">\n              <td style=\"text-align: center;\"> {{item.area.name}} </td>\n              <td style=\"text-align: center;\"> {{item.area.responsable.fname}} {{item.area.responsable.lname}} </td>\n              <td style=\"text-align: center; color: rgb(196, 0, 0);\">\n                <a  *ngFor=\"let item2 of item.requests1; let i = index\">\n                  {{item2.name}}, \n                </a>\n                </td>\n              <td style=\"text-align: center;\"> {{item.area.active}} </td>\n              <td style=\"text-align: center;\"> \n                <button type=\"button\" class=\"btn btn-link\" style=\"color: #ca243d;\" (click)=\"areaClick(item)\" data-toggle=\"modal\" data-target=\"#exampleModal\" *ngIf=\"identity.type=='superAdmin'\">Editar</button>\n                <button type=\"button\" class=\"btn btn-link\" style=\"color: #ca243d;\" *ngIf=\"identity.type!='superAdmin'\">Editar</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        </div>\n\n</div>\n</div>\n</div>\n</section>\n\n<!--------------  Modal  --------->\n<div *ngIf=\"item\" class=\"modal fade\" id=\"exampleModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255);\"> {{item.area.name}} </h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 3%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" >\n          <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Responsable:</label>\n          <div class=\"col-md-8\">\n              <select class=\"form-control\" #name=\"ngModel\" name=\"responsable\" [(ngModel)]=\"responsable\" >\n                  <option value=\"\">▼</option>\n                  <option *ngFor=\"let usersAdmin of usersAdmins; let i = index\" value={{usersAdmin._id}}>{{usersAdmin.fname}} {{usersAdmin.lname}}</option>\n              </select>\n          </div>\n      </div>\n      <div class=\"clearfix\"></div>\n\n      <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">activo:</label>\n        <div class=\"col-md-8\">\n            <input type=\"text\" class=\"form-control\"  #name=\"ngModel\" name=\"active\" [(ngModel)]=\"active\" required/>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n\n    <div *ngFor=\"let usersAdmin of item.requests1; let i = index\">\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\" >\n      <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Sucursales:</label>\n      <div class=\"col-md-8\">\n          <select class=\"form-control\" #name=\"ngModel\" name=\"responsable\" [(ngModel)]=\"moreResponsable\" >\n              <option value=\"\">▼</option>\n              <option *ngFor=\"let usersAdmin of getLocals; let i = index\" value={{usersAdmin._id}}>{{usersAdmin.name}}</option>\n          </select>\n      </div>\n  </div>\n  <div class=\"clearfix\"></div>\n</div>\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" data-dismiss=\"modal\">Close</button>\n      </div>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ 1048:
/***/ (function(module, exports) {

module.exports = "<h1> {{ title }} </h1>\n\n<section class=\"row\" id=\"main-content\">\n    <div class=\"col-xs-12\">\n\n<div class=\"panel panel-default\">\n<div class=\"panel-body\">\n\n<form #departmentNewForm=\"ngForm\" (ngSubmit)=\"onSubmitNew()\" class=\"col-md-10\">\n\n<div class=\"col-lg-6\">\n\n<div class=\"col-md-12\" style=\"margin-top: 15px;\">\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Área:</label>\n    <div class=\"col-md-8\">\n        <input type=\"number\" class=\"form-control\"  #name=\"ngModel\" name=\"names\" [(ngModel)]=\"names\" required/>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div class=\"col-md-12\" style=\"margin-top: 15px;\" >\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Responsable:</label>\n    <div class=\"col-md-8\">\n        <select class=\"form-control\" #name=\"ngModel\" name=\"responsable\" [(ngModel)]=\"responsable\" >\n            <option value=\"\">▼</option>\n            <option *ngFor=\"let usersAdmin of usersAdmins; let i = index\" value={{usersAdmin._id}}>{{usersAdmin.fname}} {{usersAdmin.lname}}</option>\n        </select>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div style=\"text-align: center; margin-top: 50px; margin-bottom: 15px; text-align: start;\">\n    <input type=\"submit\" value=\"Guardar\" class=\"btn btn-primary\"/>\n</div>\n<div class=\"clearfix\"></div> \n\n</div>\n    </form>\n\n\n</div>\n</div>\n</div>\n</section>"

/***/ }),

/***/ 1049:
/***/ (function(module, exports) {

module.exports = "<h1> {{ title }} </h1>\n\n<section class=\"row\" id=\"main-content\">\n    <div class=\"col-xs-12\">\n\n<div class=\"panel panel-default\">\n<div class=\"panel-body\">\n\n    <div class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n        <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" datatable=\"ng\">\n          <thead>\n            <tr>\n              <th style=\"text-align: center;\"><a > # </a></th>\n              <th style=\"text-align: center;\"><a> Departamento</a></th>\n              <th style=\"text-align: center;\"><a> Abreviatura </a></th>\n              <th style=\"text-align: center;\"><a> Responsable </a></th>\n              <th style=\"text-align: center;\"><a> Activo </a></th>\n              <th style=\"text-align: center;\"><a> Editar </a></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr class=\"odd gradeX\" *ngFor=\"let item of departments; let i = index\" style=\"background-color: rgb(196, 196, 196);\">\n              <td style=\"text-align: center;\"> {{i + 1}} </td>\n              <td style=\"text-align: center;\"> {{item.name}} </td>\n              <td style=\"text-align: center;\"> {{item.shortName}}</td>\n              <td style=\"text-align: center;\"  *ngIf=\"item.responsable\"> {{item.responsable.fname}} {{item.responsable.lname}} </td>\n              <td style=\"text-align: center;\"  *ngIf=\"!item.responsable\"> </td>\n              <td style=\"text-align: center;\" *ngIf=\"item.active==true\"> Sí </td>\n              <td style=\"text-align: center; color: #ec3d3d;\" *ngIf=\"item.active==false\"> No </td>\n              <td style=\"text-align: center;\"> \n                <button type=\"button\" class=\"btn btn-link\" style=\"color: #ca243d;\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click)=\"clickEdit(item)\" *ngIf=\"identity.type=='superAdmin'\">Editar</button>\n                <button type=\"button\" class=\"btn btn-link\" style=\"color: #ca243d;\" *ngIf=\"identity.type!='superAdmin'\">Editar</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        </div>\n\n\n</div>\n</div>\n</div>\n</section>\n\n\n\n<!-- Modal Marcar-como-solucionado -->\n<div class=\"modal fade\" id=\"exampleModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\"> Motivo de Solución </h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n\n\n\n<div class=\"col-lg-6\">\n\n  <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n      <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Nombre:</label>\n      <div class=\"col-md-8\">\n          <input type=\"text\" class=\"form-control\"  #name=\"ngModel\" name=\"names\" [(ngModel)]=\"names\" required/>\n      </div>\n  </div>\n  <div class=\"clearfix\"></div>\n  \n  <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n      <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Abreviatura:</label>\n      <div class=\"col-md-8\">\n          <input type=\"text\" class=\"form-control\"  #name=\"ngModel\" name=\"shortName\" [(ngModel)]=\"shortName\" required/>\n      </div>\n  </div>\n  <div class=\"clearfix\"></div>\n  \n  <div class=\"col-md-12\" style=\"margin-top: 15px;\" >\n      <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Responsable:</label>\n      <div class=\"col-md-8\">\n          <select class=\"form-control\" #name=\"ngModel\" name=\"responsable\" [(ngModel)]=\"responsable\" >\n              <option value=\"\">▼</option>\n              <option *ngFor=\"let usersAdmin of usersAdmins; let i = index\" value={{usersAdmin._id}}>{{usersAdmin.fname}} {{usersAdmin.lname}}</option>\n          </select>\n      </div>\n  </div>\n  <div class=\"clearfix\"></div>\n  \n  <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">activo:</label>\n    <div class=\"col-md-8\">\n      <select class=\"form-control\" #name=\"ngModel\" name=\"active\" [(ngModel)]=\"active\" >\n        <option value=\"true\">Sí</option>\n        <option value=\"false\">No</option>\n    </select>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n  <div style=\"text-align: center; margin-top: 50px; margin-bottom: 15px; text-align: start;\">\n      <input type=\"submit\" value=\"Guardar\" class=\"btn btn-primary\" (click)=\"editDepartment()\"/>\n  </div>\n  <div class=\"clearfix\"></div> \n  \n  </div>\n\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n      </div>\n    </div>\n  </div>\n</div>"

/***/ }),

/***/ 1050:
/***/ (function(module, exports) {

module.exports = "<h1> {{ title }} </h1>\n\n<section class=\"row\" id=\"main-content\">\n    <div class=\"col-xs-12\">\n\n<div class=\"panel panel-default\">\n<div class=\"panel-body\">\n\n<form #departmentNewForm=\"ngForm\" (ngSubmit)=\"onSubmitNew()\" class=\"col-md-10\">\n\n<div class=\"col-lg-6\">\n\n<div class=\"col-md-12\" style=\"margin-top: 15px;\">\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Nombre:</label>\n    <div class=\"col-md-8\">\n        <input type=\"text\" class=\"form-control\"  #name=\"ngModel\" name=\"names\" [(ngModel)]=\"names\" required/>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div class=\"col-md-12\" style=\"margin-top: 15px;\">\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Abreviatura:</label>\n    <div class=\"col-md-8\">\n        <input type=\"text\" class=\"form-control\"  #name=\"ngModel\" name=\"shortName\" [(ngModel)]=\"shortName\" required/>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div class=\"col-md-12\" style=\"margin-top: 15px;\" >\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Responsable:</label>\n    <div class=\"col-md-8\">\n        <select class=\"form-control\" #name=\"ngModel\" name=\"responsable\" [(ngModel)]=\"responsable\" >\n            <option value=\"\">▼</option>\n            <option *ngFor=\"let usersAdmin of usersAdmins; let i = index\" value={{usersAdmin._id}}>{{usersAdmin.fname}} {{usersAdmin.lname}}</option>\n        </select>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div style=\"text-align: center; margin-top: 50px; margin-bottom: 15px; text-align: start;\">\n    <input type=\"submit\" value=\"Guardar\" class=\"btn btn-primary\"/>\n</div>\n<div class=\"clearfix\"></div> \n\n</div>\n    </form>\n\n\n</div>\n</div>\n</div>\n</section>"

/***/ }),

/***/ 1051:
/***/ (function(module, exports) {

module.exports = "<div class=\"col-lg-12\" >\n    <h1 class=\"col-md-10\">{{title}}</h1>\n\n    <div class=\"clearfix\"></div> \n\n\n    <div class=\"card\" style=\"width: 100%; height: 100%;\">\n      <div class=\"card-body\">\n\n    <div class=\"portlet-body form\" style=\"margin-top: 2%; font-size: 100%;\">\n      <div class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n      <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"dataEncuesta\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\" [mfRowsOnPage]=\"20\">\n        <thead>\n          <tr>\n            <th><mfDefaultSorter>#</mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"codeRequest\">Nombre Común</mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"dateOfReport\">Fecha de inicio</mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"subCategory\">Subcategoría</mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"service\">Servicio</mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"issue.category\">Área</mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"issue.sla\">SLA</mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"solutionTimeNew\">Tiempo Solucion</mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"status\">Estatus</mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"reportBy.name\">Reportado por</mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"analyst.fnames\">Analista</mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"pasado\">Vencido</mfDefaultSorter></th>\n          </tr>\n          <tr>\n            <td></td>\n            <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio(search.folio)\"></td>\n            <td> </td>\n            <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria(search.subcategoria)\"></td>\n            <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio(search.servicio)\"></td>\n            <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea(search.area)\"></td>\n            <td> </td>\n            <td> </td>\n            <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatus\" (ngModelChange)=\"searchEstatus(search.estatus)\"></td>\n            <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy(search.reportadoPor)\"></td>\n            <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista(search.analista)\"></td>\n            <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido(search.vencido)\"></td>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of mf.data; let i = index\">\n            <td>{{i + 1}}</td>\n            <td><button type=\"button\" class=\"btn\" style=\"color: #ca243d;\" [routerLink]=\"['/requestDetail',item.codeRequest]\" [routerLinkActive]=\"['actived']\">{{item.codeRequest}}</button></td>\n            <td>{{momentTime(item.dateOfReport)}}</td>\n            <td>{{item.subCategory}}</td>\n            <td>{{item.service}}</td>\n            <td>{{item.issue.category}}</td>\n            <td>{{item.issue.sla}}</td>\n            <td><a *ngIf=\"item.status!='Solucionado'\"></a> <a *ngIf=\"item.status=='Solucionado'\"> {{item.solutionTimeNew}} </a></td>\n            <td>{{item.status}}<label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n            <td>{{item.reportBy.name}}<label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n            <td> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a>   </td>\n            <td><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a></td>\n          </tr>\n          <td></td>\n          <td> <a style=\"font-size: 120%;\" *ngIf=\"inProcessTable\">Total: {{inProcessTable.length}}</a> </td>\n        </tbody>\n        <tfoot>\n          <tr>\n              <td colspan=\"12\">\n                  <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n              </td>\n          </tr>\n          </tfoot>\n      </table>\n      </div>\n    </div>\n\n      </div>\n    </div>\n\n</div>\n\n"

/***/ }),

/***/ 1052:
/***/ (function(module, exports) {

module.exports = "<div class=\"col-md-9\">\n  <h1 style=\"color:#DDCBA4; font-family: 'sofia-pro'; font-size: 240%; font-weight: 510\">{{title}}</h1>\n  </div>\n  <div class=\"col-md-3\" style=\"margin-top: 27px;\">\n    <div class=\"input-group\">\n      <span class=\"input-group-btn\">\n        <button style=\"background-color: #e1e1e1;\" class=\"btn btn-default\" type=\"button\" (click)=\"goToSearch(search)\">\n          <div style=\"font-size: 10px\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\n              <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\n            </svg>\n          </div>\n        </button>\n      </span>\n      <input style=\"background-color: #e1e1e1;\" type=\"text\" class=\"form-control\" placeholder=\"Buscar Folio\" #name=\"ngModel\" name=\"search\" [(ngModel)]=\"search\">\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <section class=\"row\" id=\"main-content\" style=\"margin-top: 5px;\">\n      <div class=\"col-xs-12\">\n<ul class=\"nav nav-pills grouping_tabs\">\n          <li class=\"active\" *ngIf=\"table==1\">\n            <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 1\" type=\"button\" id=\"btn_tab_for_opened\">En proceso<span class=\"badge\">{{inProcess.length}}</span></a>\n          </li>\n          <li *ngIf=\"table==2\">\n            <a style=\"color: #DDCBA4;\" (click)=\"table = 1\" type=\"button\" id=\"btn_tab_for_opened\">En proceso<span class=\"badge\">{{inProcess.length}}</span></a>\n          </li>\n          <li class=\"active\" *ngIf=\"table==2 && loadSolucionado==false\">\n            <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 2\" type=\"button\" id=\"btn_tab_for_resolved\">Solucionado<span class=\"badge\">{{inSolution.length}}</span></a>\n          </li>\n          <li *ngIf=\"table==1 && loadSolucionado==false\">\n            <a style=\"color: #DDCBA4;\" (click)=\"table = 2\" type=\"button\" id=\"btn_tab_for_resolved\">Solucionado<span class=\"badge\">{{inSolution.length}}</span></a>\n          </li>\n          <li class=\"active\" *ngIf=\"table==2 && loadSolucionado==true\">\n            <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 2\" type=\"button\" id=\"btn_tab_for_resolved\">Solucionado<span class=\"badge\"> Cargando... </span></a>\n          </li>\n          <li *ngIf=\"table==1 && loadSolucionado==true\">\n            <a style=\"color: #DDCBA4;\" (click)=\"table = 2\" type=\"button\" id=\"btn_tab_for_resolved\">Solucionado<span class=\"badge\"> Cargando... </span></a>\n          </li>\n</ul>\n\n<div class=\"panel panel-default\" style=\"background-color:#DDCBA4; border-color: rgb(71, 71, 71)\">\n<div class=\"panel-body\">\n<!-- <h3 class=\"text-center\">Sin elementos</h3> -->\n<div class=\"portlet-body form\" style=\"margin-top: 2%; font-size: 100%;\">\n  <div *ngIf=\"table==1\" class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <a type=\"button\" style=\"margin-bottom: 0.3%; background-color: green;\" class=\"btn btn-primary\" (click)=\"exportFunction(inProcess)\">Excel <span class=\"glyphicon glyphicon-save\" aria-hidden=\"true\"></span></a>\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inProcess\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\" [mfRowsOnPage]=\"20\">\n    <thead>\n      <tr>\n        <th style=\"text-align: center;\"> <a style=\"color: #3F2021;\"> # </a></th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"codeRequest\"><a style=\"color: #3F2021;\"> Nombre Común </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"dateOfReport\"><a style=\"color: #3F2021;\"> Fecha de inicio </a></mfDefaultSorter></th>\n        <th style=\"text-align: center;\"><a style=\"color: #3F2021;\"> Hora </a></th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"subCategory\"><a style=\"color: #3F2021;\"> Subcategoría </a></mfDefaultSorter></th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"service\"><a style=\"color: #3F2021;\"> Servicio </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"numSerie\"><a style=\"color: #3F2021;\"> Num.Serie </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"issue.category\"><a style=\"color: #3F2021;\"> Departamento </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"issue.sla\"><a style=\"color: #3F2021;\"> SLA </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"issue.slaCallCenter\"><a style=\"color: #3F2021;\"> SLAcc </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"restantes\"><a style=\"color: #3F2021;\"> Restante </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"statusCallCenter\"><a style=\"color: #3F2021;\"> EstatusCallC </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"status\"><a style=\"color: #3F2021;\"> Estatus </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"reportBy.name\"><a style=\"color: #3F2021;\"> Sucursal </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"reportBy.area.name\"><a style=\"color: #3F2021;\"> Área </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"manager\"><a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"analyst.fnames\"><a style=\"color: #3F2021;\"> Asignado </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"analist1\"><a style=\"color: #3F2021;\"> Responsable 1 </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"analist2\"><a style=\"color: #3F2021;\"> Responsable 2 </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"analist3\"><a style=\"color: #3F2021;\"> Responsable 3 </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"analist4\"><a style=\"color: #3F2021;\"> Responsable 4 </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"dateAssignmentCallCenter\"><a style=\"color: #3F2021;\"> Fecha Escalada </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"dateAssignment\"><a style=\"color: #3F2021;\"> Fecha Asignada </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"datePendieng\"><a style=\"color: #3F2021;\"> Fecha Pendiente </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"pending\"><a style=\"color: #3F2021;\"> Motivo Escalado </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"pending\"><a style=\"color: #3F2021;\"> Motivo Pendiente </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"pasado\"><a style=\"color: #3F2021;\"> Vencido </a></mfDefaultSorter> </th>\n      </tr>\n      <tr style=\"background-color: #dad2c1;\">\n        <td></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio(search.folio)\"></td>\n        <td> </td>\n        <td> </td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria(search.subcategoria)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio(search.servicio)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie\" [(ngModel)]=\"search.numSerie\" (ngModelChange)=\"searchNumSerie(search.numSerie)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea(search.area)\"></td>\n        <td> </td>\n        <td> </td>\n        <td> </td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"statusCallCenter\" [(ngModel)]=\"search.statusCallCenter\" (ngModelChange)=\"searchEstatusCallCenter(search.statusCallCenter)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatus\" (ngModelChange)=\"searchEstatus(search.estatus)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"sucursal\" [(ngModel)]=\"search.sucursal\" (ngModelChange)=\"searchSucursal(search.sucursal)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"areaSucursal\" [(ngModel)]=\"search.areaSucursal\" (ngModelChange)=\"searchAreaSucursal(search.areaSucursal)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy(search.reportadoPor)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista(search.analista)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"responsable1\" [(ngModel)]=\"search.responsable1\" (ngModelChange)=\"searchResponsable1(search.responsable1)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"responsable2\" [(ngModel)]=\"search.responsable2\" (ngModelChange)=\"searchResponsable2(search.responsable2)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"responsable3\" [(ngModel)]=\"search.responsable3\" (ngModelChange)=\"searchResponsable3(search.responsable3)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"responsable4\" [(ngModel)]=\"search.responsable4\" (ngModelChange)=\"searchResponsable4(search.responsable4)\"></td>\n        <td> </td>\n        <td> </td>\n        <td> </td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"motivoAsignadoCallCenter\" [(ngModel)]=\"search.motivoAsignadoCallCenter\" (ngModelChange)=\"searchMotivoPendiente(search.motivoAsignadoCallCenter)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"motivoPendiente\" [(ngModel)]=\"search.motivoPendiente\" (ngModelChange)=\"searchMotivoPendiente(search.motivoPendiente)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido(search.vencido)\"></td>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"odd gradeX\" *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1;\">\n        <td style=\"text-align: center;\"> {{i + 1}} </td>\n        <td style=\"text-align: center; padding-top: 0.2%;\"> \n          <!-- <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\" [routerLink]=\"['/requestDetail',item.codeRequest]\" [routerLinkActive]=\"['actived']\">{{item.codeRequest}}</button> -->\n          <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n        </td>\n        <td style=\"text-align: center;\"> {{momentTimeDate(item.dateOfReport1)}} </td>\n        <td style=\"text-align: center;\"> {{momentTimeHour(item.dateOfReport1)}} </td>\n        <td style=\"text-align: center;\"> {{item.subCategory}} </td>\n        <td style=\"text-align: center;\"> {{item.service}} </td>\n        <td style=\"text-align: center;\"> {{item.numSerie}} </td>\n        <td style=\"text-align: center;\"> {{item.issue.category}} </td>\n        <td style=\"text-align: center;\"> {{item.issue.sla}} </td>\n        <td style=\"text-align: center;\"> <a *ngIf=\"item.issue && item.issue.slaCallCenter\">{{item.issue.slaCallCenter}}</a> </td>\n        <td style=\"text-align: center;\"> <a *ngIf=\"item.status!='Solucionado'\">{{item.restantes}}</a> <a *ngIf=\"item.status=='Solucionado'\"></a></td>\n        <td style=\"text-align: center;\"> {{item.statusCallCenter}}</td>\n        <td style=\"text-align: center;\"> {{item.status}} <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n        <td style=\"text-align: center;\"> {{item.reportBy.name}}<label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label> </td>\n        <td style=\"text-align: center;\"> {{item.reportBy.area.name}}</td>\n        <td style=\"text-align: center;\"> {{item.manager}}</td>\n        <td style=\"text-align: center;\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n        <td style=\"text-align: center;\"> <a *ngIf=\"item.issue.emailToSendAnalist[0]\">{{item.analist1}}</a> </td>\n        <td style=\"text-align: center;\"><a *ngIf=\"item.issue.emailToSendAnalist[1]\">{{item.analist2}}</a> </td>\n        <td style=\"text-align: center;\"><a *ngIf=\"item.issue.emailToSendAnalist[2]\">{{item.analist3}}</a> </td>\n        <td style=\"text-align: center;\"><a *ngIf=\"item.issue.emailToSendAnalist[3]\">{{item.analist4}}</a> </td>\n        <td style=\"text-align: center;\"> {{momentTime(item.dateAssignmentCallCenter)}} </td>\n        <td style=\"text-align: center;\"> {{momentTime(item.dateAssignment)}} </td>\n        <td style=\"text-align: center;\"> <a *ngIf=\"item.datePendieng\">{{momentTime(item.datePendieng)}}</a> </td>\n        <td style=\"text-align: center;\"> <a *ngIf=\"item.motivoAsignadoCallCenter\">{{item.motivoAsignadoCallCenter}}</a> </td>\n        <td style=\"text-align: center;\"> <a *ngIf=\"item.pending\">{{item.pending}}</a> </td>\n        <td style=\"text-align: center;\"><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </td>\n      </tr>\n      <td></td>\n      <td> <a style=\"font-size: 120%;\" *ngIf=\"inProcess\">Total: {{inProcess.length}}</a> </td>\n    </tbody>\n    <tfoot>\n      <tr style=\"background-color: #dad2c1\">\n          <td colspan=\"12\">\n              <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n          </td>\n      </tr>\n      </tfoot>\n  </table>\n</div>\n\n  <div *ngIf=\"table==2\" class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <a type=\"button\" style=\"margin-bottom: 0.3%; background-color: green;\" class=\"btn btn-primary\" (click)=\"exportFunction(inSolution)\">Excel <span class=\"glyphicon glyphicon-save\" aria-hidden=\"true\"></span></a>\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inSolution\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\" [mfRowsOnPage]=\"20\">\n      <thead>\n      <tr>\n        <th style=\"text-align: center;\"> <a style=\"color: #3F2021;\"> # </a></th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"codeRequest\"><a style=\"color: #3F2021;\"> Nombre Común </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"dateOfReport\"><a style=\"color: #3F2021;\"> Fecha de inicio </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <a style=\"color: #3F2021;\"> Hora </a></th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"subCategory\"><a style=\"color: #3F2021;\"> Subcategoría </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"service\"><a style=\"color: #3F2021;\"> Servicio </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"numSerie\"><a style=\"color: #3F2021;\"> Num.Serie </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"issue.category\"><a style=\"color: #3F2021;\"> Departamento </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"issue.sla\"><a style=\"color: #3F2021;\"> SLA </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"issue.slaCallCenter\"><a style=\"color: #3F2021;\"> SLAcc </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"solutionTimeNew\"><a style=\"color: #3F2021;\"> Tiempo Solucion </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"solutionTimeHours\"><a style=\"color: #3F2021;\"> TiempoH </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"statusCallCenter\"><a style=\"color: #3F2021;\"> EstatusCallC </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"status\"><a style=\"color: #3F2021;\"> Estatus </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"reportBy.name\"><a style=\"color: #3F2021;\"> Sucursal </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"reportBy.area.name\"><a style=\"color: #3F2021;\"> Área </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"manager\"><a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"analyst.fnames\"><a style=\"color: #3F2021;\"> Asignado </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"analist1\"><a style=\"color: #3F2021;\"> Responsable 1 </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"analist2\"><a style=\"color: #3F2021;\"> Responsable 2 </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"analist3\"><a style=\"color: #3F2021;\"> Responsable 3 </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"analist4\"><a style=\"color: #3F2021;\"> Responsable 4 </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"dateAssignmentCallCenter\"><a style=\"color: #3F2021;\"> Fecha Escalada </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"dateAssignment\"><a style=\"color: #3F2021;\"> Fecha Asignada </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"datePendieng\"><a style=\"color: #3F2021;\"> Fecha Pendiente </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"pending\"><a style=\"color: #3F2021;\"> Motivo Escalado </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"pending\"><a style=\"color: #3F2021;\"> Motivo Pendiente </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"dateSolution\"><a style=\"color: #3F2021;\"> Fecha Solucion </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <a style=\"color: #3F2021;\"> </a>Hora </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"solution\"><a style=\"color: #3F2021;\"> Motivo Solucion </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"pasado\"><a style=\"color: #3F2021;\"> Vencido </a></mfDefaultSorter> </th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"encuesta\"><a style=\"color: #3F2021;\"> Encuesta </a></mfDefaultSorter></th>\n        <th style=\"text-align: center;\"> <mfDefaultSorter by=\"encuestaComents\"><a style=\"color: #3F2021;\"> Comentario encuesta </a></mfDefaultSorter></th>\n      </tr>\n      <tr style=\"background-color: #dad2c1;\">\n        <td></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio2(search.folio)\"></td>\n        <td> </td>\n        <td> </td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria2(search.subcategoria)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio2(search.servicio)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie2\" [(ngModel)]=\"search.numSerie2\" (ngModelChange)=\"searchNumSerie2(search.numSerie2)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea2(search.area)\"></td>\n        <td> </td>\n        <td> </td>\n        <td> </td>\n        <td> </td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatusCallCenter\" (ngModelChange)=\"searchEstatusCallCenter2(search.estatusCallCenter)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatus\" (ngModelChange)=\"searchEstatus2(search.estatus)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"sucursal\" [(ngModel)]=\"search.sucursal\" (ngModelChange)=\"searchSucursal2(search.sucursal)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"areaSucursal\" [(ngModel)]=\"search.areaSucursal\" (ngModelChange)=\"searchAreaSucursal2(search.areaSucursal)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy2(search.reportadoPor)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista2(search.analista)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"responsable1\" [(ngModel)]=\"search.responsable1\" (ngModelChange)=\"searchResponsable12(search.responsable1)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"responsable2\" [(ngModel)]=\"search.responsable2\" (ngModelChange)=\"searchResponsable22(search.responsable2)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"responsable2\" [(ngModel)]=\"search.responsable3\" (ngModelChange)=\"searchResponsable33(search.responsable4)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"responsable2\" [(ngModel)]=\"search.responsable4\" (ngModelChange)=\"searchResponsable44(search.responsable2)\"></td>\n        <td> </td>\n        <td> </td>\n        <td> </td>\n        <td> </td>\n        <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"motivoAsignadoCallCenter\" [(ngModel)]=\"search.motivoAsignadoCallCenter\" (ngModelChange)=\"searchMotivoEscalado2(search.motivoAsignadoCallCenter)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"motivoPendiente\" [(ngModel)]=\"search.motivoPendiente\" (ngModelChange)=\"searchMotivoPendiente2(search.motivoPendiente)\"></td>\n        <td> </td>\n        <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"motivoSolucion\" [(ngModel)]=\"search.motivoSolucion\" (ngModelChange)=\"searchMotivoSolucion2(search.motivoSolucion)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido(search.vencido)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"encuesta\" [(ngModel)]=\"search.encuesta\" (ngModelChange)=\"searchEncuesta(search.encuesta)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"encuestaComents\" [(ngModel)]=\"search.encuestaComents\" (ngModelChange)=\"searchEncuestaComents(search.encuestaComents)\"></td>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"odd gradeX\" *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1;\">\n        <td style=\"text-align: center;\"> {{i + 1}} </td>\n        <td style=\"text-align: center; padding-top: 0.2%;\"> \n          <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\" [routerLink]=\"['/requestDetail',item.codeRequest]\" [routerLinkActive]=\"['actived']\">{{item.codeRequest}}</button>\n          <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n        </td>\n        <td style=\"text-align: center;\"> {{momentTimeDate(item.dateOfReport1)}} </td>\n        <td style=\"text-align: center;\"> {{momentTimeHour(item.dateOfReport1)}} </td>\n        <td style=\"text-align: center;\"> {{item.subCategory}} </td>\n        <td style=\"text-align: center;\"> {{item.service}} </td>\n        <td style=\"text-align: center;\"> {{item.numSerie}} </td>\n        <td style=\"text-align: center;\"> {{item.issue.category}} </td>\n        <td style=\"text-align: center;\"> {{item.issue.sla}} </td>\n        <td style=\"text-align: center;\"> <a *ngIf=\"item.issue && item.issue.slaCallCenter\">{{item.issue.slaCallCenter}}</a> </td>\n        <td><a *ngIf=\"item.solutionTimeNew\"> {{item.solutionTimeNew}} </a></td>\n        <td><a *ngIf=\"item.solutionTimeHours\"> {{item.solutionTimeHours}} </a></td>\n        <td style=\"text-align: center;\"> {{item.statusCallCenter}}</td>\n        <td style=\"text-align: center;\"> {{item.status}} <label *ngIf=\"item.solutionBySucursal && item.solutionBySucursal=='si'\">Por: Sucursal</label> <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n        <td style=\"text-align: center;\"> {{item.reportBy.name}}<label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label> </td>\n        <td style=\"text-align: center;\"> {{item.reportBy.area.name}}</td>\n        <td style=\"text-align: center;\"> {{item.manager}}</td>\n        <td style=\"text-align: center;\" *ngIf=\"item.analyst\"> {{item.analyst.fname}} {{item.analyst.lname}} </td>\n        <td style=\"text-align: center;\" *ngIf=\"!item.analyst\"> </td>\n        <td style=\"text-align: center;\"> <a *ngIf=\"item.issue.emailToSendAnalist[0]\">{{item.issue.emailToSendAnalist[0].fname+ \" \"+ item.issue.emailToSendAnalist[0].lname}}</a> </td>\n        <td style=\"text-align: center;\"><a *ngIf=\"item.issue.emailToSendAnalist[1]\">{{item.issue.emailToSendAnalist[1].fname+ \" \"+ item.issue.emailToSendAnalist[1].lname}}</a> </td>\n        <td style=\"text-align: center;\"><a *ngIf=\"item.issue.emailToSendAnalist[2]\">{{item.issue.emailToSendAnalist[2].fname+ \" \"+ item.issue.emailToSendAnalist[2].lname}}</a> </td>\n        <td style=\"text-align: center;\"><a *ngIf=\"item.issue.emailToSendAnalist[3]\">{{item.issue.emailToSendAnalist[3].fname+ \" \"+ item.issue.emailToSendAnalist[3].lname}}</a> </td>\n        <td style=\"text-align: center;\"> {{momentTime(item.dateAssignmentCallCenter)}} </td>\n        <td style=\"text-align: center;\"> {{momentTime(item.dateAssignment)}} </td>\n        <td style=\"text-align: center;\"> <a *ngIf=\"item.datePendieng\">{{momentTime(item.datePendieng)}}</a> </td>\n        <td style=\"text-align: center;\"> <a *ngIf=\"item.datePendieng\">{{item.motivoAsignadoCallCenter}}</a> </td>\n        <td style=\"text-align: center;\"> <a *ngIf=\"item.datePendieng\">{{item.pending}}</a> </td>\n        <td style=\"text-align: center;\"> <a *ngIf=\"item.dateSolution\">{{momentTimeDate(item.dateSolution)}}</a> <a *ngIf=\"!item.dateSolution\"> <a *ngIf=\"item.dateSolutionCallCenter\">{{momentTimeDate(item.dateSolutionCallCenter)}}</a>  </a> </td>\n        <td style=\"text-align: center;\"> <a *ngIf=\"item.dateSolution\">{{momentTimeHour(item.dateSolution)}}</a> <a *ngIf=\"!item.dateSolution\"> <a *ngIf=\"item.dateSolutionCallCenter\">{{momentTimeHour(item.dateSolutionCallCenter)}}</a>  </a> </td>\n        <td style=\"text-align: center;\"> {{item.solution}} </td>\n        <td style=\"text-align: center;\"> <a *ngIf=\"item.vencidoH && item.vencidoH=='si'\"> Si </a>  <a *ngIf=\"!item.vencidoH\"> <a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </a> </td>\n        <td style=\"text-align: center;\">{{item.encuesta}} </td>\n        <td style=\"text-align: center;\"><a *ngIf=\"item.encuestaComents\">{{item.encuestaComents}} </a> <a *ngIf=\"!item.encuestaComents\"> </a> </td>\n      </tr>\n      <td></td>\n      <td> <a style=\"font-size: 120%;\" *ngIf=\"inSolution\">Total: {{inSolution.length}}</a> </td>\n    </tbody>\n    <tfoot>\n      <tr style=\"background-color: #dad2c1\">\n          <td colspan=\"12\">\n              <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n          </td>\n      </tr>\n      </tfoot>\n  </table>\n  </div>\n</div>\n\n\n</div>\n</div>\n</div>\n  </section>\n\n  <div *ngIf=\"load==true\">\n    <div id=\"loader-wrapper\">\n      <div id=\"loader\"></div>\n    </div>\n  </div>\n\n<!-- Modal -->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n<div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n  <div class=\"modal-content\">\n    <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n      <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\">  Actualizando  {{issue.codeRequest}}  (Requerimiento) - {{issue.issue.category}} </h4>\n      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n        <span  aria-hidden=\"true\" >&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">     \n\n      <div class=\"col-md-7\" style=\"margin-top: 10px; margin-bottom: 20px;\">\n      <div class=\"card\" style=\"width: 100%; height: 100%; background-color: #f7f7f7;\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <label style=\"text-align: left; margin-top: -30px; margin-left: 20px;\"><h4>Información General</h4></label>\n\n            <div>\n              <div class=\"col-md-5\" style=\"margin-top: 1%;\">\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #575757; font-weight:0;\">servicio </label>\n                </div>\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.service}} </label>      \n                </div>          \n              </div>\n              <div class=\"col-md-7\" style=\"margin-top: 1%;\">\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #575757; font-weight:0;\">Subcategoría </label>\n                </div>\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.subCategory}} </label>      \n                </div>          \n              </div>\n            </div>\n\n            <div>\n              <div class=\"col-md-5\" style=\"margin-top: 4%;\">\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #575757; font-weight:0;\">Sucursal</label>\n                </div>\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.reportBy.name}} </label>      \n                </div>          \n              </div>\n              <div class=\"col-md-7\" style=\"margin-top: 4%;\">\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #575757; font-weight:0;\">Reportado por </label>\n                </div>\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.manager}} </label>      \n                </div>          \n              </div>\n            </div>\n\n\n            <div>\n              <div class=\"col-md-12\" style=\"margin-top: 4%;\">\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #575757; font-weight:0;\">Descripción</label>\n                </div>\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.description}} </label>      \n                </div>          \n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-5\" style=\"margin-top: 10px; margin-bottom: 20px;\">\n      <div class=\"card\" style=\"width: 100%; height: 100%; background-color: #f7f7f7;\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <label style=\"text-align: left; margin-top: -30px; margin-left: 20px;\"><h4>Clasificación & Fechas</h4></label>\n            <div>\n              <div class=\"col-md-5\" style=\"margin-top: 1%;\">\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #575757; font-weight:0;\">Estatus </label>\n                </div>\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.status}} </label>      \n                </div>          \n              </div>\n              <div class=\"col-md-7\" style=\"margin-top: 1%;\">\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #575757; font-weight:0;\">Fecha de inicio </label>\n                </div>\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.dateOfReport}} </label>      \n                </div>          \n              </div>\n            </div>\n            \n            <div style=\"margin-top: 4%;\">\n              <div class=\"col-md-5\" style=\"margin-top: 1%;\">\n                <div class=\"col-md-12\" *ngIf=\"issue.analyst\">\n                  <label style=\"text-align: left; color: #575757; font-weight:0;\">Analista </label>\n                </div>\n                <div class=\"col-md-12\" *ngIf=\"issue.analyst\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.analyst}} </label>      \n                </div>          \n              </div>\n              <div class=\"col-md-7\" style=\"margin-top: 1%;\">\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #575757; font-weight:0;\">Última actualización </label>\n                </div>\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.dateLastUpdate}} </label>      \n                </div>          \n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-12\" style=\"margin-top: 20px;\" *ngFor=\"let item of issue.notes; let i = index\">\n    <div class=\"col-md-12\">\n      <textarea name=\"note\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"1\" cols=\"1\" [disabled]=\"true\">{{momentTime(item.dateOfNote)}} : {{item.noteBy}} </textarea>\n  </div>\n    <div class=\"col-md-12\" style=\"margin-top: 2px;\">\n      <textarea name=\"note\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\" [disabled]=\"true\"> {{item.note}} </textarea>\n  </div>\n    </div>\n  <div class=\"col-md-12\" style=\"margin-top: 40px;\">\n    <label style=\"text-align: left; color: #575757; font-weight:0;\">Bitácora pública </label>\n    <textarea *ngIf=\"identity.type == 'local'\" #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.note\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n    <textarea *ngIf=\"identity.type != 'local' && issue.status == 'Nuevo'\" #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.note\" class=\"form-control\" placeholder=\"Para escribir Asignate el timcket\" rows=\"5\" cols=\"40\" [disabled]=\"true\"></textarea>\n    <textarea *ngIf=\"identity.type != 'local' && issue.status != 'Nuevo'\" #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.note\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n</div>\n\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n      <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" *ngIf=\"identity.type == 'local' || issue.status != 'Nuevo'\" (click)=\"sendNotes(issue)\">Enviar</button>\n      <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" *ngIf=\"identity.type != 'local' && issue.status == 'Nuevo'\" (click)=\"sendNotes(issue)\">Asignar</button>\n    </div>\n  </div>\n</div>\n</div>\n\n\n<style>\n\n#loader-wrapper {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1000;\n}\n\n#loader {\n  display: block;\n  position: relative;\n  left: 50%;\n  top: 50%;\n  width: 150px;\n  height: 150px;\n  margin: -75px 0 0 -75px;\n  border-radius: 50%;\n  border: 3px solid transparent;\n  border-top-color:#f53737;\n  -webkit-animation: spin 2s linear infinite;\n  /* Chrome, Opera 15+, Safari 5+ */\n  animation: spin 2s linear infinite;\n  /* Chrome, Firefox 16+, IE 10+, Opera */\n}\n\n#loader:before {\n  content: \"\";\n  position: absolute;\n  top: 5px;\n  left: 5px;\n  right: 5px;\n  bottom: 5px;\n  border-radius: 50%;\n  border: 3px solid transparent;\n  border-top-color: #eeeeee;\n  -webkit-animation: spin 3s linear infinite;\n  /* Chrome, Opera 15+, Safari 5+ */\n  animation: spin 3s linear infinite;\n  /* Chrome, Firefox 16+, IE 10+, Opera */\n}\n\n#loader:after {\n  content: \"\";\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n  border-radius: 50%;\n  border: 3px solid transparent;\n  border-top-color: #bb2121;\n  -webkit-animation: spin 1.5s linear infinite;\n  /* Chrome, Opera 15+, Safari 5+ */\n  animation: spin 1.5s linear infinite;\n  /* Chrome, Firefox 16+, IE 10+, Opera */\n}\n\n@-webkit-keyframes spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(0deg);\n    /* IE 9 */\n    transform: rotate(0deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n\n  100% {\n    -webkit-transform: rotate(360deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(360deg);\n    /* IE 9 */\n    transform: rotate(360deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n}\n\n@keyframes spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(0deg);\n    /* IE 9 */\n    transform: rotate(0deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n\n  100% {\n    -webkit-transform: rotate(360deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(360deg);\n    /* IE 9 */\n    transform: rotate(360deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n}\n\n</style>"

/***/ }),

/***/ 1053:
/***/ (function(module, exports) {

module.exports = "<!-------------------------------------------------------------\n-------------******* Vista de Sucursal GRANDE *******------------\n--------------------------------------------------------------->\n\n<div class=\"col-lg-12\" *ngIf=\"medida=='grande'\">\n    <h1 style=\"margin-left: 15px; color: #3F2021; font-family: 'sofia-pro'; font-size: 240%; font-weight: 510\">{{title}}</h1>\n\n    <div class=\"col-lg-6\">\n        <div class=\"card\" style=\"width: 100%; height: 150px;\" [routerLink]=\"['/requestNew']\">\n            <div class=\"card-body\">\n                <div class=\"col-lg-2\" style=\"text-align: center; font-size: 40px; margin-top: 40px;\">\n                    <span class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n                </div>\n\n                <div class=\"col-lg-10\" style=\"color: #3F2021\">\n                    <h3>\n                        Nuevo Requerimiento\n                    </h3>\n                    <div>\n                        ¿Necesita ayuda? Elija del catálogo de servicios y envíe su requerimiento a nuestros equipos de soporte, para que en breve sea atendido\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"col-lg-6\">\n        <div class=\"card\" style=\"width: 100%; height: 150px;\" [routerLink]=\"['/requestProces']\">\n            <div class=\"card-body\">\n                <div class=\"col-lg-2\" style=\"text-align: center; font-size: 40px; margin-top: 40px;\">\n                    <span class=\"glyphicon glyphicon-folder-open\" aria-hidden=\"true\"></span>\n                </div>\n\n                <div class=\"col-lg-10\" style=\"color: #3F2021\">\n                    <h3>\n                        Requerimientos en Proceso\n                    </h3>\n                    <div>\n                        Revise sus requerimientos en proceso. Compruebe el progreso, agregue comentarios, adjunte documentos, entienda la solución.\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"col-lg-12\" style=\"margin-top: 28px;\">\n        <div class=\"card\" style=\"width: 100%;\" [routerLink]=\"['/answer']\">\n            <div class=\"card-body\">\n                <div class=\"col-lg-1\" style=\"text-align: center; font-size: 40px; margin-top: 35px;\">\n                    <span class=\"glyphicon glyphicon-cd\" aria-hidden=\"true\"></span>\n                </div>\n\n                <div class=\"col-lg-11\" style=\"color: #3F2021\">\n                    <h3>\n                        Preguntas y Respuestas Frecuentes\n                    </h3>\n                    <div>\n                        ¿En una prisa?\n                    </div>\n                    <div style=\"margin-bottom: 20px;\">\n                        Vea la lista de las preguntas más comunes y encontrará (tal vez) la respuesta inmediata a sus necesidades.\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n<div class=\"col-lg-6\">\n    <div class=\"col-lg-1\">\n    </div>\n    <div class=\"col-lg-11\" style=\"margin-top: 28px; text-align: center;\">\n        <div class=\"card\" style=\"width: 100%; height: 165px;\" [routerLink]=\"['/message']\">\n            <div class=\"card-body\">\n                <div class=\"col-lg-2\" style=\"text-align: center; font-size: 40px; margin-top: 40px;\">\n                    <span class=\"glyphicon glyphicon-comment\" aria-hidden=\"true\"></span>\n                </div>\n\n                <div class=\"col-lg-10\" style=\"color: #3F2021\">\n                    <h3>\n                        Comentarios de Bitácora\n                    </h3>\n                    <div>\n                        Mensajes pendientes por responder\n                    </div>\n                    <div *ngIf=\"message && message.length>=1\" style=\"margin-top: 3%;\">\n                        <a style=\"font-size: 280%;\"><img style=\"width: 55px; height:55px;\" src=\"./assets/bell.gif\" /> <a style=\"color: #C8102E\"> {{ message.length}}</a> <a style=\"font-size: 90%;\"> Pendiente(s)</a> </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-1\">\n    </div>\n</div>\n\n<div class=\"col-lg-6\">\n    \n    <div class=\"col-lg-11\" style=\"margin-top: 28px; text-align: center;\">\n        <div class=\"card\" style=\"width: 100%; height: 165px;\" [routerLink]=\"['/encuesta']\">\n            <div class=\"card-body\">\n                <div class=\"col-lg-2\" style=\"text-align: center; font-size: 40px; margin-top: 40px;\">\n                    <span class=\"glyphicon glyphicon-tasks\" aria-hidden=\"true\"></span>\n                </div>\n\n                <div class=\"col-lg-10\" style=\"color: #3F2021\">\n                    <h3>\n                        Encuestas de Satisfacción\n                    </h3>\n                    <div>\n                        Califica la atención brindada por parte del analista\n                    </div>\n                    <div *ngIf=\"dataEncuesta\" style=\"margin-top: 3%;\">\n                        <a style=\"font-size: 280%;\"><img style=\"width: 55px; height:55px;\" src=\"./assets/bell.gif\" /> <a style=\"color: #C8102E\"> {{ dataEncuesta.length}}</a> <a style=\"font-size: 90%;\"> Pendiente(s)</a> </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-1\">\n    </div>\n</div>\n\n</div>\n\n\n<!-------------------------------------------------------------\n-------------******* Vista de Sucursal CHICA *******------------\n--------------------------------------------------------------->\n\n<div class=\"col-lg-12\" *ngIf=\"medida=='chica'\">\n    <h2>{{title}}</h2>\n\n    <div class=\"col-lg-12\" style=\"margin-top: -5px;\">\n        <div class=\"card\" style=\"width: 100%; height: 130px;\" [routerLink]=\"['/requestNew']\">\n            <div class=\"card-body\">\n                <div class=\"col-lg-1\" style=\"text-align: center; font-size: 30px; margin-top: -4px;\">\n                    <span class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>\n                </div>\n\n                <div class=\"col-lg-9\" style=\"text-align: center; margin-top: -20px; color:#3F2021\">\n                    <h4>\n                        Nuevo Requerimiento\n                    </h4>\n                    <div>\n                        Envíe su requerimiento, para que en breve sea atendido.\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"col-lg-12\" style=\"margin-top: 6px;\">\n        <div class=\"card\" style=\"width: 100%; height: 140px;\" [routerLink]=\"['/requestProces']\">\n            <div class=\"card-body\">\n                <div class=\"col-lg-1\" style=\"text-align: center; font-size: 30px; margin-top: -4px;\">\n                    <span class=\"glyphicon glyphicon-folder-open\" aria-hidden=\"true\"></span>\n                </div>\n\n                <div class=\"col-lg-9\" style=\"text-align: center; margin-top: -25px; color:#3F2021\">\n                    <h4>\n                        Requerimientos en Proceso\n                    </h4>\n                    <div>\n                        Revise sus requerimientos en proceso.\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n<div class=\"col-lg-12\">\n    <div class=\"col-lg-11\" style=\"margin-top: 11px; text-align: center;\">\n        <div class=\"card\" style=\"width: 100%; height: 170px;\" [routerLink]=\"['/message']\">\n            <div class=\"card-body\">\n                <div class=\"col-lg-2\" style=\"text-align: center; font-size: 30px; margin-top: -4px;\">\n                    <span class=\"glyphicon glyphicon-comment\" aria-hidden=\"true\"></span>\n                </div>\n\n                <div class=\"col-lg-9\" style=\"text-align: center; margin-top: -25px; color:#3F2021\">\n                    <h3>\n                        Comentarios de Bitácora\n                    </h3>\n                    <div>\n                        pendientes por responder\n                    </div>\n                    <div *ngIf=\"message && message.length>=1\" style=\"margin-top: 0%;\">\n                        <a style=\"font-size: 130%;\"><img style=\"width: 25px; height:25px;\" src=\"./assets/bell.gif\" /> <a style=\"color: #C8102E;\"> {{ message.length}}</a> <a style=\"font-size: 80%;\"> Pendiente(s)</a> </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-12\">\n    \n    <div class=\"col-lg-11\" style=\"margin-top: 11px; text-align: center;\">\n        <div class=\"card\" style=\"width: 100%; height: 165px;\" [routerLink]=\"['/encuesta']\">\n            <div class=\"card-body\">\n                <div class=\"col-lg-2\" style=\"text-align: center; font-size: 30px; margin-top: -4px;\">\n                    <span class=\"glyphicon glyphicon-tasks\" aria-hidden=\"true\"></span>\n                </div>\n\n                <div class=\"col-lg-9\" style=\"text-align: center; margin-top: -20px; color:#3F2021\">\n                    <h3>\n                        Encuestas de Satisfacción\n                    </h3>\n                    <div>\n                        Califica la atención.\n                    </div>\n                    <div *ngIf=\"dataEncuesta\" style=\"margin-top: 0%;\">\n                        <a style=\"font-size: 130%;\"><img style=\"width: 25px; height:25px;\" src=\"./assets/bell.gif\" /> <a style=\"color: #C8102E;\"> {{ dataEncuesta.length}}</a> <a style=\"font-size: 80%;\"> Pendiente(s)</a> </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-1\">\n    </div>\n</div>\n\n</div>\n\n\n<style>\n.card:hover {\n  cursor: pointer;\n  background: #e9e8e8;\n  color: #3F2021;\n}\n\n.glyphicon{\n    color: #C8102E;\n}\n\n@import url(\"https://p.typekit.net/p.css?s=1&k=lkr2zif&ht=tk&f=24539.24540.24547&a=6178157&app=typekit&e=css\");\n@font-face {\nfont-family:\"sofia-pro\";\nsrc:url(\"https://use.typekit.net/af/5d97ff/00000000000000007735f999/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"woff2\"),url(\"https://use.typekit.net/af/5d97ff/00000000000000007735f999/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"woff\"),url(\"https://use.typekit.net/af/5d97ff/00000000000000007735f999/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"opentype\");\nfont-display:auto;font-style:normal;font-weight:700;font-stretch:normal;\n}\n@font-face {\nfont-family:\"sofia-pro\";\nsrc:url(\"https://use.typekit.net/af/66e20c/00000000000000007735f993/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3\") format(\"woff2\"),url(\"https://use.typekit.net/af/66e20c/00000000000000007735f993/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3\") format(\"woff\"),url(\"https://use.typekit.net/af/66e20c/00000000000000007735f993/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3\") format(\"opentype\");\nfont-display:auto;font-style:italic;font-weight:700;font-stretch:normal;\n}\n@font-face {\nfont-family:\"sofia-pro\";\nsrc:url(\"https://use.typekit.net/af/b718ff/00000000000000007735f98d/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"woff2\"),url(\"https://use.typekit.net/af/b718ff/00000000000000007735f98d/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"woff\"),url(\"https://use.typekit.net/af/b718ff/00000000000000007735f98d/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"opentype\");\nfont-display:auto;font-style:normal;font-weight:400;font-stretch:normal;\n}\n.tk-sofia-pro { font-family: \"sofia-pro\",sans-serif; }\n\n</style>"

/***/ }),

/***/ 1054:
/***/ (function(module, exports) {

module.exports = "<div class=\"col-md-9\">\n  <h3 style=\"margin-left: -1.8%; color: #DDCBA4\">\n    <div style=\"font-size: 95%\" class=\"col-md-1\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-speedometer2\" viewBox=\"0 0 16 16\">\n        <path d=\"M8 4a.5.5 0 0 1 .5.5V6a.5.5 0 0 1-1 0V4.5A.5.5 0 0 1 8 4zM3.732 5.732a.5.5 0 0 1 .707 0l.915.914a.5.5 0 1 1-.708.708l-.914-.915a.5.5 0 0 1 0-.707zM2 10a.5.5 0 0 1 .5-.5h1.586a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 10zm9.5 0a.5.5 0 0 1 .5-.5h1.5a.5.5 0 0 1 0 1H12a.5.5 0 0 1-.5-.5zm.754-4.246a.389.389 0 0 0-.527-.02L7.547 9.31a.91.91 0 1 0 1.302 1.258l3.434-4.297a.389.389 0 0 0-.029-.518z\"/>\n        <path fill-rule=\"evenodd\" d=\"M0 10a8 8 0 1 1 15.547 2.661c-.442 1.253-1.845 1.602-2.932 1.25C11.309 13.488 9.475 13 8 13c-1.474 0-3.31.488-4.615.911-1.087.352-2.49.003-2.932-1.25A7.988 7.988 0 0 1 0 10zm8-7a7 7 0 0 0-6.603 9.329c.203.575.923.876 1.68.63C4.397 12.533 6.358 12 8 12s3.604.532 4.923.96c.757.245 1.477-.056 1.68-.631A7 7 0 0 0 8 3z\"/>\n      </svg>\n    </div>\n    <div *ngIf=\"identity.type != 'callCenter'\" class=\"col-md-5\" style=\"margin-left: -4%; font-family: 'sofia-pro'; font-size: 110%; font-weight: 510;\">\n      MÉTRICAS\n    </div>\n    <div *ngIf=\"identity.type == 'callCenter'\" class=\"col-md-5\" style=\"margin-left: -4%; font-family: 'sofia-pro'; font-size: 110%; font-weight: 510;\">\n      MÉTRICAS GLOBALES\n    </div>\n  </h3>\n</div>\n<div class=\"col-md-3\" style=\"margin-top: 20px; margin-bottom: 10px;\">\n  <div class=\"input-group\">\n    <span class=\"input-group-btn\">\n      <button class=\"btn btn-default\" style=\"background-color: #e1e1e1;\" type=\"button\" (click)=\"goToSearch(search)\">\n        <div style=\"font-size: 10px;\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\n            <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\n          </svg>\n        </div>\n      </button>\n    </span>\n    <input style=\"background-color: #e1e1e1;\" type=\"text\" class=\"form-control\" placeholder=\"Buscar Folio\" #name=\"ngModel\" name=\"search\" [(ngModel)]=\"search\">\n  </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<section class=\"row\" id=\"main-content\">\n    <div class=\"col-xs-12\">\n\n<div class=\"panel panel-default\" style=\"background-color: #DDCBA4; border-color: rgb(71, 71, 71);\">\n<div class=\"panel-body\">\n\n\n<div class=\"col-md-4\" style=\"margin-top: 1%; \">\n  <div clas=\"col-md-12\" style=\"text-align: center; color: #3F2021; font-size: 'sofia-pro'; font-size: large; margin-left: -15%;\">\n    Diario\n  </div>\n  <div class=\"clearfix\"></div>\n\n\n  <div class=\"col-md-6\" style=\"margin-top: 1%;\">\n    <div style=\"color: #3F2021; font-size: medium; text-align: end; font-family: 'sofia-pro';\">\n      Reportados:\n    </div>\n  </div>\n  <div class=\"col-md-6\" style=\"margin-top: 1%;\">\n    <div style=\"color: #3F2021; font-size: medium; margin-left: -15%; font-size: 'sofia-pro'\">\n     {{reportDiario}}\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div class=\"col-md-6\" style=\"margin-top: 0%;\">\n    <div style=\"color: #3F2021; font-size: medium; text-align: end; font-size: 'sofia-pro'\">\n      Cerrados:\n    </div>\n  </div>\n  <div class=\"col-md-6\" style=\"margin-top: 0%;\">\n    <div style=\"color: #3F2021; font-size: medium; margin-left: -15%; font-size: 'sofia-pro'\">\n      {{cerradoDiario}}\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n\n  <div clas=\"col-md-12\" style=\"text-align: center; color: #3F2021; font-size: large; margin-left: -15%; margin-top: 9%;\">\n    Mes Actual\n  </div>\n  <div class=\"clearfix\"></div>\n\n\n  <div class=\"col-md-6\" style=\"margin-top: 1%;\">\n    <div style=\"color: #3F2021; font-size: medium; text-align: end;\">\n      Reportados:\n    </div>\n  </div>\n  <div class=\"col-md-6\" style=\"margin-top: 1%;\">\n    <div style=\"color: #3F2021; font-size: medium; margin-left: -15%;\">\n      {{reportMes}}\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div class=\"col-md-6\" style=\"margin-top: 0%;\">\n    <div style=\"color: #3F2021; font-size: medium; text-align: end;\">\n      Cerrados:\n    </div>\n  </div>\n  <div class=\"col-md-6\" style=\"margin-top: 0%;\">\n    <div style=\"color: #3F2021; font-size: medium; margin-left: -15%;\">\n      {{cerradoMes}}\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n\n  <div clas=\"col-md-12\" style=\"text-align: center; color: #3F2021; font-size: large; margin-left: -15%; margin-top: 9%;\">\n    Año Actual\n  </div>\n  <div class=\"clearfix\"></div>\n\n\n  <div class=\"col-md-6\" style=\"margin-top: 1%;\">\n    <div style=\"color: #3F2021; font-size: medium; text-align: end;\">\n      Reportados:\n    </div>\n  </div>\n  <div class=\"col-md-6\" style=\"margin-top: 1%;\">\n    <div style=\"color: #3F2021; font-size: medium; margin-left: -15%;\">\n      {{reportAnual}}\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div class=\"col-md-6\" style=\"margin-top: 0%;\">\n    <div style=\"color: #3F2021; font-size: medium; text-align: end;\">\n      Cerrados:\n    </div>\n  </div>\n  <div class=\"col-md-6\" style=\"margin-top: 0%;\">\n    <div style=\"color: #3F2021; font-size: medium; margin-left: -15%;\">\n      {{cerradoAnual}}\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n\n\n</div>\n\n<div style=\"color: #3F2021; font-size: large; margin-left: 47%;\">\n  General\n</div>\n<div class=\"col-md-4\" style=\"margin-top: 0%;\">\n  <div class=\"col-md-6\">\n    <div class=\"col-md-12\">\n    <div style=\"text-align: center; color: #3F2021; font-size: medium;\">\n      Nuevo\n    </div>\n    <div style=\"height: 100px; width: 140px; background-color: #3F2021; color: #fff; text-align: center; margin-top: 4%;\">\n      <div style=\"color: rgba(255, 255, 0, 0.896); font-size: 400%; padding-top: 10%;\">\n        {{nuevo}}\n      </div>\n    </div>\n\n    </div>\n    <div class=\"clearfix\"></div>\n\n\n    <div class=\"col-md-12\" style=\"padding-top: 18px;\">\n      <div style=\"text-align: center; color: #3F2021; font-size: medium;\">\n        Asignado\n      </div>\n      <div style=\"height: 100px;  width: 140px; background-color: #3F2021; color: #fff; text-align: center; margin-top: 4%;\">\n        <div style=\"color:  rgba(255, 255, 0, 0.896); font-size: 400%; padding-top: 10%;\">\n          {{asignado}}\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n  <div class=\"col-md-6\">\n\n\n    <div class=\"col-md-12\">\n\n    <div style=\"text-align: center; color: #3F2021; font-size: medium;\">\n      Cerrados\n    </div>\n    <div style=\"height: 100px;  width: 140px; background-color: #3F2021; color: #fff; text-align: center; margin-top: 4%;\">\n      <div style=\"color:  rgba(0,128,0,.7); font-size: 400%; padding-top: 10%;\">\n        {{cerradoTot}}\n      </div>\n    </div>\n    </div>\n    <div class=\"clearfix\"></div>\n\n\n    <div class=\"col-md-12\" style=\"padding-top: 18px;\">\n      <div style=\"text-align: center; color: #3F2021; font-size: medium;\">\n        Pendientes\n      </div>\n      <div style=\"height: 100px; width: 140px; background-color: #3F2021; color: #fff; text-align: center; margin-top: 4%; margin-bottom: 10%;\">\n        <div style=\"color: rgba(255, 255, 0, 0.896); font-size: 400%; padding-top: 10%;\">\n          {{pendiente}}\n        </div>\n      </div>\n  \n      </div>\n      <div class=\"clearfix\"></div>\n\n\n  </div>\n\n</div>\n\n<div class=\"col-md-4\" style=\"margin-top: 1%;\">\n<div style=\"color: #3F2021; text-align: center; font-size: medium;\">\n  Timckets Mensuales\n</div>\n\n<div class=\"col-md-12\">\n  <div>\n  <div style=\"color: #3F2021; font-size: 30px; text-align: end;\" class=\"col-md-7\">\n    {{mes1}}\n  </div>\n  <div style=\"color: #3F2021; font-size: 30px; text-align: end;\" class=\"col-md-3\">\n    {{mes1Num}}\n  </div>\n  <div class=\"col-md-2\" style=\"font-size: 30px;\">\n    <!-- <span class=\"glyphicon glyphicon-arrow-up\" aria-hidden=\"true\"></span> -->\n  </div>\n  </div>\n\n  <div>\n    <div style=\"color: #3F2021; font-size: 30px; text-align: end;\" class=\"col-md-7\">\n      {{mes2}}\n    </div>\n    <div style=\"color: #3F2021;; font-size: 30px; text-align: end;\" class=\"col-md-3\">\n      {{mes2Num}}\n    </div>\n    <div class=\"col-md-2\" style=\"font-size: 30px;\">\n      <!-- <span class=\"glyphicon glyphicon-arrow-down\" aria-hidden=\"true\"></span> -->\n    </div>\n    </div>\n\n    <div>\n      <div style=\"color: #3F2021; font-size: 30px; text-align: end; padding-left: 5%;\" class=\"col-md-7\">\n        {{mes3}}\n      </div>\n      <div style=\"color: #3F2021;; font-size: 30px; text-align: end;\" class=\"col-md-3\">\n        {{mes3Num}}\n      </div>\n      <div class=\"col-md-2\" style=\"font-size: 30px;\">\n        <!-- <span class=\"glyphicon glyphicon-arrow-up\" aria-hidden=\"true\"></span> -->\n      </div>\n      </div>\n\n      <div>\n        <div style=\"color: #3F2021; font-size: 30px; text-align: end; padding-left: 5%;\" class=\"col-md-7\">\n          {{mes4}}\n        </div>\n        <div style=\"color: #3F2021; font-size: 30px; text-align: end;\" class=\"col-md-3\">\n          {{mes4Num}}\n        </div>\n        <div class=\"col-md-2\" style=\"font-size: 30px;\">\n          <!-- <span class=\"glyphicon glyphicon-arrow-up\" aria-hidden=\"true\"></span> -->\n        </div>\n        </div>\n\n</div>\n\n</div>\n\n\n\n</div>\n</div>\n\n<h3 style=\"color: #DDCBA4; margin-top: 2%;\">\n  <div style=\"font-size: 95%\" class=\"col-md-1\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-speedometer2\" viewBox=\"0 0 16 16\">\n      <path d=\"M8 4a.5.5 0 0 1 .5.5V6a.5.5 0 0 1-1 0V4.5A.5.5 0 0 1 8 4zM3.732 5.732a.5.5 0 0 1 .707 0l.915.914a.5.5 0 1 1-.708.708l-.914-.915a.5.5 0 0 1 0-.707zM2 10a.5.5 0 0 1 .5-.5h1.586a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 10zm9.5 0a.5.5 0 0 1 .5-.5h1.5a.5.5 0 0 1 0 1H12a.5.5 0 0 1-.5-.5zm.754-4.246a.389.389 0 0 0-.527-.02L7.547 9.31a.91.91 0 1 0 1.302 1.258l3.434-4.297a.389.389 0 0 0-.029-.518z\"/>\n      <path fill-rule=\"evenodd\" d=\"M0 10a8 8 0 1 1 15.547 2.661c-.442 1.253-1.845 1.602-2.932 1.25C11.309 13.488 9.475 13 8 13c-1.474 0-3.31.488-4.615.911-1.087.352-2.49.003-2.932-1.25A7.988 7.988 0 0 1 0 10zm8-7a7 7 0 0 0-6.603 9.329c.203.575.923.876 1.68.63C4.397 12.533 6.358 12 8 12s3.604.532 4.923.96c.757.245 1.477-.056 1.68-.631A7 7 0 0 0 8 3z\"/>\n    </svg>\n  </div>\n    <div class=\"col-md-10\" style=\"margin-left: -5%; font-family: 'sofia-pro'; font-size: 110%; font-weight: 510;\">\n      ADMINISTRACIÓN DE REQUERIMIENTOS\n    </div>\n</h3>\n<div class=\"panel panel-default\" style=\"background-color: #DDCBA4; border-color: rgb(71, 71, 71); margin-top: 5%;\">\n  <div class=\"panel-body\">\n\n  <div *ngIf=\"identity.type!='callCenter'\" class=\"portlet-body form\" style=\"margin-top: 2%; font-size: 110%;\">\n    <div class=\"row\">\n    <div class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inNew\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\" [mfRowsOnPage]=\"20\">\n      <thead>\n        <tr>\n          <th style=\"text-align: center;\"><mfDefaultSorter><a style=\"color: #3F2021;\"> # </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"codeRequest\"><a style=\"color: #3F2021;\"> Nombre Común</a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"dateOfReport\"><a style=\"color: #3F2021;\"> Fecha de inicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><a style=\"color: #3F2021;\"> Hora </a></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"subCategory\"><a style=\"color: #3F2021;\"> Subcategoría </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"service\"><a style=\"color: #3F2021;\"> Servicio  </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"numSerie\"><a style=\"color: #3F2021;\">  Num.Serie </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.category\"><a style=\"color: #3F2021;\"> Área </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.sla\"><a style=\"color: #3F2021;\"> SLA </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"restantes\"><a style=\"color: #3F2021;\"> Restante </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"status\"><a style=\"color: #3F2021;\"> Estatus  </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.name\"><a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"analyst.fnames\"><a style=\"color: #3F2021;\"> Analista </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"pasado\"><a style=\"color: #3F2021;\"> Vencido </a></mfDefaultSorter></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style=\"background-color: #dad2c1;\">\n          <td></td>\n          <td > <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio(search.folio)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria(search.subcategoria)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio(search.servicio)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie\" [(ngModel)]=\"search.numSerie\" (ngModelChange)=\"searchNumSerie(search.numSerie)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea(search.area)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatus\" (ngModelChange)=\"searchEstatus(search.estatus)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy(search.reportadoPor)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista(search.analista)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido(search.vencido)\"></td>\n        </tr>\n        <tr class=\"odd gradeX\" *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1;\">\n          <td style=\"text-align: center;\"> {{i + 1}} </td>\n          <td style=\"text-align: center; padding-top: 0.2%;\"> \n            <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\">\n            <!-- <a> -->\n              <button type=\"button\" class=\"btn\" style=\"color: #C8102E;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center;\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center;\"> {{item.service}} </td>\n          <td style=\"text-align: center;\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center;\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center;\"> {{item.issue.sla}} </td>\n          <td style=\"text-align: center;\"> <a *ngIf=\"item.status!='Solucionado'\">{{item.restantes}}</a> <a *ngIf=\"item.status=='Solucionado'\"></a> </td>\n          <td style=\"text-align: center;\"><a *ngIf=\"item.status\" >{{item.status}} </a> <a *ngIf=\"!item.status\" >{{item.statusCallCenter}}</a><label *ngIf=\"item.reaperturado && item.reaperturado[0]\">Reaperturado</label> </td>\n          <td style=\"text-align: center;\"> {{item.reportBy.name}}<label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label> </td>\n          <td style=\"text-align: center;\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a></td>\n          <td style=\"text-align: center;\"><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </td>\n        </tr>\n\n        <td></td>\n        <td> <a style=\"font-size: 120%;\" *ngIf=\"inNew\">Total: {{inNew.length}}</a> </td>\n      </tbody>\n      <tfoot>\n        <tr style=\"background-color: #dad2c1\">\n            <td colspan=\"12\">\n                <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n            </td>\n        </tr>\n        </tfoot>\n    </table>\n    </div>\n  </div>\n  </div>\n  \n\n\n  <div *ngIf=\"identity.type=='callCenter'\" class=\"portlet-body form\" style=\"margin-top: 2%; font-size: 110%;\">\n    <div class=\"row\">\n    <div class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inNew\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\" [mfRowsOnPage]=\"20\">\n      <thead>\n        <tr>\n          <th style=\"text-align: center;\"><mfDefaultSorter><a style=\"color: #3F2021;\"> # </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"codeRequest\"><a style=\"color: #3F2021;\"> Nombre Común</a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"dateOfReport\"><a style=\"color: #3F2021;\"> Fecha de inicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><a style=\"color: #3F2021;\"> Hora </a></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"subCategory\"><a style=\"color: #3F2021;\"> Subcategoría </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"service\"><a style=\"color: #3F2021;\"> Servicio  </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"numSerie\"><a style=\"color: #3F2021;\">  Num.Serie </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.category\"><a style=\"color: #3F2021;\"> Área </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.slaCallCenter\"><a style=\"color: #3F2021;\"> SLA CallC.</a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"restantes\"><a style=\"color: #3F2021;\"> Restante </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"statusCallCenter\"><a style=\"color: #3F2021;\"> Estatus  </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.name\"><a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"analyst.fnames\"><a style=\"color: #3F2021;\"> Analista </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"pasado\"><a style=\"color: #3F2021;\"> Vencido </a></mfDefaultSorter></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style=\"background-color: #dad2c1;\">\n          <td></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio(search.folio)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria(search.subcategoria)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio(search.servicio)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie\" [(ngModel)]=\"search.numSerie\" (ngModelChange)=\"searchNumSerie2(search.numSerie)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea(search.area)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatusCallCenter\" [(ngModel)]=\"search.estatusCallCenter\" (ngModelChange)=\"searchEstatus(search.estatusCallCenter)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy(search.reportadoPor)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista(search.analista)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido(search.vencido)\"></td>\n        </tr>\n        <tr class=\"odd gradeX\" *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1\">\n          <td style=\"text-align: center;\"> {{i + 1}} </td>\n          <td style=\"text-align: center; padding-top: 0.2%;\"> \n            <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\">\n            <!-- <a> -->\n              <button type=\"button\" class=\"btn\" style=\"color: #C8102E;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center;\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\"> {{momentTimeHour(item.dateOfReport)}} </td>          <td style=\"text-align: center;\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center;\"> {{item.service}} </td>\n          <td style=\"text-align: center;\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center;\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center;\"> {{item.issue.slaCallCenter}} </td>\n          <td style=\"text-align: center;\"> <a *ngIf=\"item.statusCallCenter!='SolucionadoCallCenter'\">{{item.restantes}}</a> <a *ngIf=\"item.statusCallCenter=='SolucionadoCallCenter'\"></a> </td>\n          <td style=\"text-align: center;\"> {{item.statusCallCenter}} <label *ngIf=\"item.reaperturado && item.reaperturado[0]\">Reaperturado</label> </td>\n          <td style=\"text-align: center;\"> {{item.reportBy.name}}<label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label> </td>\n          <td style=\"text-align: center;\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a></td>\n          <td style=\"text-align: center;\"><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </td>\n        </tr>\n\n        <td></td>\n        <td> <a style=\"font-size: 120%;\" *ngIf=\"inNew\">Total: {{inNew.length}}</a> </td>\n      </tbody>\n      <tfoot>\n        <tr>\n            <td colspan=\"12\">\n                <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n            </td>\n        </tr>\n        </tfoot>\n    </table>\n    </div>\n  </div>\n  </div>\n\n  </div>\n  </div>\n\n\n</div>\n</section>\n\n<div *ngIf=\"load==true\">\n  <div id=\"loader-wrapper\">\n    <div id=\"loader\"></div>\n  </div>\n</div>\n\n<!-- Modal -->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\">  Actualizando  {{issue.codeRequest}}  (Requerimiento) - {{issue.issue.category}} </h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n\n        <div class=\"col-md-7\" style=\"margin-top: 10px;\">\n        <div class=\"card\" style=\"width: 100%; height: 100%; background-color: #f7f7f7;\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <label style=\"text-align: left; margin-top: -30px; margin-left: 20px;\"><h4>Información General</h4></label>\n\n              <div>\n                <div class=\"col-md-5\" style=\"margin-top: 1%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">servicio </label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.service}} </label>      \n                  </div>          \n                </div>\n                <div class=\"col-md-7\" style=\"margin-top: 1%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Subcategoría </label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.subCategory}} </label>      \n                  </div>          \n                </div>\n              </div>\n\n              <div>\n                <div class=\"col-md-5\" style=\"margin-top: 4%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Sucursal</label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.reportBy.name}} </label>      \n                  </div>          \n                </div>\n                <div class=\"col-md-7\" style=\"margin-top: 4%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Reportado por </label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.manager}} </label>      \n                  </div>          \n                </div>\n              </div>\n\n\n              <div>\n                <div class=\"col-md-12\" style=\"margin-top: 4%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Descripción</label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.description}} </label>      \n                  </div>          \n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-md-5\" style=\"margin-top: 10px;\">\n        <div class=\"card\" style=\"width: 100%; height: 100%; background-color: #f7f7f7;\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <label style=\"text-align: left; margin-top: -30px; margin-left: 20px;\"><h4>Clasificación & Fechas</h4></label>\n              <div>\n                <div class=\"col-md-5\" style=\"margin-top: 1%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Estatus </label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.status}} </label>      \n                  </div>          \n                </div>\n                <div class=\"col-md-7\" style=\"margin-top: 1%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Fecha de inicio </label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.dateOfReport}} </label>      \n                  </div>          \n                </div>\n              </div>\n              \n              <div style=\"margin-top: 4%;\">\n                <div class=\"col-md-5\" style=\"margin-top: 1%;\">\n                  <div class=\"col-md-12\" *ngIf=\"issue.analyst\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Analista </label>\n                  </div>\n                  <div class=\"col-md-12\" *ngIf=\"issue.analyst\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.analyst}} </label>      \n                  </div>          \n                </div>\n                <div class=\"col-md-7\" style=\"margin-top: 1%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Última actualización </label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.dateLastUpdate}} </label>      \n                  </div>          \n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"col-md-12\" style=\"margin-top: 20px;\" *ngFor=\"let item of issue.notes; let i = index\">\n        <div class=\"col-md-12\">\n          <textarea name=\"note\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"1\" cols=\"1\" [disabled]=\"true\">{{momentTime(item.dateOfNote)}} : {{item.noteBy}} </textarea>\n      </div>\n        <div class=\"col-md-12\" style=\"margin-top: 2px;\">\n          <textarea name=\"note\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\" [disabled]=\"true\"> {{item.note}} </textarea>\n      </div>\n        </div>\n      <div class=\"col-md-12\" style=\"margin-top: 40px;\">\n          <label style=\"text-align: left; color: #575757; font-weight:0;\">Bitácora pública </label>\n          <textarea name=\"comentarios\"name=\"description\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n      </div>\n\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\"  (click)=\"asignar()\">Enviar</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n\n* {\n    box-sizing: border-box;    \n}\n.grafico {\n    height: 200px;\n    margin: 1rem;\n    position: relative;\n    width: 200px;\n      } \n.recorte {\n    border-radius: 50%;\n    clip: rect(0px, 200px, 200px, 100px);\n    height: 100%;\n    position: absolute;\n    width: 100%;\n     }\n.quesito {\n    border-radius: 50%;\n    clip: rect(0px, 100px, 200px, 0px);\n    height: 100%;\n    position: absolute;\n    width: 100%;\n    font-family: monospace;\n    font-size: 1.5rem;\n     }\n.sombra {\n    background-color: #fff;\n    border-radius: 50%;\n    box-shadow: 0 4px 7px rgba(0, 0, 0, 0.3);\n    border: 5px solid #000;\n    height: 100%;\n    position: absolute;\n    width: 100%;\n     }\n\n#porcion1 {\n    transform: rotate(-40deg);\n     }\n\n#porcion1 .quesito {\n    background-color:rgb(197, 197, 197);\n    transform: rotate(180deg);\n     }\n#porcion2 {\n    transform: rotate(70deg);\n     }\n#porcion2 .quesito {\n    background-color:rgb(197, 197, 197);\n    transform: rotate(170deg);\n     }\n#porcion3 {\n    transform: rotate(-200deg);\n     }\n#porcion3 .quesito {\n    background-color:rgb(197, 197, 197);\n    transform: rotate(45deg);\n     }\n#porcionFin {\n    transform:rotate(-175deg);\n     }\n#porcionFin .quesito {\n    background-color:rgb(197, 197, 197);\n    transform: rotate(145deg);\n     }\n#porcion1 .quesito:after {\n    content: attr(data-rel);\n    left: 25%;\n    line-height: 5;\n    position: absolute;\n    top: 0;\n    transform: rotate(-70deg);\n}\n#porcion2 .quesito:after {\n    content: attr(data-rel);\n    left: 15%;\n    position: absolute;\n    top: 30%;\n    transform: rotate(-190deg);\n}\n#porcion3 .quesito:after {\n    content: attr(data-rel);\n    left: 35%;\n    position: absolute;\n    top: 4%;\n    transform: rotate(70deg);\n}\n#porcionFin .quesito:after {\n   content: attr(data-rel);\n   left: 10%;\n   position: absolute;\n   top: 30%;\n}\n\n\n#loader-wrapper {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 1000;\n  }\n\n  #loader {\n    display: block;\n    position: relative;\n    left: 50%;\n    top: 50%;\n    width: 150px;\n    height: 150px;\n    margin: -75px 0 0 -75px;\n    border-radius: 50%;\n    border: 3px solid transparent;\n    border-top-color:#f53737;\n    -webkit-animation: spin 2s linear infinite;\n    /* Chrome, Opera 15+, Safari 5+ */\n    animation: spin 2s linear infinite;\n    /* Chrome, Firefox 16+, IE 10+, Opera */\n  }\n\n  #loader:before {\n    content: \"\";\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    right: 5px;\n    bottom: 5px;\n    border-radius: 50%;\n    border: 3px solid transparent;\n    border-top-color: #eeeeee;\n    -webkit-animation: spin 3s linear infinite;\n    /* Chrome, Opera 15+, Safari 5+ */\n    animation: spin 3s linear infinite;\n    /* Chrome, Firefox 16+, IE 10+, Opera */\n  }\n\n  #loader:after {\n    content: \"\";\n    position: absolute;\n    top: 15px;\n    left: 15px;\n    right: 15px;\n    bottom: 15px;\n    border-radius: 50%;\n    border: 3px solid transparent;\n    border-top-color: #bb2121;\n    -webkit-animation: spin 1.5s linear infinite;\n    /* Chrome, Opera 15+, Safari 5+ */\n    animation: spin 1.5s linear infinite;\n    /* Chrome, Firefox 16+, IE 10+, Opera */\n  }\n\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(0deg);\n      /* IE 9 */\n      transform: rotate(0deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n\n    100% {\n      -webkit-transform: rotate(360deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(360deg);\n      /* IE 9 */\n      transform: rotate(360deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(0deg);\n      /* IE 9 */\n      transform: rotate(0deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n\n    100% {\n      -webkit-transform: rotate(360deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(360deg);\n      /* IE 9 */\n      transform: rotate(360deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n  }\n\n@import url(\"https://p.typekit.net/p.css?s=1&k=lkr2zif&ht=tk&f=24539.24540.24547&a=6178157&app=typekit&e=css\");\n@font-face {\nfont-family:\"sofia-pro\";\nsrc:url(\"https://use.typekit.net/af/5d97ff/00000000000000007735f999/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"woff2\"),url(\"https://use.typekit.net/af/5d97ff/00000000000000007735f999/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"woff\"),url(\"https://use.typekit.net/af/5d97ff/00000000000000007735f999/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"opentype\");\nfont-display:auto;font-style:normal;font-weight:700;font-stretch:normal;\n}\n@font-face {\nfont-family:\"sofia-pro\";\nsrc:url(\"https://use.typekit.net/af/66e20c/00000000000000007735f993/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3\") format(\"woff2\"),url(\"https://use.typekit.net/af/66e20c/00000000000000007735f993/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3\") format(\"woff\"),url(\"https://use.typekit.net/af/66e20c/00000000000000007735f993/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3\") format(\"opentype\");\nfont-display:auto;font-style:italic;font-weight:700;font-stretch:normal;\n}\n@font-face {\nfont-family:\"sofia-pro\";\nsrc:url(\"https://use.typekit.net/af/b718ff/00000000000000007735f98d/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"woff2\"),url(\"https://use.typekit.net/af/b718ff/00000000000000007735f98d/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"woff\"),url(\"https://use.typekit.net/af/b718ff/00000000000000007735f98d/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"opentype\");\nfont-display:auto;font-style:normal;font-weight:400;font-stretch:normal;\n}\n\n</style>"

/***/ }),

/***/ 1055:
/***/ (function(module, exports) {

module.exports = "<h1> {{ title }} </h1>\n\n<section class=\"row\" id=\"main-content\">\n    <div class=\"col-xs-12\">\n\n<div class=\"panel panel-default\">\n<div class=\"panel-body\">\n        <div class=\"portlet-body form\" style=\"margin-top: 2%; font-size: 100%;\">\n            <div class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n            <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"allIsues\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\" [mfRowsOnPage]=\"20\">\n              <thead>\n                <tr>\n                  <th><mfDefaultSorter>#</mfDefaultSorter></th>\n                  <th><mfDefaultSorter by=\"category\">Categoría</mfDefaultSorter></th>\n                  <th><mfDefaultSorter by=\"service\">Servicio</mfDefaultSorter></th>\n                  <th><mfDefaultSorter by=\"subcategory\">SubCategoria</mfDefaultSorter></th>\n                  <th><mfDefaultSorter by=\"sla\">SLA Analista</mfDefaultSorter></th>\n                  <th><mfDefaultSorter by=\"slaCallCenter\">SLA CallCenter</mfDefaultSorter></th>\n                  <th><mfDefaultSorter by=\"descSla\">Desc. SLA</mfDefaultSorter></th>\n                  <th><mfDefaultSorter by=\"activo\">Activo</mfDefaultSorter></th>\n                  <th><mfDefaultSorter>Detalles</mfDefaultSorter></th>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"category\" [(ngModel)]=\"search.category\" (ngModelChange)=\"searchCategory(search.category)\"></td>\n                  <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"service\" [(ngModel)]=\"search.service\" (ngModelChange)=\"searchService(search.service)\"></td>\n                  <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"subcategory\" [(ngModel)]=\"search.subcategory\" (ngModelChange)=\"searchSubcategory(search.subcategory)\"></td>\n                  <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"sla\" [(ngModel)]=\"search.sla\" (ngModelChange)=\"searchSla(search.sla)\"></td>\n                  <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"slaCallCenter\" [(ngModel)]=\"search.slaCallCenter\" (ngModelChange)=\"searchSlaCallCenter(search.slaCallCenter)\"></td>\n                  <td> </td>\n                  <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"active\" [(ngModel)]=\"search.active\" (ngModelChange)=\"searchActive(search.active)\"></td>\n                  <td> </td>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let item of mf.data; let i = index\">\n                    <td style=\"text-align: center;\"> {{i + 1}} </td>\n                    <td style=\"text-align: center;\"> {{item.category}} </td>\n                    <td style=\"text-align: center;\"> {{item.service}} </td>\n                    <td style=\"text-align: center;\"> {{item.subcategory}} </td>\n                    <td style=\"text-align: center;\"> {{item.sla}} </td>\n                    <td style=\"text-align: center;\"> {{item.slaCallCenter}} </td>\n                    <td style=\"text-align: center;\"> {{item.descSla}} </td>\n                    <td style=\"text-align: center;\"> <a *ngIf=\"item.activo=='Si'\">{{item.activo}}</a> <a *ngIf=\"item.activo=='No'\" style=\"color: #d63245;\">{{item.activo}}</a>  </td>\n                    <td style=\"text-align: center;\"> \n                        <button type=\"button\" class=\"btn btn-link\" style=\"color: #ca243d;\" (click)=\"issueClick(item)\" data-toggle=\"modal\" data-target=\"#exampleModal\">Detalles</button>\n                    </td>\n                </tr>\n                <td></td>\n                <td> <a style=\"font-size: 120%;\" *ngIf=\"allIsues\">Total: {{allIsues.length}}</a> </td>\n              </tbody>\n              <tfoot>\n                <tr>\n                    <td colspan=\"12\">\n                        <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n                    </td>\n                </tr>\n                </tfoot>\n            </table>\n            </div>\n          </div>\n\n</div>\n</div>\n</div>\n</section>\n\n\n<!--------------  Modal  --------->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n          <h4 class=\"modal-title\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255);\">{{issue.category}}</h4>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 3%; color: rgb(255, 255, 255);\">\n            <span  aria-hidden=\"true\" >&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n\n\n<div class=\"col-lg-6\">\n\n\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\" >\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Departamento:</label>\n        <div class=\"col-md-8\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.departments\" [disabled]=\"true\" >\n                <option value=\"\">▼</option>\n                <option *ngFor=\"let department of departments; let i = index\" value={{department._id}}>{{department.name}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    \n    <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Servicio:</label>\n        <div class=\"col-md-8\">\n            <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.service\" placeholder=\"*\" required/>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    \n    <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Descripción del Servicio:</label>\n        <div class=\"col-md-8\">\n            <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.descService\"/>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    \n    <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Subcategoría:</label>\n        <div class=\"col-md-8\">\n            <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.subcategory\" placeholder=\"*\" required/>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    \n    <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Descripción de Subcategoría:</label>\n        <div class=\"col-md-8\">\n            <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.descSubcategory\"/>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    \n\n    <hr>\n    <div class=\"col-md-12\">\n        <label class=\"col-md-12\" style=\"text-align: left; font-size: 95%;\">Campos obligatorios: <a style=\"margin-left: 2%; font-size: 95%; color: red;\"> Nota: Estos campos serán obligatorios para los gerentes y no podrán subir timckets si no los completan</a></label>\n        <div class=\"clearfix\"></div>\n\n        <div class=\"col-md-6\">\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.foto\"> <label>Foto(s)</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.video\"> <label>Video(s)</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.numReport\"> <label>Número de reporte</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.numOrden\"> <label>Número de Orden</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.menuboards\"> <label>Menuboards</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.dt\"> <label>DT</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.kds\"> <label>KDS</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.email\"> <label>Correo electronico</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.pos\"> <label>POS</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.medidas\"> <label>Medidas</label>\n        </div>\n        </div>\n        <div class=\"col-md-6\">\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.producto\"> <label>Producto</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.lote\"> <label>Lote</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.cantidad\"> <label>Cantidad</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.numSerie\"> <label>Número de serie</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.marca\"> <label>Marca</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.nombreTimMember\"> <label>Nombre del Tim-Member</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.numNomina\"> <label>Número de Nómina</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.cantBolsasComprobantes\"> <label>Cant bolsas/comprobantes</label>\n        </div>\n    </div>\n\n    </div>\n    <div class=\"clearfix\"></div>\n    \n    </div>\n    \n    <div class=\"col-lg-6\">\n    \n        <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">SLA Analista:</label>\n            <div class=\"col-md-3\">\n                <input type=\"number\" placeholder=\"(Tiempo de respuesta)\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.sla\" required/>\n            </div>\n            <p class=\"col-md-3\" style=\"margin-top: 5px;\">\n                <input type=\"checkbox\" #name=\"ngModel\" [(ngModel)]=\"newIssue.hora\" (click)=\"boxHora(newIssue)\" [disabled]=\"true\"/>\n                <label>Horas</label>\n            </p>\n              <!-- <p style=\"margin-top: 5px;\">\n                <input type=\"checkbox\" #name=\"ngModel\" [(ngModel)]=\"newIssue.dia\" (click)=\"boxDia(newIssue)\"/>\n                <label>Días</label>\n              </p> -->\n        </div>\n            \n        <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">SLA Call center:</label>\n            <div class=\"col-md-3\">\n                <input  type=\"number\" placeholder=\"(Tiempo de respuesta)\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.slaCallCenter\" required/>\n            </div>\n            <p class=\"col-md-3\" style=\"margin-top: 5px;\">\n                <input type=\"checkbox\" #name=\"ngModel\" [(ngModel)]=\"newIssue.hora\" (click)=\"boxHora(newIssue)\" [disabled]=\"true\"/>\n                <label>Horas</label>\n            </p>\n              <!-- <p style=\"margin-top: 5px;\">\n                <input type=\"checkbox\" #name=\"ngModel\" [(ngModel)]=\"newIssue.dia\" (click)=\"boxDia(newIssue)\"/>\n                <label>Días</label>\n              </p> -->\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Descripción de SLA:</label>\n            <div class=\"col-md-8\">\n                <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.descSla\"/>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px; margin-left: -35px; text-align: center;\" >\n            <input type=\"checkbox\"  #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"newIssue.critico\"> <label>Critico ?</label>\n        </div>\n        <div class=\"clearfix\"></div>\n\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Activo</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.active\" >\n                    <option value=\"true\">Sí</option>\n                    <option value=\"false\">No</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        \n        <div class=\"col-md-12\" style=\"margin-top: 25px; text-align: center;\" >\n            <input type=\"checkbox\"  #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"zonesToAnalyst.general\" (click)=\"pressZonesToAnalystGeneral()\"> <label>Analista General</label>\n            <input type=\"checkbox\"  #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"zonesToAnalyst.porEstado\" (click)=\"pressZonesToAnalystPorEstado()\" style=\"margin-left: 4%;\"> <label>Analista por estado</label>\n        </div>\n\n        <div class=\"col-md-12\" style=\"margin-top: 20px;\" *ngIf=\"zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Analista:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"analyst.analyst1\" >\n                    <option value=\"\">▼</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Analista 2:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"analyst.analyst2\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && analyst.analyst2 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Analista 3:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"analyst.analyst3\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && analyst.analyst2 && analyst.analyst3 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Analista 4:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"analyst.analyst4\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados1\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado2:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados2\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado3:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados3\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && copiados.copiados3 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado4:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados4\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && copiados.copiados3 && copiados.copiados4 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado5:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados5\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && copiados.copiados3 && copiados.copiados4 && copiados.copiados5 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado6:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados6\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && copiados.copiados3 && copiados.copiados4 && copiados.copiados5 && copiados.copiados6 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado7:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados7\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && copiados.copiados3 && copiados.copiados4 && copiados.copiados5 && copiados.copiados6 && copiados.copiados7 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado8:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados8\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n\n        <div class=\"col-md-12\" style=\"margin-top: 25px;\" *ngIf=\" zonesToAnalyst.porEstado==true\">\n\n            <div class=\"col-md-4\">\n                <label>Nuevo León</label>\n                <div style=\"margin-left: -35%;\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLAnalyst.analyst1\" >\n                        <option value=\"\">▼</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLAnalyst.analyst2\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLAnalyst.analyst2\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLAnalyst.analyst3\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLAnalyst.analyst2 && zonesNLAnalyst.analyst3\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLAnalyst.analyst4\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n\n                <div style=\"margin-top: 25%; margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados1\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados2\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1  && zonesNLCopiados.copiados2\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados3\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1 && zonesNLCopiados.copiados2 && zonesNLCopiados.copiados3\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados4\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1 && zonesNLCopiados.copiados2 && zonesNLCopiados.copiados3 && zonesNLCopiados.copiados4\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados5\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1 && zonesNLCopiados.copiados2 && zonesNLCopiados.copiados3 && zonesNLCopiados.copiados4 && zonesNLCopiados.copiados5\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados6\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1 && zonesNLCopiados.copiados2 && zonesNLCopiados.copiados3 && zonesNLCopiados.copiados4 && zonesNLCopiados.copiados5 && zonesNLCopiados.copiados6\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados7\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1 && zonesNLCopiados.copiados2 && zonesNLCopiados.copiados3 && zonesNLCopiados.copiados4 && zonesNLCopiados.copiados5 && zonesNLCopiados.copiados6 && zonesNLCopiados.copiados7\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados8\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"col-md-4\">\n                <label style=\"margin-left: 30%;\">Coahuila</label>\n                <div style=\"margin-left: -14%;\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaAnalyst.analyst1\" >\n                        <option value=\"\">▼</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaAnalyst.analyst2\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaAnalyst.analyst2\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaAnalyst.analyst3\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaAnalyst.analyst2 && zonesCoahilaAnalyst.analyst3\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaAnalyst.analyst4\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n\n                <div style=\"margin-top: 25%; margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados1\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados2\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados3\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2 && zonesCoahilaCopiados.copiados3\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados4\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2 && zonesCoahilaCopiados.copiados3 && zonesCoahilaCopiados.copiados4\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados5\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2 && zonesCoahilaCopiados.copiados3 && zonesCoahilaCopiados.copiados4 && zonesCoahilaCopiados.copiados5\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados6\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2 && zonesCoahilaCopiados.copiados3 && zonesCoahilaCopiados.copiados4 && zonesCoahilaCopiados.copiados5 && zonesCoahilaCopiados.copiados6\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados7\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2 && zonesCoahilaCopiados.copiados3 && zonesCoahilaCopiados.copiados4 && zonesCoahilaCopiados.copiados5 && zonesCoahilaCopiados.copiados6 && zonesCoahilaCopiados.copiados7\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados8\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n            </div>  \n\n            <div class=\"col-md-4\">\n                <label style=\"margin-left: 40%;\">Querétaro</label>\n                <div style=\"margin-right: -30%; margin-left: 5%;\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroAnalyst.analyst1\" >\n                        <option value=\"\">▼</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroAnalyst.analyst2\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroAnalyst.analyst2\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroAnalyst.analyst3\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroAnalyst.analyst2 && zonesQueretaroAnalyst.analyst3\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroAnalyst.analyst4\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n\n                <div style=\"margin-top: 25%; margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados1\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados2\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados3\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2 && zonesQueretaroCopiados.copiados3\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados4\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2 && zonesQueretaroCopiados.copiados3 && zonesQueretaroCopiados.copiados4\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados5\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2 && zonesQueretaroCopiados.copiados3 && zonesQueretaroCopiados.copiados4 && zonesQueretaroCopiados.copiados5\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados6\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2 && zonesQueretaroCopiados.copiados3 && zonesQueretaroCopiados.copiados4 && zonesQueretaroCopiados.copiados5 && zonesQueretaroCopiados.copiados6\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados7\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2 && zonesQueretaroCopiados.copiados3 && zonesQueretaroCopiados.copiados4 && zonesQueretaroCopiados.copiados5 && zonesQueretaroCopiados.copiados6 && zonesQueretaroCopiados.copiados7\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados8\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n\n\n            </div>\n        </div>\n\n    \n    \n    </div>\n\n        </div>\n        <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" data-dismiss=\"modal\">Close</button>\n            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"uatdarCambio(newIssue)\">Guardar</button>\n        </div>\n      </div>\n      <div *ngIf=\"load==true\">\n        <div id=\"loader-wrapper\">\n          <div id=\"loader\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n  <style>\n       \n    #loader-wrapper {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      z-index: 1000;\n    }\n  \n    #loader {\n      display: block;\n      position: relative;\n      left: 50%;\n      top: 50%;\n      width: 150px;\n      height: 150px;\n      margin: -75px 0 0 -75px;\n      border-radius: 50%;\n      border: 3px solid transparent;\n      border-top-color:#f53737;\n      -webkit-animation: spin 2s linear infinite;\n      /* Chrome, Opera 15+, Safari 5+ */\n      animation: spin 2s linear infinite;\n      /* Chrome, Firefox 16+, IE 10+, Opera */\n    }\n  \n    #loader:before {\n      content: \"\";\n      position: absolute;\n      top: 5px;\n      left: 5px;\n      right: 5px;\n      bottom: 5px;\n      border-radius: 50%;\n      border: 3px solid transparent;\n      border-top-color: #eeeeee;\n      -webkit-animation: spin 3s linear infinite;\n      /* Chrome, Opera 15+, Safari 5+ */\n      animation: spin 3s linear infinite;\n      /* Chrome, Firefox 16+, IE 10+, Opera */\n    }\n  \n    #loader:after {\n      content: \"\";\n      position: absolute;\n      top: 15px;\n      left: 15px;\n      right: 15px;\n      bottom: 15px;\n      border-radius: 50%;\n      border: 3px solid transparent;\n      border-top-color: #bb2121;\n      -webkit-animation: spin 1.5s linear infinite;\n      /* Chrome, Opera 15+, Safari 5+ */\n      animation: spin 1.5s linear infinite;\n      /* Chrome, Firefox 16+, IE 10+, Opera */\n    }\n  \n    @-webkit-keyframes spin {\n      0% {\n        -webkit-transform: rotate(0deg);\n        /* Chrome, Opera 15+, Safari 3.1+ */\n        -ms-transform: rotate(0deg);\n        /* IE 9 */\n        transform: rotate(0deg);\n        /* Firefox 16+, IE 10+, Opera */\n      }\n  \n      100% {\n        -webkit-transform: rotate(360deg);\n        /* Chrome, Opera 15+, Safari 3.1+ */\n        -ms-transform: rotate(360deg);\n        /* IE 9 */\n        transform: rotate(360deg);\n        /* Firefox 16+, IE 10+, Opera */\n      }\n    }\n  \n    @keyframes spin {\n      0% {\n        -webkit-transform: rotate(0deg);\n        /* Chrome, Opera 15+, Safari 3.1+ */\n        -ms-transform: rotate(0deg);\n        /* IE 9 */\n        transform: rotate(0deg);\n        /* Firefox 16+, IE 10+, Opera */\n      }\n  \n      100% {\n        -webkit-transform: rotate(360deg);\n        /* Chrome, Opera 15+, Safari 3.1+ */\n        -ms-transform: rotate(360deg);\n        /* IE 9 */\n        transform: rotate(360deg);\n        /* Firefox 16+, IE 10+, Opera */\n      }\n    }\n  \n    </style>"

/***/ }),

/***/ 1056:
/***/ (function(module, exports) {

module.exports = "<h1> {{ title }} </h1>\n\n<section class=\"row\" id=\"main-content\">\n    <div class=\"col-xs-12\">\n\n<div class=\"panel panel-default\">\n<div class=\"panel-body\">\n\n<div class=\"col-lg-6\">\n\n\n<div class=\"col-md-12\" style=\"margin-top: 15px;\" >\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Departamento:</label>\n    <div class=\"col-md-8\">\n        <select class=\"form-control\" #name=\"ngModel\" name=\"select\" (change)=\"searchServices(newIssue.departments)\" [(ngModel)]=\"newIssue.departments\">\n            <option value=\"\">▼</option>\n            <option *ngFor=\"let department of departments; let i = index\" (change)=\"searchServices(department)\" value={{department._id}}>{{department.name}}</option>\n        </select>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div class=\"col-md-12\" style=\"margin-top: 15px;\">\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Servicio:</label>\n    <div class=\"col-md-8\" style=\"padding-left: 0%;\">\n        <div class=\"col-md-2\" style=\"width: 22%;\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"selectService\" (change)=\"selectServic(selectService)\" >\n                <option value=\"\">▼</option>\n                <option *ngFor=\"let services of service; let i = index\">{{services.service}}</option>\n            </select>\n        </div>\n        <div  class=\"col-md-9\" style=\"padding-left: 0%;\">\n            <input type=\"text\" class=\"form-control\" style=\"width: 111%;\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.service\" placeholder=\"*\" required/>\n        </div>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div class=\"col-md-12\" style=\"margin-top: 15px;\">\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Descripción del Servicio:</label>\n    <div class=\"col-md-8\">\n        <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.descService\"/>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div class=\"col-md-12\" style=\"margin-top: 15px;\">\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Subcategoría:</label>\n    <div class=\"col-md-8\">\n        <input type=\"text\" placeholder=\"*\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.subcategory\" required/>\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div class=\"col-md-12\" style=\"margin-top: 15px;\">\n    <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Descripción de Subcategoría:</label>\n    <div class=\"col-md-8\">\n        <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.descSubcategory\" />\n    </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<hr>\n<div class=\"col-md-12\">\n    <label class=\"col-md-12\" style=\"text-align: left; font-size: 95%;\">Campos obligatorios: <a style=\"margin-left: 2%; font-size: 95%; color: red;\"> Nota: Estos campos serán obligatorios para los gerentes y no podrán subir timckets si no los completan</a></label>\n    <div class=\"clearfix\"></div>\n\n    <div class=\"col-md-6\">\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.foto\"> <label>Foto(s)</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.video\"> <label>Video(s)</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.numReport\"> <label>Número de reporte</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.numOrden\"> <label>Número de Orden</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.menuboards\"> <label>Menuboards</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.dt\"> <label>DT</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.kds\"> <label>KDS</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.email\"> <label>Correo electronico</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.pos\"> <label>POS</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.medidas\"> <label>Medidas</label>\n    </div>\n    </div>\n    <div class=\"col-md-6\">\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.producto\"> <label>Producto</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.lote\"> <label>Lote</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.cantidad\"> <label>Cantidad</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.numSerie\"> <label>Número de serie</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.marca\"> <label>Marca</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.nombreTimMember\"> <label>Nombre del Tim-Member</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.numNomina\"> <label>Número de Nómina</label>\n    </div>\n    <div style=\"margin-top: 2%;\">\n        <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.cantBolsasComprobantes\"> <label>Cant bolsas/comprobantes</label>\n    </div>\n</div>\n\n</div>\n<div class=\"clearfix\"></div>\n\n<div style=\"text-align: center; margin-top: 20px; margin-bottom: 10px; text-align: start;\">\n    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addNew(newIssue)\">Guardar</button>\n</div>\n<div class=\"clearfix\"></div> \n\n</div>\n\n<div class=\"col-lg-6\">\n\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">SLA Analista:</label>\n        <div class=\"col-md-3\">\n            <input type=\"number\" placeholder=\"(Tiempo)*\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.sla\" required/>\n        </div>\n\n        <p class=\"col-md-3\" style=\"margin-top: 5px;\">\n            <input type=\"checkbox\" #name=\"ngModel\" [(ngModel)]=\"newIssue.hora\" (click)=\"boxHora(newIssue)\" [disabled]=\"true\"/>\n            <label>Horas</label>\n        </p>\n          <!-- <p style=\"margin-top: 5px;\">\n            <input type=\"checkbox\" #name=\"ngModel\" [(ngModel)]=\"newIssue.dia\" (click)=\"boxDia(newIssue)\"/>\n            <label>Días</label>\n          </p> -->\n\n\n    </div>\n    <div class=\"clearfix\"></div>\n\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">SLA CallCenter:</label>\n        <div class=\"col-md-3\">\n            <input type=\"number\" placeholder=\"(Tiempo)*\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.slaCallCenter\" required/>\n        </div>\n\n        <p class=\"col-md-3\" style=\"margin-top: 5px;\">\n            <input type=\"checkbox\" #name=\"ngModel\" [(ngModel)]=\"newIssue.hora\" (click)=\"boxHora(newIssue)\" [disabled]=\"true\"/>\n            <label>Horas</label>\n        </p>\n          <!-- <p style=\"margin-top: 5px;\">\n            <input type=\"checkbox\" #name=\"ngModel\" [(ngModel)]=\"newIssue.dia\" (click)=\"boxDia(newIssue)\"/>\n            <label>Días</label>\n          </p> -->\n\n    </div>\n    <div class=\"clearfix\"></div>\n\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Descripción de SLA:</label>\n        <div class=\"col-md-8\">\n            <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.descSla\" />\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n\n    <div class=\"col-md-12\" style=\"margin-top: 15px; margin-left: -35px; text-align: center;\" >\n        <input type=\"checkbox\"  #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"newIssue.critico\"> <label>Critico ?</label>\n    </div>\n    <div class=\"clearfix\"></div>\n\n    <div class=\"col-md-12\" style=\"margin-top: 25px; text-align: center;\" >\n        <input type=\"checkbox\"  #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"zonesToAnalyst.general\" (click)=\"pressZonesToAnalystGeneral()\"> <label>Analista General</label>\n        <input type=\"checkbox\"  #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"zonesToAnalyst.porEstado\" (click)=\"pressZonesToAnalystPorEstado()\" style=\"margin-left: 4%;\"> <label>Analista por estado</label>\n    </div>\n\n    <div class=\"col-md-12\" style=\"margin-top: 20px;\" *ngIf=\"zonesToAnalyst.general==true\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Analista:</label>\n        <div class=\"col-md-8\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"analyst.analyst1\" >\n                <option value=\"\">▼</option>\n                <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && zonesToAnalyst.general==true\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Analista2:</label>\n        <div class=\"col-md-8\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"analyst.analyst2\" >\n                <option value=\"\">▼ (Opcional)</option>\n                <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && analyst.analyst2 && zonesToAnalyst.general==true\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Analista3:</label>\n        <div class=\"col-md-8\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"analyst.analyst3\" >\n                <option value=\"\">▼ (Opcional)</option>\n                <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && analyst.analyst2 && analyst.analyst3 && zonesToAnalyst.general==true\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Analista4:</label>\n        <div class=\"col-md-8\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"analyst.analyst4\" >\n                <option value=\"\">▼ (Opcional)</option>\n                <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"zonesToAnalyst.general==true\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado:</label>\n        <div class=\"col-md-8\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados1\" >\n                <option value=\"\">▼ (Opcional)</option>\n                <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && zonesToAnalyst.general==true\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado2:</label>\n        <div class=\"col-md-8\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados2\" >\n                <option value=\"\">▼ (Opcional)</option>\n                <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && zonesToAnalyst.general==true\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado3:</label>\n        <div class=\"col-md-8\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados3\" >\n                <option value=\"\">▼ (Opcional)</option>\n                <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && copiados.copiados3 && zonesToAnalyst.general==true\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado4:</label>\n        <div class=\"col-md-8\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados4\" >\n                <option value=\"\">▼ (Opcional)</option>\n                <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && copiados.copiados3 && copiados.copiados4 && zonesToAnalyst.general==true\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado5:</label>\n        <div class=\"col-md-8\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados5\" >\n                <option value=\"\">▼ (Opcional)</option>\n                <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && copiados.copiados3 && copiados.copiados4 && copiados.copiados5 && zonesToAnalyst.general==true\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado6:</label>\n        <div class=\"col-md-8\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados6\" >\n                <option value=\"\">▼ (Opcional)</option>\n                <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && copiados.copiados3 && copiados.copiados4 && copiados.copiados5 && copiados.copiados6 && zonesToAnalyst.general==true\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado7:</label>\n        <div class=\"col-md-8\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados7\" >\n                <option value=\"\">▼ (Opcional)</option>\n                <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && copiados.copiados3 && copiados.copiados4 && copiados.copiados5 && copiados.copiados6 && copiados.copiados7 && zonesToAnalyst.general==true\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado8:</label>\n        <div class=\"col-md-8\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados8\" >\n                <option value=\"\">▼ (Opcional)</option>\n                <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n\n    <div class=\"col-md-12\" style=\"margin-top: 25px;\" *ngIf=\" zonesToAnalyst.porEstado==true\">\n\n        <div class=\"col-md-4\">\n            <label>Nuevo León</label>\n            <div style=\"margin-left: -35%;\">\n                <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLAnalyst.analyst1\" >\n                    <option value=\"\">▼</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1\">\n                <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLAnalyst.analyst2\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLAnalyst.analyst2\">\n                <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLAnalyst.analyst3\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLAnalyst.analyst2 && zonesNLAnalyst.analyst3\">\n                <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLAnalyst.analyst4\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n\n            <div style=\"margin-top: 25%; margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1\">\n                <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados1\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1\">\n                <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados2\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1  && zonesNLCopiados.copiados2\">\n                <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados3\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1 && zonesNLCopiados.copiados2 && zonesNLCopiados.copiados3\">\n                <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados4\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1 && zonesNLCopiados.copiados2 && zonesNLCopiados.copiados3 && zonesNLCopiados.copiados4\">\n                <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados5\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1 && zonesNLCopiados.copiados2 && zonesNLCopiados.copiados3 && zonesNLCopiados.copiados4 && zonesNLCopiados.copiados5\">\n                <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados6\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1 && zonesNLCopiados.copiados2 && zonesNLCopiados.copiados3 && zonesNLCopiados.copiados4 && zonesNLCopiados.copiados5 && zonesNLCopiados.copiados6\">\n                <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados7\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1 && zonesNLCopiados.copiados2 && zonesNLCopiados.copiados3 && zonesNLCopiados.copiados4 && zonesNLCopiados.copiados5 && zonesNLCopiados.copiados6 && zonesNLCopiados.copiados7\">\n                <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados8\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n\n        <div class=\"col-md-4\">\n            <label style=\"margin-left: 30%;\">Coahuila</label>\n            <div style=\"margin-left: -14%;\">\n                <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaAnalyst.analyst1\" >\n                    <option value=\"\">▼</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1\">\n                <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaAnalyst.analyst2\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaAnalyst.analyst2\">\n                <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaAnalyst.analyst3\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaAnalyst.analyst2 && zonesCoahilaAnalyst.analyst3\">\n                <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaAnalyst.analyst4\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n\n            <div style=\"margin-top: 25%; margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1\">\n                <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados1\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1\">\n                <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados2\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2\">\n                <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados3\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2 && zonesCoahilaCopiados.copiados3\">\n                <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados4\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2 && zonesCoahilaCopiados.copiados3 && zonesCoahilaCopiados.copiados4\">\n                <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados5\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2 && zonesCoahilaCopiados.copiados3 && zonesCoahilaCopiados.copiados4 && zonesCoahilaCopiados.copiados5\">\n                <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados6\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2 && zonesCoahilaCopiados.copiados3 && zonesCoahilaCopiados.copiados4 && zonesCoahilaCopiados.copiados5 && zonesCoahilaCopiados.copiados6\">\n                <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados7\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2 && zonesCoahilaCopiados.copiados3 && zonesCoahilaCopiados.copiados4 && zonesCoahilaCopiados.copiados5 && zonesCoahilaCopiados.copiados6 && zonesCoahilaCopiados.copiados7\">\n                <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados8\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>  \n\n        <div class=\"col-md-4\">\n            <label style=\"margin-left: 40%;\">Querétaro</label>\n            <div style=\"margin-right: -30%; margin-left: 5%;\">\n                <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroAnalyst.analyst1\" >\n                    <option value=\"\">▼</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1\">\n                <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroAnalyst.analyst2\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroAnalyst.analyst2\">\n                <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroAnalyst.analyst3\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroAnalyst.analyst2 && zonesQueretaroAnalyst.analyst3\">\n                <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroAnalyst.analyst4\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n\n            <div style=\"margin-top: 25%; margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1\">\n                <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados1\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1\">\n                <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados2\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2\">\n                <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados3\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2 && zonesQueretaroCopiados.copiados3\">\n                <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados4\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2 && zonesQueretaroCopiados.copiados3 && zonesQueretaroCopiados.copiados4\">\n                <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados5\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2 && zonesQueretaroCopiados.copiados3 && zonesQueretaroCopiados.copiados4 && zonesQueretaroCopiados.copiados5\">\n                <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados6\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2 && zonesQueretaroCopiados.copiados3 && zonesQueretaroCopiados.copiados4 && zonesQueretaroCopiados.copiados5 && zonesQueretaroCopiados.copiados6\">\n                <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados7\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n            <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2 && zonesQueretaroCopiados.copiados3 && zonesQueretaroCopiados.copiados4 && zonesQueretaroCopiados.copiados5 && zonesQueretaroCopiados.copiados6 && zonesQueretaroCopiados.copiados7\">\n                <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados8\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n\n        </div>\n    </div>\n\n\n\n</div>\n\n</div>\n</div>\n\n<div class=\"panel panel-default\">\n    <div class=\"panel-body\">\n    \n        <div class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n            <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"allIsues\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\" [mfRowsOnPage]=\"20\">\n              <thead>\n                <tr>\n                  <th><mfDefaultSorter>#</mfDefaultSorter></th>\n                  <th><mfDefaultSorter by=\"category\">Categoría</mfDefaultSorter></th>\n                  <th><mfDefaultSorter by=\"service\">Servicio</mfDefaultSorter></th>\n                  <th><mfDefaultSorter by=\"subcategory\">SubCategoria</mfDefaultSorter></th>\n                  <th><mfDefaultSorter by=\"sla\">SLA Analista</mfDefaultSorter></th>\n                  <th><mfDefaultSorter by=\"slaCallCenter\">SLA CallCenter</mfDefaultSorter></th>\n                  <th><mfDefaultSorter by=\"descSla\">Desc. SLA</mfDefaultSorter></th>\n                  <th><mfDefaultSorter by=\"activo\">Activo</mfDefaultSorter></th>\n                  <th><mfDefaultSorter>Detalles</mfDefaultSorter></th>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"category\" [(ngModel)]=\"search.category\" (ngModelChange)=\"searchCategory(search.category)\"></td>\n                  <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"service\" [(ngModel)]=\"search.service\" (ngModelChange)=\"searchService(search.service)\"></td>\n                  <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"subcategory\" [(ngModel)]=\"search.subcategory\" (ngModelChange)=\"searchSubcategory(search.subcategory)\"></td>\n                  <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"sla\" [(ngModel)]=\"search.sla\" (ngModelChange)=\"searchSla(search.sla)\"></td>\n                  <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"slaCallCenter\" [(ngModel)]=\"search.slaCallCenter\" (ngModelChange)=\"searchSlaCallCenter(search.slaCallCenter)\"></td>\n                  <td> </td>\n                  <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"active\" [(ngModel)]=\"search.active\" (ngModelChange)=\"searchActive(search.active)\"></td>\n                  <td> </td>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let item of mf.data; let i = index\">\n                    <td style=\"text-align: center;\"> {{i + 1}} </td>\n                    <td style=\"text-align: center;\"> {{item.category}} </td>\n                    <td style=\"text-align: center;\"> {{item.service}} </td>\n                    <td style=\"text-align: center;\"> {{item.subcategory}} </td>\n                    <td style=\"text-align: center;\"> {{item.sla}} </td>\n                    <td style=\"text-align: center;\"> {{item.slaCallCenter}} </td>\n                    <td style=\"text-align: center;\"> {{item.descSla}} </td>\n                    <td style=\"text-align: center;\"> <a *ngIf=\"item.activo=='Si'\">{{item.activo}}</a> <a *ngIf=\"item.activo=='No'\" style=\"color: #d63245;\">{{item.activo}}</a>  </td>\n                    <td style=\"text-align: center;\"> \n                        <button type=\"button\" class=\"btn btn-link\" style=\"color: #ca243d;\" (click)=\"issueClick(item)\" data-toggle=\"modal\" data-target=\"#exampleModal\">Detalles</button>\n                    </td>\n                </tr>\n                <td></td>\n                <td> <a style=\"font-size: 120%;\" *ngIf=\"allIsues\">Total: {{allIsues.length}}</a> </td>\n              </tbody>\n              <tfoot>\n                <tr>\n                    <td colspan=\"12\">\n                        <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n                    </td>\n                </tr>\n                </tfoot>\n            </table>\n            </div>\n\n    \n    </div>\n    </div>\n\n\n</div>\n</section>\n\n<div *ngIf=\"load==true\">\n    <div id=\"loader-wrapper\">\n      <div id=\"loader\"></div>\n    </div>\n  </div>\n\n\n\n<!--------------  Modal  --------->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n          <h4 class=\"modal-title\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255);\">{{issue.category}}</h4>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 3%; color: rgb(255, 255, 255);\">\n            <span  aria-hidden=\"true\" >&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n\n\n<div class=\"col-lg-6\">\n\n\n    <div class=\"col-md-12\" style=\"margin-top: 15px;\" >\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Departamento:</label>\n        <div class=\"col-md-8\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.departments\">\n                <option value=\"\">▼</option>\n                <option *ngFor=\"let department of departments; let i = index\" value={{department._id}}>{{department.name}}</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    \n    <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Servicio:</label>\n        <div class=\"col-md-8\">\n            <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.service\" placeholder=\"*\" required/>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    \n    <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Descripción del Servicio:</label>\n        <div class=\"col-md-8\">\n            <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.descService\"/>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    \n    <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Subcategoría:</label>\n        <div class=\"col-md-8\">\n            <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.subcategory\" placeholder=\"*\" required/>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n    \n    <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n        <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Descripción de Subcategoría:</label>\n        <div class=\"col-md-8\">\n            <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.descSubcategory\"/>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n\n    <hr>\n    <div class=\"col-md-12\">\n        <label class=\"col-md-12\" style=\"text-align: left; font-size: 95%;\">Campos obligatorios: <a style=\"margin-left: 2%; font-size: 95%; color: red;\"> Nota: Estos campos serán obligatorios para los gerentes y no podrán subir timckets si no los completan</a></label>\n        <div class=\"clearfix\"></div>\n    \n        <div class=\"col-md-6\">\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.foto\"> <label>Foto(s)</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.video\"> <label>Video(s)</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.numReport\"> <label>Número de reporte</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.numOrden\"> <label>Número de Orden</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.menuboards\"> <label>Menuboards</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.dt\"> <label>DT</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.kds\"> <label>KDS</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.email\"> <label>Correo electronico</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.pos\"> <label>POS</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.medidas\"> <label>Medidas</label>\n        </div>\n        </div>\n        <div class=\"col-md-6\">\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.producto\"> <label>Producto</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.lote\"> <label>Lote</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.cantidad\"> <label>Cantidad</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.numSerie\"> <label>Número de serie</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.marca\"> <label>Marca</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.nombreTimMember\"> <label>Nombre del Tim-Member</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.numNomina\"> <label>Número de Nómina</label>\n        </div>\n        <div style=\"margin-top: 2%;\">\n            <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"campo.cantBolsasComprobantes\"> <label>Cant bolsas/comprobantes</label>\n        </div>\n    </div>\n    \n    </div>\n<div class=\"clearfix\"></div>\n    \n    </div>\n    \n    <div class=\"col-lg-6\">\n    \n        <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">SLA Analista:</label>\n            <div class=\"col-md-3\">\n                <input type=\"number\" placeholder=\"(Tiempo de respuesta)\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.sla\" required/>\n            </div>\n            <p class=\"col-md-3\" style=\"margin-top: 5px;\">\n                <input type=\"checkbox\" #name=\"ngModel\" [(ngModel)]=\"newIssue.hora\" (click)=\"boxHora(newIssue)\" [disabled]=\"true\"/>\n                <label>Horas</label>\n            </p>\n              <!-- <p style=\"margin-top: 5px;\">\n                <input type=\"checkbox\" #name=\"ngModel\" [(ngModel)]=\"newIssue.dia\" (click)=\"boxDia(newIssue)\"/>\n                <label>Días</label>\n              </p> -->\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">SLA CallCenter:</label>\n            <div class=\"col-md-3\">\n                <input type=\"number\" placeholder=\"(Tiempo de respuesta)\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.slaCallCenter\" required/>\n            </div>\n            <p class=\"col-md-3\" style=\"margin-top: 5px;\">\n                <input type=\"checkbox\" #name=\"ngModel\" [(ngModel)]=\"newIssue.hora\" (click)=\"boxHora(newIssue)\" [disabled]=\"true\"/>\n                <label>Horas</label>\n            </p>\n              <!-- <p style=\"margin-top: 5px;\">\n                <input type=\"checkbox\" #name=\"ngModel\" [(ngModel)]=\"newIssue.dia\" (click)=\"boxDia(newIssue)\"/>\n                <label>Días</label>\n              </p> -->\n        </div>\n        <div class=\"clearfix\"></div>\n\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Descripción de SLA:</label>\n            <div class=\"col-md-8\">\n                <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.descSla\"/>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n\n        <div class=\"col-md-12\" style=\"margin-top: 15px; margin-left: -35px; text-align: center;\" >\n            <input type=\"checkbox\"  #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"newIssue.critico\"> <label>Critico ?</label>\n        </div>\n        <div class=\"clearfix\"></div>\n\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Activo</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"newIssue.active\" >\n                    <option value=\"true\">Sí</option>\n                    <option value=\"false\">No</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n\n        <div class=\"col-md-12\" style=\"margin-top: 25px; text-align: center;\" >\n            <input type=\"checkbox\"  #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"zonesToAnalyst.general\" (click)=\"pressZonesToAnalystGeneral()\"> <label>Analista General</label>\n            <input type=\"checkbox\"  #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"zonesToAnalyst.porEstado\" (click)=\"pressZonesToAnalystPorEstado()\" style=\"margin-left: 4%;\"> <label>Analista por estado</label>\n        </div>\n\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Analista:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"analyst.analyst1\" >\n                    <option value=\"\">▼</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Analista2:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"analyst.analyst2\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && analyst.analyst2 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Analista3:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"analyst.analyst3\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && analyst.analyst2 && analyst.analyst3 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Analista4:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"analyst.analyst4\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados1\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado2:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados2\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado3:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados3\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && copiados.copiados3 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado4:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados4\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && copiados.copiados3 && copiados.copiados4 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado5:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados5\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && copiados.copiados3 && copiados.copiados4 && copiados.copiados5 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado6:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados6\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && copiados.copiados3 && copiados.copiados4 && copiados.copiados5 && copiados.copiados6 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado7:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados7\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\" *ngIf=\"analyst.analyst1 && copiados.copiados1 && copiados.copiados2 && copiados.copiados3 && copiados.copiados4 && copiados.copiados5 && copiados.copiados6 && copiados.copiados7 && zonesToAnalyst.general==true\">\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Copiado8:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"copiados.copiados8\" >\n                    <option value=\"\">▼ (Opcional)</option>\n                    <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n\n\n        <div class=\"col-md-12\" style=\"margin-top: 25px;\" *ngIf=\" zonesToAnalyst.porEstado==true\">\n\n            <div class=\"col-md-4\">\n                <label>Nuevo León</label>\n                <div style=\"margin-left: -35%;\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLAnalyst.analyst1\" >\n                        <option value=\"\">▼</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLAnalyst.analyst2\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLAnalyst.analyst2\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLAnalyst.analyst3\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLAnalyst.analyst2 && zonesNLAnalyst.analyst3\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLAnalyst.analyst4\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n\n                <div style=\"margin-top: 25%; margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados1\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados2\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1  && zonesNLCopiados.copiados2\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados3\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1 && zonesNLCopiados.copiados2 && zonesNLCopiados.copiados3\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados4\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1 && zonesNLCopiados.copiados2 && zonesNLCopiados.copiados3 && zonesNLCopiados.copiados4\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados5\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1 && zonesNLCopiados.copiados2 && zonesNLCopiados.copiados3 && zonesNLCopiados.copiados4 && zonesNLCopiados.copiados5\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados6\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1 && zonesNLCopiados.copiados2 && zonesNLCopiados.copiados3 && zonesNLCopiados.copiados4 && zonesNLCopiados.copiados5 && zonesNLCopiados.copiados6\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados7\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -35%;\" *ngIf=\"zonesNLAnalyst.analyst1 && zonesNLCopiados.copiados1 && zonesNLCopiados.copiados2 && zonesNLCopiados.copiados3 && zonesNLCopiados.copiados4 && zonesNLCopiados.copiados5 && zonesNLCopiados.copiados6 && zonesNLCopiados.copiados7\">\n                    <select style=\"font-size: 75%; width: 101%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesNLCopiados.copiados8\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"col-md-4\">\n                <label style=\"margin-left: 30%;\">Coahuila</label>\n                <div style=\"margin-left: -14%;\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaAnalyst.analyst1\" >\n                        <option value=\"\">▼</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaAnalyst.analyst2\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaAnalyst.analyst2\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaAnalyst.analyst3\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaAnalyst.analyst2 && zonesCoahilaAnalyst.analyst3\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaAnalyst.analyst4\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n\n                <div style=\"margin-top: 25%; margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados1\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados2\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados3\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2 && zonesCoahilaCopiados.copiados3\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados4\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2 && zonesCoahilaCopiados.copiados3 && zonesCoahilaCopiados.copiados4\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados5\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2 && zonesCoahilaCopiados.copiados3 && zonesCoahilaCopiados.copiados4 && zonesCoahilaCopiados.copiados5\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados6\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2 && zonesCoahilaCopiados.copiados3 && zonesCoahilaCopiados.copiados4 && zonesCoahilaCopiados.copiados5 && zonesCoahilaCopiados.copiados6\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados7\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-left: -14%;\" *ngIf=\"zonesCoahilaAnalyst.analyst1 && zonesCoahilaCopiados.copiados1 && zonesCoahilaCopiados.copiados2 && zonesCoahilaCopiados.copiados3 && zonesCoahilaCopiados.copiados4 && zonesCoahilaCopiados.copiados5 && zonesCoahilaCopiados.copiados6 && zonesCoahilaCopiados.copiados7\">\n                    <select style=\"font-size: 75%; width: 120%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesCoahilaCopiados.copiados8\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n            </div>  \n\n            <div class=\"col-md-4\">\n                <label style=\"margin-left: 40%;\">Querétaro</label>\n                <div style=\"margin-right: -30%; margin-left: 5%;\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroAnalyst.analyst1\" >\n                        <option value=\"\">▼</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroAnalyst.analyst2\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroAnalyst.analyst2\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroAnalyst.analyst3\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroAnalyst.analyst2 && zonesQueretaroAnalyst.analyst3\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroAnalyst.analyst4\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n\n                <div style=\"margin-top: 25%; margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados1\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados2\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados3\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2 && zonesQueretaroCopiados.copiados3\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados4\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2 && zonesQueretaroCopiados.copiados3 && zonesQueretaroCopiados.copiados4\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados5\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2 && zonesQueretaroCopiados.copiados3 && zonesQueretaroCopiados.copiados4 && zonesQueretaroCopiados.copiados5\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados6\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2 && zonesQueretaroCopiados.copiados3 && zonesQueretaroCopiados.copiados4 && zonesQueretaroCopiados.copiados5 && zonesQueretaroCopiados.copiados6\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados7\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n                <div style=\"margin-right: -30%; margin-left: 5%;\" *ngIf=\"zonesQueretaroAnalyst.analyst1 && zonesQueretaroCopiados.copiados1 && zonesQueretaroCopiados.copiados2 && zonesQueretaroCopiados.copiados3 && zonesQueretaroCopiados.copiados4 && zonesQueretaroCopiados.copiados5 && zonesQueretaroCopiados.copiados6 && zonesQueretaroCopiados.copiados7\">\n                    <select style=\"font-size: 75%; width: 105%;\" class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"zonesQueretaroCopiados.copiados8\" >\n                        <option value=\"\">▼ (Opcional)</option>\n                        <option *ngFor=\"let department of usersAdmins; let i = index\" value={{department._id}}>{{department.department.name}} - {{department.fname}} {{department.lname}}</option>\n                    </select>\n                </div>\n\n\n            </div>\n        </div>\n    \n    \n    </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" data-dismiss=\"modal\">Close</button>\n          <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"uatdarCambio(newIssue)\">Guardar</button>\n        </div>\n      </div>\n      <div *ngIf=\"load==true\">\n        <div id=\"loader-wrapper\">\n          <div id=\"loader\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <style>\n       \n  #loader-wrapper {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 1000;\n  }\n\n  #loader {\n    display: block;\n    position: relative;\n    left: 50%;\n    top: 50%;\n    width: 150px;\n    height: 150px;\n    margin: -75px 0 0 -75px;\n    border-radius: 50%;\n    border: 3px solid transparent;\n    border-top-color:#f53737;\n    -webkit-animation: spin 2s linear infinite;\n    /* Chrome, Opera 15+, Safari 5+ */\n    animation: spin 2s linear infinite;\n    /* Chrome, Firefox 16+, IE 10+, Opera */\n  }\n\n  #loader:before {\n    content: \"\";\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    right: 5px;\n    bottom: 5px;\n    border-radius: 50%;\n    border: 3px solid transparent;\n    border-top-color: #eeeeee;\n    -webkit-animation: spin 3s linear infinite;\n    /* Chrome, Opera 15+, Safari 5+ */\n    animation: spin 3s linear infinite;\n    /* Chrome, Firefox 16+, IE 10+, Opera */\n  }\n\n  #loader:after {\n    content: \"\";\n    position: absolute;\n    top: 15px;\n    left: 15px;\n    right: 15px;\n    bottom: 15px;\n    border-radius: 50%;\n    border: 3px solid transparent;\n    border-top-color: #bb2121;\n    -webkit-animation: spin 1.5s linear infinite;\n    /* Chrome, Opera 15+, Safari 5+ */\n    animation: spin 1.5s linear infinite;\n    /* Chrome, Firefox 16+, IE 10+, Opera */\n  }\n\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(0deg);\n      /* IE 9 */\n      transform: rotate(0deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n\n    100% {\n      -webkit-transform: rotate(360deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(360deg);\n      /* IE 9 */\n      transform: rotate(360deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(0deg);\n      /* IE 9 */\n      transform: rotate(0deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n\n    100% {\n      -webkit-transform: rotate(360deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(360deg);\n      /* IE 9 */\n      transform: rotate(360deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n  }\n\n  </style>"

/***/ }),

/***/ 1057:
/***/ (function(module, exports) {

module.exports = "\n<h1>{{title}}</h1>\n\n<div class=\"card\" style=\"width: 100%; height: 100%;\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n\n\n            <div class=\"portlet-body form\" style=\"margin-top: 2%; font-size: 100%;\">\n                <div class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n                <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"getLocals\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\" [mfRowsOnPage]=\"20\">\n                  <thead>\n                    <tr>\n                      <th><mfDefaultSorter>#</mfDefaultSorter></th>\n                      <th><mfDefaultSorter by=\"name\">Sucursal</mfDefaultSorter></th>\n                      <th><mfDefaultSorter by=\"area.name\">Área</mfDefaultSorter></th>\n                      <th><mfDefaultSorter by=\"email\">Email</mfDefaultSorter></th>\n                      <th><mfDefaultSorter by=\"phone\">Teléfono</mfDefaultSorter></th>\n                      <th><mfDefaultSorter by=\"street\">Calle</mfDefaultSorter></th>\n                      <th><mfDefaultSorter by=\"numExt\">Num Exterior</mfDefaultSorter></th>\n                      <th><mfDefaultSorter by=\"numInt\">Num Interior</mfDefaultSorter></th>\n                      <th><mfDefaultSorter by=\"suburb\">Colonia</mfDefaultSorter></th>\n                      <th><mfDefaultSorter by=\"municipality\">Municipio</mfDefaultSorter></th>\n                      <th><mfDefaultSorter by=\"state\">Estado</mfDefaultSorter></th>\n                      <th><mfDefaultSorter by=\"postalCode\">CP</mfDefaultSorter></th>\n                      <th><mfDefaultSorter by=\"userLog\">Usuario</mfDefaultSorter></th>\n                      <th><mfDefaultSorter by=\"xenialId\">Xenial Id</mfDefaultSorter></th>\n                      <th><mfDefaultSorter by=\"xenialId\">RBI #</mfDefaultSorter></th>\n                      <th><mfDefaultSorter>Detalles</mfDefaultSorter></th>\n                    </tr>\n                    <tr>\n                      <td></td>\n                      <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"name\" [(ngModel)]=\"search.name\" (ngModelChange)=\"searchname(search.name)\"></td>\n                      <td> </td>\n                      <td> </td>\n                      <td> </td>\n                      <td> </td>\n                      <td> </td>\n                      <td> </td>\n                      <td> </td>\n                      <td> </td>\n                      <td> </td>\n                      <td> </td>\n                      <td> </td>\n                      <td> </td>\n                      <td> </td>\n                      <td> </td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr *ngFor=\"let item of mf.data; let i = index\">\n                        <td style=\"text-align: center;\"> {{i + 1}} </td>\n                        <td style=\"text-align: center;\"> {{item.name}} </td>\n                        <td style=\"text-align: center;\"> <a *ngIf=\"item.area && item.area.name\"> {{item.area.name}} </a> </td>\n                        <td style=\"text-align: center;\"> {{item.email}} </td>\n                        <td style=\"text-align: center;\"> {{item.phone}} </td>\n                        <td style=\"text-align: center;\"> {{item.street}} </td>\n                        <td style=\"text-align: center;\"> {{item.numExt}} </td>\n                        <td style=\"text-align: center;\"> {{item.numInt}} </td>\n                        <td style=\"text-align: center;\"> {{item.suburb}} </td>\n                        <td style=\"text-align: center;\"> {{item.municipality}} </td>\n                        <td style=\"text-align: center;\"> {{item.state}} </td>\n                        <td style=\"text-align: center;\"> {{item.postalCode}} </td>\n                        <td style=\"text-align: center;\"> {{item.userLog}} </td>\n                        <td style=\"text-align: center;\"> {{item.xenialId}} </td>\n                        <td style=\"text-align: center;\"> {{item.rbiNumber}} </td>\n                        <td style=\"text-align: center;\"> <button *ngIf=\"identity.type=='superAdmin'\" type=\"button\" class=\"btn btn-link\" (click)=\"local = item\" style=\"color: #ca243d;\"  data-toggle=\"modal\" data-target=\"#exampleModal\">Detalles</button> </td>\n                    </tr>\n                    <td></td>\n                    <td> <a style=\"font-size: 120%;\" *ngIf=\"getLocals\">Total: {{getLocals.length}}</a> </td>\n                  </tbody>\n                  <tfoot>\n                    <tr>\n                        <td colspan=\"6\">\n                            <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n                        </td>\n                    </tr>\n                    </tfoot>\n                </table>\n                </div>\n              </div>\n\n\n        </div>\n    </div>\n</div>\n\n\n<div *ngIf=\"local\" class=\"modal fade\" id=\"exampleModal\" role=\"dialog\" aria-labelledby=\"exampleModal\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n          <h4 class=\"modal-title\" id=\"exampleModal\" style=\"color: rgb(255, 255, 255);\">{{local.name}}</h4>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 3%; color: rgb(255, 255, 255);\">\n            <span  aria-hidden=\"true\" >&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Sucursa: *</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"name\" [(ngModel)]=\"local.name\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\" >\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Area: *</label>\n                <div class=\"col-md-8\" *ngIf=\"local.area && local.area._id\">\n                    <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"local.area._id\">\n                        <option value=\"\">▼</option>\n                        <option *ngFor=\"let area of areas; let i = index\" value={{area._id}}>{{area.name}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Email: *</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"email\" [(ngModel)]=\"local.email\" [disabled]=\"true\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Telefono:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"number\" class=\"form-control\" #name=\"ngModel\" name=\"phone\" [(ngModel)]=\"local.phone\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Calle: *</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"street\" [(ngModel)]=\"local.street\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Num Ext: *</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"numExt\" [(ngModel)]=\"local.numExt\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Num Int:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"numInt\" [(ngModel)]=\"local.numInt\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Colonia: *</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"suburb\" [(ngModel)]=\"local.suburb\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Municipio: *</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"municipality\" [(ngModel)]=\"local.municipality\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\" >\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Estado: *</label>\n                <div class=\"col-md-8\">\n                    <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"local.state\">\n                        <option value=\"\">▼</option>\n                        <option value=\"NuevoLeón\">NuevoLeón</option>\n                        <option value=\"Coahuila\">Coahuila</option>\n                        <option value=\"Querétaro\">Querétaro</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">CP: *</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"postalCode\" [(ngModel)]=\"local.postalCode\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Usuario: *</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"userLog\" [(ngModel)]=\"local.userLog\" [disabled]=\"true\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Xenial Id:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"xenialId\" [(ngModel)]=\"local.xenialId\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">RBI #:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" class=\"form-control\" #name=\"ngModel\" name=\"xenialId\" [(ngModel)]=\"local.rbiNumber\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n        </div>\n\n        <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" data-dismiss=\"modal\">Close</button>\n            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"cambioLocal(local)\">Guardar</button>\n        </div>\n    </div>\n    </div>\n</div>"

/***/ }),

/***/ 1058:
/***/ (function(module, exports) {

module.exports = "<div class=\"col-lg-12\" >\n    <h1 class=\"col-md-10\">{{title}}</h1>\n\n    <div class=\"clearfix\"></div> \n\n\n    <div class=\"card\" style=\"width: 100%; height: 100%;\">\n      <div class=\"card-body\">\n\n        <div class=\"portlet-body form\" style=\"margin-top: 2%; font-size: 100%;\">\n            <div class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n              <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"dataEncuesta\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy1\" [mfRowsOnPage]=\"20\">\n                <thead>\n                  <tr>\n                    <th style=\"text-align: center;\"><mfDefaultSorter> # </mfDefaultSorter></th>\n                    <th style=\"text-align: center;\"><mfDefaultSorter by=\"codeRequest\"> Nombre Común</mfDefaultSorter></th>\n                    <th style=\"text-align: center;\"><mfDefaultSorter by=\"dateOfReport\"> Fecha de inicio </mfDefaultSorter></th>\n                    <th style=\"text-align: center;\"> Hora</th>\n                    <th style=\"text-align: center;\"><mfDefaultSorter by=\"subCategory\"> Subcategoría </mfDefaultSorter></th>\n                    <th style=\"text-align: center;\"><mfDefaultSorter by=\"service\"> Servicio  </mfDefaultSorter></th>\n                    <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.category\"> Área </mfDefaultSorter></th>\n                    <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.sla\"> SLA </mfDefaultSorter></th>\n                    <th style=\"text-align: center;\"><mfDefaultSorter by=\"restantes\"> Restante </mfDefaultSorter></th>\n                    <th style=\"text-align: center;\"><mfDefaultSorter by=\"status\"> Estatus  </mfDefaultSorter></th>\n                    <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.name\"> Reportado por </mfDefaultSorter></th>\n                    <th style=\"text-align: center;\"><mfDefaultSorter by=\"analyst.fnames\"> Analista </mfDefaultSorter></th>\n                    <th style=\"text-align: center;\"><mfDefaultSorter by=\"pasado\"> Vencido </mfDefaultSorter></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td></td>\n                    <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio1(search.folio)\"></td>\n                    <td> </td>\n                    <td> </td>\n                    <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria1(search.subcategoria)\"></td>\n                    <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio1(search.servicio)\"></td>\n                    <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea1(search.area)\"></td>\n                    <td> </td>\n                    <td> </td>\n                    <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatus\" (ngModelChange)=\"searchEstatus1(search.estatus)\"></td>\n                    <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy1(search.reportadoPor)\"></td>\n                    <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista1(search.analista)\"></td>\n                    <td> <input type=\"text\" style=\"width: 100%;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido1(search.vencido)\"></td>\n                  </tr>\n                  <tr class=\"odd gradeX\" *ngFor=\"let item of mf.data; let i = index\">\n                    <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{i + 1}} </td>\n                    <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{i + 1}} </td>\n                    <td style=\"text-align: center; padding-top: 0.2%; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> \n                      <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\">\n                      <!-- <a href=\"http://localhost:4200/requestDetail/{{item.codeRequest}}\"> -->\n                        <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n                      </a>\n                    </td>\n                    <td style=\"text-align: center; padding-top: 0.2%;\" *ngIf=\"!item.color || identity.type=='local'\">\n                      <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\">\n                      <!-- <a href=\"http://localhost:4200/requestDetail/{{item.codeRequest}}\"> -->\n                          <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n                      </a>\n                    </td>\n                    <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n                    <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n                    <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n                    <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n                    <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.subCategory}} </td>\n                    <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.subCategory}} </td>\n                    <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.service}} </td>\n                    <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.service}} </td>\n                    <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.category}} </td>\n                    <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.category}} </td>\n                    <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.sla}} h</td>\n                    <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.sla}} h</td>\n                    <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.status!='Solucionado'\">{{item.restantes}}</a> <a *ngIf=\"item.status=='Solucionado'\"></a></td>\n                    <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.status!='Solucionado'\">{{item.restantes}}</a> <a *ngIf=\"item.status=='Solucionado'\"></a></td>\n                    <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.status\" >{{item.status}} </a> <a *ngIf=\"!item.status\" >{{item.statusCallCenter}}</a> <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n                    <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.status\" >{{item.status}} </a> <a *ngIf=\"!item.status\" >{{item.statusCallCenter}}</a> <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n                    <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n                    <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n                    <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n                    <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n                    <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </td>\n                    <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </td>\n                  </tr>\n                  <td></td>\n                  <td> <a style=\"font-size: 120%;\" *ngIf=\"inProcess\">Total: {{inProcess.length}}</a> </td>\n                </tbody>\n                <tfoot>\n                  <tr>\n                      <td colspan=\"12\">\n                          <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n                      </td>\n                  </tr>\n                  </tfoot>\n              </table>\n    </div>\n\n      </div>\n    </div>\n\n</div>\n\n"

/***/ }),

/***/ 1059:
/***/ (function(module, exports) {

module.exports = "    <h1>{{title}}</h1>\n\n\n    <section class=\"row\" id=\"main-content\">\n        <div class=\"col-xs-12\">\n    \n    <div class=\"panel panel-default\">\n    <div class=\"panel-body\">\n    \n      \n        <div class=\"portlet-body form\" style=\"margin-top: 2%; font-size: 110%;\">\n            <div class=\"row\">\n            <div class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n            <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" datatable=\"ng\">\n              <thead>\n                <tr>\n                  <th style=\"text-align: center; width: 12.5%;\"><a style=\"color: rgb(61, 61, 61);\"> Jerarquías</a></th>\n                  <th style=\"text-align: center;\"><a style=\"color: rgb(61, 61, 61);\"> Totales </a></th>\n                  <th style=\"text-align: center;\"><a style=\"color: rgb(61, 61, 61);\"> Escalados  </a></th>\n                  <th style=\"text-align: center;\"><a style=\"color: rgb(61, 61, 61);\"> Cerrados  </a></th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"odd gradeX\" style=\"background-color: rgb(196, 196, 196);\">\n                  <td style=\"text-align: center;\"> Direccion</td>\n                  <td style=\"text-align: center;\"> 2 </td>\n                  <td style=\"text-align: center;\"> 0 </td>\n                  <td style=\"text-align: center;\"> 2 </td>\n                </tr>\n                <tr class=\"odd gradeX\" style=\"background-color: rgb(196, 196, 196);\">\n                    <td style=\"text-align: center;\"> Sr Gerencia</td>\n                    <td style=\"text-align: center;\"> 12 </td>\n                    <td style=\"text-align: center;\"> 2 </td>\n                    <td style=\"text-align: center;\"> 10 </td>\n                  </tr>\n                <tr class=\"odd gradeX\" style=\"background-color: rgb(196, 196, 196);\">\n                    <td style=\"text-align: center;\"> Gerencia </td>\n                    <td style=\"text-align: center;\"> 22 </td>\n                    <td style=\"text-align: center;\"> 10 </td>\n                    <td style=\"text-align: center;\"> 12 </td>\n                  </tr>\n                  <tr class=\"odd gradeX\" style=\"background-color: rgb(196, 196, 196);\">\n                    <td style=\"text-align: center;\"> Sr Analista </td>\n                    <td style=\"text-align: center;\"> 35 </td>\n                    <td style=\"text-align: center;\"> 5 </td>\n                    <td style=\"text-align: center;\"> 30 </td>\n                  </tr>\n                  <tr class=\"odd gradeX\" style=\"background-color: rgb(196, 196, 196);\">\n                    <td style=\"text-align: center;\"> Analista </td>\n                    <td style=\"text-align: center;\"> 57 </td>\n                    <td style=\"text-align: center;\"> 27 </td>\n                    <td style=\"text-align: center;\"> 30 </td>\n                  </tr>\n                  <tr class=\"odd gradeX\" style=\"background-color: rgb(196, 196, 196);\">\n                    <td style=\"text-align: center;\"> Jr Analista </td>\n                    <td style=\"text-align: center;\"> 63 </td>\n                    <td style=\"text-align: center;\"> 36 </td>\n                    <td style=\"text-align: center;\"> 27 </td>\n                  </tr>\n              </tbody>\n            </table>\n            </div>\n          </div>\n          </div>\n\n    \n    \n    </div>\n    </div>\n    </div>\n    </section>\n    \n\n\n\n\n\n<style>\n.card:hover {\n  cursor: pointer;\n  background: #e9e8e8;\n  color: rgba(10, 10, 10, 0.979);\n}\n\n.glyphicon{\n    color: rgb(199, 44, 44);\n}\n\n</style>"

/***/ }),

/***/ 1060:
/***/ (function(module, exports) {

module.exports = "<div class=\"col-md-7\">\n  <h1 *ngIf=\"identity.type=='local'\" style=\"margin-left: 15px; color: #3F2021; font-family: 'sofia-pro'; font-size: 240%; font-weight: 510\">{{title}}</h1>\n  <h1 *ngIf=\"identity.type!='local'\" style=\"color:#DDCBA4; font-family: 'sofia-pro'; font-size: 240%; font-weight: 510\">{{title}}</h1>\n</div>\n  <div class=\"col-md-2\" style=\"margin-top: 15px;\" >\n    <img *ngIf=\"identity.type=='local' && dataEncuesta\" style=\"width: 50px; height:50px;\" src=\"./assets/bell3.png\" [routerLink]=\"['/encuesta']\"/>\n  </div>\n  <div class=\"col-md-3\" style=\"margin-top: 27px;\">\n    <div class=\"input-group\" *ngIf=\"identity.type=='local'\">\n      <span class=\"input-group-btn\">\n        <button class=\"btn btn-default\" type=\"button\" (click)=\"goToSearch(search)\">\n          <div style=\"font-size: 10px\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\n              <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\n            </svg>\n          </div>\n        </button>\n      </span>\n      <input type=\"text\" class=\"form-control\" placeholder=\"Buscar Requerimiento\" #name=\"ngModel\" name=\"search\" [(ngModel)]=\"search\">\n    </div>\n    <div class=\"input-group\" *ngIf=\"identity.type!='local'\">\n      <span class=\"input-group-btn\">\n        <button style=\"background-color: #e1e1e1;\" class=\"btn btn-default\" type=\"button\" (click)=\"goToSearch(search)\">\n          <div style=\"font-size: 10px\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\n              <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\n            </svg>\n          </div>\n        </button>\n      </span>\n      <input style=\"background-color: #e1e1e1;\" type=\"text\" class=\"form-control\" placeholder=\"Buscar Folio\" #name=\"ngModel\" name=\"search\" [(ngModel)]=\"search\">\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <section class=\"row\" id=\"main-content\" style=\"margin-top: 5px;\">\n    <div class=\"col-xs-12\">\n    <ul class=\"nav nav-pills grouping_tabs\">\n      <li class=\"active\" *ngIf=\"table==1 && identity.type=='callCenter'\">\n        <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 1\" type=\"button\" id=\"btn_tab_for_opened\">Solucionado CC<span class=\"badge\">{{inSolutionCallCenter.length}}</span></a>\n      </li>\n      <li *ngIf=\"table!=1 && identity.type=='callCenter'\">\n        <a style=\"color: #DDCBA4\" (click)=\"table = 1\" type=\"button\" id=\"btn_tab_for_opened\">Solucionado CC<span class=\"badge\">{{inSolutionCallCenter.length}}</span></a>\n      </li>\n      <li class=\"active\" *ngIf=\"table==2 && identity.type=='local'\">\n        <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 2\" type=\"button\" id=\"btn_tab_for_resolved\">Solucionado<span class=\"badge\">{{inSolution.length}}</span></a>\n      </li>\n      <li *ngIf=\"table!=2 && identity.type=='local'\">\n        <a style=\"color: #DDCBA4\" (click)=\"table = 2\" type=\"button\" id=\"btn_tab_for_resolved\">Solucionado<span class=\"badge\">{{inSolution.length}}</span></a>\n      </li>\n\n      <li class=\"active\" *ngIf=\"table==2 && identity.type!='local'\">\n        <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 2\" type=\"button\" id=\"btn_tab_for_resolved\">Solucionado<span class=\"badge\">{{inSolution.length}}</span></a>\n      </li>\n      <li *ngIf=\"table!=2&& identity.type!='local'\">\n        <a style=\"color: #DDCBA4\" (click)=\"table = 2\" type=\"button\" id=\"btn_tab_for_resolved\">Solucionado<span class=\"badge\">{{inSolution.length}}</span></a>\n      </li>\n\n      <li class=\"active\" *ngIf=\"table==3 && identity.type!='callCenter' && identity.type!='areaManager' && identity.type!='local'\">\n        <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 3\" type=\"button\" id=\"btn_tab_for_resolved\">Solucionado CC<span class=\"badge\"><a *ngIf=\"inSolutionCallCenter\"> {{inSolutionCallCenter.length}} </a><a *ngIf=\"!inSolutionCallCenter\"> 0 </a> </span></a>\n      </li>\n      <li *ngIf=\"table!=3 && identity.type!='callCenter' && identity.type!='areaManager' && identity.type!='local'\">\n        <a style=\"color: #DDCBA4\" (click)=\"table = 3\" type=\"button\" id=\"btn_tab_for_resolved\">Solucionado CC<span class=\"badge\">{{inSolutionCallCenter.length}}</span></a>\n      </li>\n    </ul>\n\n\n<div class=\"panel panel-default\" style=\"background-color:#DDCBA4; border-color: rgb(71, 71, 71)\">\n<div class=\"panel-body\">\n<!-- <h3 class=\"text-center\">Sin elementos</h3> -->\n<div class=\"portlet-body form\" style=\"margin-top: 2%; font-size: 100%;\">\n  <div *ngIf=\"table==1\" class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <a type=\"button\" style=\"margin-bottom: 0.3%; background-color: green;\" class=\"btn btn-primary\" (click)=\"exportFunction(inSolutionCallCenter)\">Excel <span class=\"glyphicon glyphicon-save\" aria-hidden=\"true\"></span></a>\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inSolutionCallCenter\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\" [mfRowsOnPage]=\"20\">\n    <thead>\n      <tr>\n        <th><mfDefaultSorter><a style=\"color: #3F2021;\"> # </a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"codeRequest\"><a style=\"color: #3F2021;\"> Nombre Común</a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"dateOfReport\"><a style=\"color: #3F2021;\"> Fecha de inicio </a></mfDefaultSorter></th>\n        <th><a style=\"color: #3F2021;\"> Hora </a></th>\n        <th><mfDefaultSorter by=\"subCategory\"><a style=\"color: #3F2021;\"> Subcategoría </a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"service\"><a style=\"color: #3F2021;\"> Servicio </a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"numSerie\"><a style=\"color: #3F2021;\"> Num.Serie </a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"issue.category\"><a style=\"color: #3F2021;\"> Departamento </a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"issue.slaCallCenter\"><a style=\"color: #3F2021;\"> SLA CC </a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"solutionTimeNew\"><a style=\"color: #3F2021;\"> Tiempo Solucion </a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"statusCallCenter\"><a style=\"color: #3F2021;\"> Estatus CC </a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"reportBy.name\"><a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"reportBy.area.name\"><a style=\"color: #3F2021;\"> Área </a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"analyst.fnames\"><a style=\"color: #3F2021;\"> Analista </a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"dateSolutionCallCenter\"><a style=\"color: #3F2021;\"> FechaSolucion</a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"dateSolutionCallCenter\"><a style=\"color: #3F2021;\"> Hora </a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"pasado\"><a style=\"color: #3F2021;\"> Vencido </a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"encuesta\"><a style=\"color: #3F2021;\"> Encuesta </a></mfDefaultSorter></th>\n        <th><mfDefaultSorter by=\"encuestaComents\"><a style=\"color: #3F2021;\"> Comentario encuesta </a></mfDefaultSorter></th>\n      </tr>\n      <tr style=\"background-color: #dad2c1;\">\n        <td></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolioCallCenter(search.folio)\"></td>\n        <td> </td>\n        <td> </td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoriaCallCenter(search.subcategoria)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicioCallCenter(search.servicio)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie\" [(ngModel)]=\"search.numSerie\" (ngModelChange)=\"searchNumSerieCall(search.numSerie)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchAreaCallCenter(search.area)\"></td>\n        <td> </td>\n        <td> </td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatusCallCenter\" (ngModelChange)=\"searchEstatusCallCenter(search.estatusCallCenter)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportByCallCenter(search.reportadoPor)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchReportByCallCenter(search.area)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalistaCallCenter(search.analista)\"></td>\n        <td> </td>\n        <td> </td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencidoCallCenter(search.vencido)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"encuesta\" [(ngModel)]=\"search.encuesta\" (ngModelChange)=\"searchEncuestaCallCenter(search.encuesta)\"></td>\n        <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"encuestaComents\" [(ngModel)]=\"search.encuestaComents\" (ngModelChange)=\"searchEncuestaComentsCallCenter(search.encuestaComents)\"></td>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1;\">\n        <td>{{i + 1}}</td>\n        <td>\n          <!-- <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\"> -->\n          <a>\n            <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n          </a>\n        </td>\n        <td>{{momentTimeDate(item.dateOfReport)}}</td>\n        <td>{{momentTimeHour(item.dateOfReport)}}</td>\n        <td>{{item.subCategory}}</td>\n        <td>{{item.service}}</td>\n        <td>{{item.numSerie}}</td>\n        <td>{{item.issue.category}}</td>\n        <td>{{item.issue.slaCallCenter}}</td>\n        <td><a *ngIf=\"item.statusCallCenter!='SolucionadoCallCenter'\"></a> <a *ngIf=\"item.statusCallCenter=='SolucionadoCallCenter'\"> {{item.solutionTimeNew}} </a></td>\n        <td>{{item.statusCallCenter}}<label *ngIf=\"item.solutionBySucursal && item.solutionBySucursal=='si'\">Por: Sucursal</label> <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n        <td>{{item.reportBy.name}}<label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n        <td>{{item.reportBy.area.name}}</td>\n        <td> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a>   </td>\n        <td>{{momentTimeDate(item.dateSolutionCallCenter)}}</td>\n        <td>{{momentTimeHour(item.dateSolutionCallCenter)}}</td>\n        <td><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a></td>\n        <td style=\"text-align: center;\">{{item.encuesta}} </td>\n        <td style=\"text-align: center;\"><a *ngIf=\"item.encuestaComents\">{{item.encuestaComents}} </a> <a *ngIf=\"!item.encuestaComents\"> </a> </td>\n      </tr>\n      <td></td>\n      <td> <a style=\"font-size: 120%;\" *ngIf=\"inSolutionCallCenter\">Total: {{inSolutionCallCenter.length}}</a> </td>\n    </tbody>\n    <tfoot>\n      <tr style=\"background-color: #dad2c1\">\n          <td colspan=\"12\">\n              <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n          </td>\n      </tr>\n      </tfoot>\n  </table>\n  </div>\n\n\n  <div *ngIf=\"table==2\" class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <a type=\"button\" style=\"margin-bottom: 0.3%; background-color: green;\" class=\"btn btn-primary\" (click)=\"exportFunction(inSolution)\">Excel <span class=\"glyphicon glyphicon-save\" aria-hidden=\"true\"></span></a>\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inSolution\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\" [mfRowsOnPage]=\"20\">\n      <thead>\n        <tr>\n          <th><mfDefaultSorter><a style=\"color: #3F2021;\"> # </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"codeRequest\"><a style=\"color: #3F2021;\"> Nombre Común </a></mfDefaultSorter></th>\n          <th *ngIf=\"(identity.type=='admin' || identity.type=='superAdmin' ) && (identity.department._id=='62f2c60e5b1ab6024e9fdfb6')\"><mfDefaultSorter by=\"statusExtra\"><a style=\"color: #3F2021;\"> Estatus extra </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"dateOfReport\"><a style=\"color: #3F2021;\"> Fecha inicio </a></mfDefaultSorter></th>\n          <th><a style=\"color: #3F2021;\"> Hora </a></th>\n          <th><mfDefaultSorter by=\"subCategory\"><a style=\"color: #3F2021;\"> Subcategoría </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"service\"><a style=\"color: #3F2021;\"> Servicio </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"numSerie\"><a style=\"color: #3F2021;\"> Num.Serie </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"issue.category\"><a style=\"color: #3F2021;\"> Departamento </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"issue.sla\"><a style=\"color: #3F2021;\"> SLA </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"solutionTimeNew\"><a style=\"color: #3F2021;\"> Tiempo Solucion </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"status\"><a style=\"color: #3F2021;\"> Estatus </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"reportBy.name\"><a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"reportBy.area.name\"><a style=\"color: #3F2021;\"> Área </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"analyst.fnames\"><a style=\"color: #3F2021;\"> Analista </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"dateSolution\"><a style=\"color: #3F2021;\"> FechaSolucion </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"dateSolution\"><a style=\"color: #3F2021;\"> Hora </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"pasado\"><a style=\"color: #3F2021;\"> Vencido </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"encuesta\"><a style=\"color: #3F2021;\"> Encuesta </a></mfDefaultSorter></th>\n          <th><mfDefaultSorter by=\"encuestaComents\"><a style=\"color: #3F2021;\"> Comentario encuesta </a></mfDefaultSorter></th>\n        </tr>\n        <tr style=\"background-color: #dad2c1;\">\n          <td></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio(search.folio)\"></td>\n          <td *ngIf=\"(identity.type=='admin' || identity.type=='superAdmin' ) && (identity.department._id=='62f2c60e5b1ab6024e9fdfb6')\"> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"statusExtra\" [(ngModel)]=\"search.statusExtra\" (ngModelChange)=\"searchstatusExtra(search.statusExtra)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria(search.subcategoria)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio(search.servicio)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie\" [(ngModel)]=\"search.numSerie\" (ngModelChange)=\"searchNumSerie(search.numSerie)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea(search.area)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatus\" (ngModelChange)=\"searchEstatus(search.estatus)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy(search.reportadoPor)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.areaaa\" (ngModelChange)=\"searchReportByarea(search.areaaa)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista(search.analista)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido(search.vencido)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"encuesta\" [(ngModel)]=\"search.encuesta\" (ngModelChange)=\"searchEncuesta(search.encuesta)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"encuestaComents\" [(ngModel)]=\"search.encuestaComents\" (ngModelChange)=\"searchEncuestaComents(search.encuestaComents)\"></td>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1;\">\n          <td>{{i + 1}}</td>\n          <td>\n            <!-- <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\"> -->\n            <a>\n              <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td *ngIf=\"(identity.type=='admin' || identity.type=='superAdmin' ) && (identity.department._id=='62f2c60e5b1ab6024e9fdfb6')\">\n            <a *ngIf=\"!item.statusExtra\">\n              <button type=\"button\" class=\"btn\" style=\"color: #ca243d; margin-top: -6%;\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"changeStatusExtra(item,'Oportunidad Operativa')\" ><u> Oportunidad Operativa </u></button>\n              <button type=\"button\" class=\"btn\" style=\"color: #459113; margin-top: -6%;\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"changeStatusExtra(item,'Naturaleza del equipo')\"><u> Naturaleza del equipo </u></button>\n              <button type=\"button\" class=\"btn\" style=\"color: #2869bd;  margin-top: -6%;\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"changeStatusExtra(item,'Instalación')\"><u> Instalación </u></button>  \n            </a>\n            <a *ngIf=\"item.statusExtra\">\n              {{item.statusExtra}}\n            </a>\n          </td>\n          <td>{{momentTimeDate(item.dateOfReport)}}</td>\n          <td>{{momentTimeHour(item.dateOfReport)}}</td>\n          <td>{{item.subCategory}}</td>\n          <td>{{item.service}}</td>\n          <td>{{item.numSerie}}</td>\n          <td>{{item.issue.category}}</td>\n          <td>{{item.issue.sla}}</td>\n          <td> {{item.solutionTimeNew}} </td>\n          <td><a *ngIf=\"(!item.statusCallCenter && item.statusCallCenter!='SolucionadoCallCenter'&& item.statusCallCenter!='SolucionadoPreventivoCallCenter' && item.statusCallCenter!='AutoSolucionado' ) || (item.statusCallCenter && item.status && (item.status =='Solucionado' || item.status =='SolucionadoPreventivo' || item.status =='AutoSolucionado' )) \"> {{item.status}} </a> <a *ngIf=\"item.statusCallCenter && (item.statusCallCenter=='SolucionadoCallCenter' || item.statusCallCenter=='SolucionadoPreventivoCallCenter' || item.statusCallCenter=='AutoSolucionado') \"> {{item.statusCallCenter}}</a><label *ngIf=\"item.solutionBySucursal && item.solutionBySucursal=='si'\">Por: Sucursal</label> <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n          <td>{{item.reportBy.name}}<label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td>{{item.reportBy.area.name}}</td>\n          <td> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a>   </td>\n          <td> <a *ngIf=\"item.dateSolution\"> {{momentTimeDate(item.dateSolution)}} </a><a *ngIf=\"!item.dateSolution\"> {{momentTimeDate(item.dateSolutionCallCenter)}} </a></td>\n          <td> <a *ngIf=\"item.dateSolution\"> {{momentTimeHour(item.dateSolution)}} </a><a *ngIf=\"!item.dateSolution\"> {{momentTimeHour(item.dateSolutionCallCenter)}} </a></td>\n          <td><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a></td>\n          <td style=\"text-align: center;\">{{item.encuesta}} </td>\n          <td style=\"text-align: center;\"><a *ngIf=\"item.encuestaComents\">{{item.encuestaComents}} </a> <a *ngIf=\"!item.encuestaComents\"> </a> </td>\n        </tr>\n        <td></td>\n        <td> <a style=\"font-size: 120%;\" *ngIf=\"inSolution\">Total: {{inSolution.length}}</a> </td>\n      </tbody>\n      <tfoot>\n        <tr style=\"background-color: #dad2c1\">\n            <td colspan=\"12\">\n                <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n            </td>\n        </tr>\n        </tfoot>\n    </table>\n    </div>\n\n    <div *ngIf=\"table==3\" class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n      <a type=\"button\" style=\"margin-bottom: 0.3%; background-color: green;\" class=\"btn btn-primary\" (click)=\"exportFunction(inSolutionCallCenter)\">Excel <span class=\"glyphicon glyphicon-save\" aria-hidden=\"true\"></span></a>\n      <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inSolutionCallCenter\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy\" [mfRowsOnPage]=\"20\">\n        <thead>\n          <tr>\n            <th><mfDefaultSorter><a style=\"color: #3F2021;\"> # </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"codeRequest\"><a style=\"color: #3F2021;\"> Nombre Común </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"dateOfReport\"><a style=\"color: #3F2021;\"> Fecha de inicio </a></mfDefaultSorter></th>\n            <th><a style=\"color: #3F2021;\"> Hora </a></th>\n            <th><mfDefaultSorter by=\"subCategory\"><a style=\"color: #3F2021;\"> Subcategoría </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"service\"><a style=\"color: #3F2021;\"> Servicio </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"numSerie\"><a style=\"color: #3F2021;\"> Num.Serie </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"issue.category\"><a style=\"color: #3F2021;\"> Departamento </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"issue.slaCallCenter\"><a style=\"color: #3F2021;\"> SLA CC </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"solutionTimeNew\"><a style=\"color: #3F2021;\"> Tiempo Solucion </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"statusCallCenter\"><a style=\"color: #3F2021;\"> Estatus CC </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"reportBy.name\"><a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"reportBy.area.name\"><a style=\"color: #3F2021;\"> Área </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"analyst.fnames\"><a style=\"color: #3F2021;\"> Analista </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"dateSolution\"><a style=\"color: #3F2021;\"> FechaSolucion </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"dateSolution\"><a style=\"color: #3F2021;\"> Hora </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"pasado\"><a style=\"color: #3F2021;\"> Vencido </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"encuesta\"><a style=\"color: #3F2021;\"> Encuesta </a></mfDefaultSorter></th>\n            <th><mfDefaultSorter by=\"encuestaComents\"><a style=\"color: #3F2021;\"> Comentario encuesta </a></mfDefaultSorter></th>\n          </tr>\n          <tr style=\"background-color: #dad2c1;\">\n            <td></td>\n            <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolioCallCenter(search.folio)\"></td>\n            <td> </td>\n            <td> </td>\n            <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoriaCallCenter(search.subcategoria)\"></td>\n            <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicioCallCenter(search.servicio)\"></td>\n            <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie\" [(ngModel)]=\"search.numSerie\" (ngModelChange)=\"searchNumSerieCall(search.numSerie)\"></td>\n            <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchAreaCallCenter(search.area)\"></td>\n            <td> </td>\n            <td> </td>\n            <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatus\" (ngModelChange)=\"searchEstatusCallCenter(search.estatus)\"></td>\n            <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportByCallCenter(search.reportadoPor)\"></td>\n            <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchReportByCallCenter(search.area)\"></td>\n            <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalistaCallCenter(search.analista)\"></td>\n            <td> </td>\n            <td> </td>\n            <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencidoCallCenter(search.vencido)\"></td>\n            <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"encuesta\" [(ngModel)]=\"search.encuesta\" (ngModelChange)=\"searchEncuestaCallCenter(search.encuesta)\"></td>\n            <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"encuestaComents\" [(ngModel)]=\"search.encuestaComents\" (ngModelChange)=\"searchEncuestaComentsCallCenter(search.encuestaComents)\"></td>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1;\">\n            <td>{{i + 1}}</td>\n            <td>\n              <!-- <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\"> -->\n              <a>\n                <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n              </a>\n            </td>\n            <td>{{momentTimeDate(item.dateOfReport)}}</td>\n            <td>{{momentTimeHour(item.dateOfReport)}}</td>\n            <td>{{item.subCategory}}</td>\n            <td>{{item.service}}</td>\n            <td>{{item.numSerie}}</td>\n            <td>{{item.issue.category}}</td>\n            <td>{{item.issue.slaCallCenter}}</td>\n            <td><a *ngIf=\"item.statusCallCenter!='SolucionadoCallCenter'\"></a> <a *ngIf=\"item.statusCallCenter=='SolucionadoCallCenter'\"> {{item.solutionTimeNew}} </a></td>\n            <td>{{item.statusCallCenter}}<label *ngIf=\"item.solutionBySucursal && item.solutionBySucursal=='si'\">Por: Sucursal</label> <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n            <td>{{item.reportBy.name}}<label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n            <td>{{item.reportBy.area.name}}</td>\n            <td> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a>   </td>\n            <td>{{momentTimeDate(item.dateSolutionCallCenter)}}</td>\n            <td>{{momentTimeHour(item.dateSolutionCallCenter)}}</td>\n            <td><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a></td>\n            <td style=\"text-align: center;\">{{item.encuesta}} </td>\n            <td style=\"text-align: center;\"><a *ngIf=\"item.encuestaComents\">{{item.encuestaComents}} </a> <a *ngIf=\"!item.encuestaComents\"> </a> </td>\n          </tr>\n          <td></td>\n          <td> <a style=\"font-size: 120%;\" *ngIf=\"inSolutionCallCenter\">Total: {{inSolutionCallCenter.length}}</a> </td>\n        </tbody>\n        <tfoot>\n          <tr style=\"background-color: #dad2c1\">\n              <td colspan=\"12\">\n                  <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n              </td>\n          </tr>\n          </tfoot>\n      </table>\n      </div>\n\n\n</div>\n\n\n</div>\n</div>\n</div>\n  </section>\n    \n  <div *ngIf=\"load==true\">\n    <div id=\"loader-wrapper\">\n      <div id=\"loader\"></div>\n    </div>\n  </div>\n\n\n<!-- Modal Estatus Extra -->\n<div *ngIf=\"statusEx\" class=\"modal fade\" id=\"exampleModal1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 50%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\">{{statusEx.codeRequest}}  ---  {{statusExtype}}</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n\n\n        <div class=\"col-md-12\" style=\"margin-top: 40px;\">\n          <label style=\"text-align: left; color: #575757; font-weight:0;\">Escribe el motivo</label>\n          <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"statusEx.statusExtraMotivo\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n        </div>\n\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" (click)=\"daleStatus(statusEx, statusExtype)\">Guardar</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<style>\n\n#loader-wrapper {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1000;\n}\n\n#loader {\n  display: block;\n  position: relative;\n  left: 50%;\n  top: 50%;\n  width: 150px;\n  height: 150px;\n  margin: -75px 0 0 -75px;\n  border-radius: 50%;\n  border: 3px solid transparent;\n  border-top-color:#f53737;\n  -webkit-animation: spin 2s linear infinite;\n  /* Chrome, Opera 15+, Safari 5+ */\n  animation: spin 2s linear infinite;\n  /* Chrome, Firefox 16+, IE 10+, Opera */\n}\n\n#loader:before {\n  content: \"\";\n  position: absolute;\n  top: 5px;\n  left: 5px;\n  right: 5px;\n  bottom: 5px;\n  border-radius: 50%;\n  border: 3px solid transparent;\n  border-top-color: #eeeeee;\n  -webkit-animation: spin 3s linear infinite;\n  /* Chrome, Opera 15+, Safari 5+ */\n  animation: spin 3s linear infinite;\n  /* Chrome, Firefox 16+, IE 10+, Opera */\n}\n\n#loader:after {\n  content: \"\";\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n  border-radius: 50%;\n  border: 3px solid transparent;\n  border-top-color: #bb2121;\n  -webkit-animation: spin 1.5s linear infinite;\n  /* Chrome, Opera 15+, Safari 5+ */\n  animation: spin 1.5s linear infinite;\n  /* Chrome, Firefox 16+, IE 10+, Opera */\n}\n\n@-webkit-keyframes spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(0deg);\n    /* IE 9 */\n    transform: rotate(0deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n\n  100% {\n    -webkit-transform: rotate(360deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(360deg);\n    /* IE 9 */\n    transform: rotate(360deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n}\n\n@keyframes spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(0deg);\n    /* IE 9 */\n    transform: rotate(0deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n\n  100% {\n    -webkit-transform: rotate(360deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(360deg);\n    /* IE 9 */\n    transform: rotate(360deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n}\n@import url(\"https://p.typekit.net/p.css?s=1&k=lkr2zif&ht=tk&f=24539.24540.24547&a=6178157&app=typekit&e=css\");\n@font-face {\nfont-family:\"sofia-pro\";\nsrc:url(\"https://use.typekit.net/af/5d97ff/00000000000000007735f999/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"woff2\"),url(\"https://use.typekit.net/af/5d97ff/00000000000000007735f999/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"woff\"),url(\"https://use.typekit.net/af/5d97ff/00000000000000007735f999/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"opentype\");\nfont-display:auto;font-style:normal;font-weight:700;font-stretch:normal;\n}\n@font-face {\nfont-family:\"sofia-pro\";\nsrc:url(\"https://use.typekit.net/af/66e20c/00000000000000007735f993/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3\") format(\"woff2\"),url(\"https://use.typekit.net/af/66e20c/00000000000000007735f993/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3\") format(\"woff\"),url(\"https://use.typekit.net/af/66e20c/00000000000000007735f993/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3\") format(\"opentype\");\nfont-display:auto;font-style:italic;font-weight:700;font-stretch:normal;\n}\n@font-face {\nfont-family:\"sofia-pro\";\nsrc:url(\"https://use.typekit.net/af/b718ff/00000000000000007735f98d/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"woff2\"),url(\"https://use.typekit.net/af/b718ff/00000000000000007735f98d/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"woff\"),url(\"https://use.typekit.net/af/b718ff/00000000000000007735f98d/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"opentype\");\nfont-display:auto;font-style:normal;font-weight:400;font-stretch:normal;\n}\n\n</style>"

/***/ }),

/***/ 1061:
/***/ (function(module, exports) {

module.exports = "<h1 *ngIf=\"identity.type=='local'\" style=\"color:#3F2021\">{{title}}</h1>\n<h1 *ngIf=\"identity.type!='local'\" style=\"color:#DDCBA4\">{{title}}</h1>\n\n<section class=\"row\" id=\"main-content\">\n    <div class=\"col-xs-12\">\n\n<div class=\"panel panel-default\">\n<div class=\"panel-body\">\n\n  \n  <div *ngIf=\"issue\">\n    <div style=\"margin-left: 20px;\" *ngIf=\"identity.type!='local' && permiso=='si' && (issue.status=='Nuevo')\">\n      <button *ngIf=\"issue.statusCallCenter!='SolucionadoCallCenter' && issue.statusCallCenter!='AutoSolucionado' && issue.statusCallCenter!='SolucionadoPreventivoCallCenter'\" type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\"  (click)=\"asignar(issue)\">Asignar</button>\n    </div>\n\n    <div style=\"margin-left: 20px;\">\n      <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" *ngIf=\"permiso=='si' && issue.analyst && issue.status && issue.status!='Nuevo' && issue.status!='Pendiente' && (issue.status && issue.status !='Solucionado' && issue.status !='AutoSolucionado' && issue.status !='SolucionadoPreventivo')\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addPendiente(issue)\">Pendiente</button>\n      <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" *ngIf=\"permiso=='si' && issue.analyst && issue.status && issue.status!='Nuevo' && (issue.status && issue.status !='Solucionado' && issue.status !='AutoSolucionado' && issue.status !='SolucionadoPreventivo')\" data-toggle=\"modal\" data-target=\"#exampleModal2\" (click)=\"addSolucionado(issue)\">Marcar como solucionado</button>\n      <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" *ngIf=\"permiso!='si' && (identity.type=='local' || identity.type=='areaManager' ) && (issue.status !='Solucionado' && issue.status !='AutoSolucionado' && issue.status !='SolucionadoPreventivo' && issue.statusCallCenter !='SolucionadoCallCenter' && issue.statusCallCenter !='AutoSolucionado' && issue.statusCallCenter !='SolucionadoPreventivoCallCenter') \" data-toggle=\"modal\" data-target=\"#exampleModal2\" (click)=\"addSolucionado(issue)\">Marcar como solucionado</button>\n    </div>\n\n    <div class=\"col-md-12\">\n    <div class=\"col-md-5\" style=\"text-align: center;\">\n      <div style=\"text-align: right;\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #2f79b9;\" *ngIf=\"((issue.status && (issue.status == 'Solucionado' || issue.status == 'AutoSolucionado' || issue.status == 'SolucionadoPreventivo')) || (issue.statusCallCenter && (issue.statusCallCenter == 'SolucionadoCallCenter'|| issue.statusCallCenter == 'AutoSolucionado' || issue.statusCallCenter == 'SolucionadoPreventivoCallCenter')) ) && ((identity.type == 'local' && issue.toencuesta == 'si') && issue.encuesta =='' )\" data-toggle=\"modal\" data-target=\"#exampleModalEncuesta\">Encuesta de satisfacción<a style=\"font-size: 70%;\"> *(visible sólo 72h de solucionado)</a></button>\n      </div>\n    </div>\n      <div class=\"col-md-1\" style=\"text-align: center;\">\n      <button type=\"button\" class=\"btn btn-secondary\" style=\" font-size: 100%;\" *ngIf=\"!getImg && !getEvent && !getAfterFile\" (click)=\"getEvento(issue)\">Eventos</button>\n    </div>\n    <div class=\"col-md-2\" style=\"text-align: center;\" *ngIf=\"!issue.imagenes[0]\">\n      <button type=\"button\" class=\"btn btn-secondary\" style=\"font-size: 100%;\" *ngIf=\"!getImg && !getEvent && !getAfterFile\">Anexos ( {{issue.imagenes.length}} )</button>\n    </div>\n    <div class=\"col-md-2\" style=\"text-align: center;\" *ngIf=\"issue.imagenes[0]\">\n      <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #2f79b9; font-size: 100%;\" *ngIf=\"!getImg && !getEvent && !getAfterFile\" (click)=\"getImgs(issue)\">Anexos ( {{issue.imagenes.length}} )</button>\n    </div>\n\n    <div class=\"col-md-2\" style=\"text-align: center;\" *ngIf=\"!issue.afterFiles2\">\n      <button type=\"button\" class=\"btn btn-secondary\" style=\"font-size: 100%;\" *ngIf=\"!getImg && !getEvent && !getAfterFile\"><a *ngIf=\"issue.afterFiles2\">  Anexos Posteriores ( {{issue.afterFiles2.length}} ) </a><a  *ngIf=\"!issue.afterFiles2\"> Anexos Posteriores ( 0 ) </a> </button>\n    </div>\n    <div class=\"col-md-2\" style=\"text-align: center;\" *ngIf=\"issue.afterFiles2 && issue.afterFiles2[0]\">\n      <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #2f79b9; font-size: 100%;\" *ngIf=\"!getImg && !getEvent && !getAfterFile\" (click)=\"getAfterFiles(issue)\">Anexos Posteriores ( {{issue.afterFiles2.length}} )</button>\n    </div>\n    </div>\n\n    <div style=\"text-align: center;\" *ngIf=\"getImg || getEvent || getAfterFile\">\n      <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #2f79b9; font-size: 150%;\" (click)=\"getDetalle(issue)\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-left-square\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"M15 2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2zM0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm11.5 5.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z\"></path>\n        </svg> Mas detalle  \n      </button>\n    </div>\n\n    <section>\n      <div style=\"margin-top: 3%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n        <a style=\"margin-left: 5%;\" *ngIf=\"getImg && issue.imagenes[0] && !issue.imagenes[0].permiso\" href=\"{{url + 'requests/getImage/' + issue.imagenes[0].img}}\">\n          <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n            <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n            <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n          </svg>      \n          {{issue.imagenes[0].img}}</a>\n      </div>\n\n      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n      <a style=\"margin-left: 5%;\" *ngIf=\"getImg && issue.imagenes[1] && !issue.imagenes[1].permiso\" href=\"{{url + 'requests/getImage/' + issue.imagenes[1].img}}\">\n        <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n        </svg>\n        {{issue.imagenes[1].img}}</a>\n      </div>\n\n      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n      <a style=\"margin-left: 5%;\" *ngIf=\"getImg && issue.imagenes[2] && !issue.imagenes[2].permiso\" href=\"{{url + 'requests/getImage/' + issue.imagenes[2].img}}\">\n        <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n        </svg>\n        {{issue.imagenes[2].img}}</a>\n      </div>\n\n      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n      <a style=\"margin-left: 5%;\" *ngIf=\"getImg && issue.imagenes[3] && !issue.imagenes[3].permiso\" href=\"{{url + 'requests/getImage/' + issue.imagenes[3].img}}\">\n        <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n        </svg>\n        {{issue.imagenes[3].img}}</a>\n      </div>\n\n      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n      <a style=\"margin-left: 5%;\" *ngIf=\"getImg && issue.imagenes[4] && !issue.imagenes[4].permiso\" href=\"{{url + 'requests/getImage/' + issue.imagenes[4].img}}\">\n        <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n        </svg>\n        {{issue.imagenes[4].img}}</a>\n      </div>\n      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n      <a style=\"margin-left: 5%;\" *ngIf=\"getImg && issue.imagenes[5] && !issue.imagenes[5].permiso\" href=\"{{url + 'requests/getImage/' + issue.imagenes[5].img}}\">\n        <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n        </svg>\n        {{issue.imagenes[5].img}}</a>\n      </div>\n      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n      <a style=\"margin-left: 5%;\" *ngIf=\"getImg && issue.imagenes[6] && !issue.imagenes[6].permiso\" href=\"{{url + 'requests/getImage/' + issue.imagenes[6].img}}\">\n        <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n        </svg>\n        {{issue.imagenes[6].img}}</a>\n      </div>\n      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n      <a style=\"margin-left: 5%;\" *ngIf=\"getImg && issue.imagenes[7] && !issue.imagenes[7].permiso\" href=\"{{url + 'requests/getImage/' + issue.imagenes[7].img}}\">\n        <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n        </svg>\n        {{issue.imagenes[7].img}}</a>\n      </div>\n      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n      <a style=\"margin-left: 5%;\" *ngIf=\"getImg && issue.imagenes[8] && !issue.imagenes[8].permiso\" href=\"{{url + 'requests/getImage/' + issue.imagenes[8].img}}\">\n        <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n        </svg>\n        {{issue.imagenes[8].img}}</a>\n      </div>\n      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n      <a style=\"margin-left: 5%;\" *ngIf=\"getImg && issue.imagenes[9] && !issue.imagenes[9].permiso\" href=\"{{url + 'requests/getImage/' + issue.imagenes[9].img}}\">\n        <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n        </svg>\n        {{issue.imagenes[9].img}}</a>\n      </div>\n      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n      <a style=\"margin-left: 5%;\" *ngIf=\"getImg && issue.imagenes[10] && !issue.imagenes[10].permiso\" href=\"{{url + 'requests/getImage/' + issue.imagenes[10].img}}\">\n        <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n        </svg>\n        {{issue.imagenes[10].img}}</a>\n      </div>\n      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n      <a style=\"margin-left: 5%;\" *ngIf=\"getImg && issue.imagenes[11] && !issue.imagenes[11].permiso\" href=\"{{url + 'requests/getImage/' + issue.imagenes[11].img}}\">\n        <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n        </svg>\n        {{issue.imagenes[11].img}}</a>\n      </div>\n      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n      <a style=\"margin-left: 5%;\" *ngIf=\"getImg && issue.imagenes[12] && !issue.imagenes[12].permiso\" href=\"{{url + 'requests/getImage/' + issue.imagenes[12].img}}\">\n        <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n        </svg>\n        {{issue.imagenes[12].img}}</a>\n      </div>\n    </section>\n\n    <img style=\"margin-top: 2%\" width=\"80%\" *ngIf=\"getImg && issue.imagenes[0] && issue.imagenes[0].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.imagenes[0].img}}\"/>\n    <img style=\"margin-top: 2%\" width=\"80%\" *ngIf=\"getImg && issue.imagenes[1] && issue.imagenes[1].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.imagenes[1].img}}\"/>\n    <img style=\"margin-top: 2%\" width=\"80%\" *ngIf=\"getImg && issue.imagenes[2] && issue.imagenes[2].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.imagenes[2].img}}\"/>\n    <img style=\"margin-top: 2%\" width=\"80%\" *ngIf=\"getImg && issue.imagenes[3] && issue.imagenes[3].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.imagenes[3].img}}\"/>\n    <img style=\"margin-top: 2%\" width=\"80%\" *ngIf=\"getImg && issue.imagenes[4] && issue.imagenes[4].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.imagenes[4].img}}\"/>\n    <img style=\"margin-top: 2%\" width=\"80%\" *ngIf=\"getImg && issue.imagenes[5] && issue.imagenes[5].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.imagenes[5].img}}\"/>\n    <img style=\"margin-top: 2%\" width=\"80%\" *ngIf=\"getImg && issue.imagenes[6] && issue.imagenes[6].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.imagenes[6].img}}\"/>\n    <img style=\"margin-top: 2%\" width=\"80%\" *ngIf=\"getImg && issue.imagenes[7] && issue.imagenes[7].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.imagenes[7].img}}\"/>\n    <img style=\"margin-top: 2%\" width=\"80%\" *ngIf=\"getImg && issue.imagenes[8] && issue.imagenes[8].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.imagenes[8].img}}\"/>\n    <img style=\"margin-top: 2%\" width=\"80%\" *ngIf=\"getImg && issue.imagenes[9] && issue.imagenes[9].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.imagenes[9].img}}\"/>\n    <img style=\"margin-top: 2%\" width=\"80%\" *ngIf=\"getImg && issue.imagenes[10] && issue.imagenes[10].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.imagenes[10].img}}\"/>\n    <img style=\"margin-top: 2%\" width=\"80%\" *ngIf=\"getImg && issue.imagenes[11] && issue.imagenes[11].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.imagenes[11].img}}\"/>\n    <img style=\"margin-top: 2%\" width=\"80%\" *ngIf=\"getImg && issue.imagenes[12] && issue.imagenes[12].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.imagenes[12].img}}\"/>\n\n\n\n    <section>\n      <div style=\"margin-top: 3%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n        <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[0] && !issue.afterFiles[0].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[0].img}}\">\n          <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n            <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n            <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n          </svg>      \n          {{issue.afterFiles[0].img}}</a>\n      </div>\n      <div *ngIf=\"getAfterFile && issue.afterFiles[0] && !issue.afterFiles[0].permiso\" class=\"clearfix\"></div>\n      <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[0] && !issue.afterFiles[0].permiso\">{{momentTime(issue.afterFiles[0].date)}} </label>  \n      <div *ngIf=\"getAfterFile && issue.afterFiles[0] && !issue.afterFiles[0].permiso\" class=\"clearfix\"></div>\n\n      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n      <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[1] && !issue.afterFiles[1].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[1].img}}\">\n        <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n          <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n          <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n        </svg>\n        {{issue.afterFiles[1].img}}</a>\n      </div>\n      <div *ngIf=\"getAfterFile && issue.afterFiles[1] && !issue.afterFiles[1].permiso\" class=\"clearfix\"></div>\n      <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[1] && !issue.afterFiles[1].permiso\">{{momentTime(issue.afterFiles[1].date)}} </label>  \n      <div *ngIf=\"getAfterFile && issue.afterFiles[1] && !issue.afterFiles[1].permiso\" class=\"clearfix\"></div>\n\n      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n        <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[2] && !issue.afterFiles[2].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[2].img}}\">\n          <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n            <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n            <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n          </svg>\n          {{issue.afterFiles[2].img}}</a>\n        </div>\n        <div *ngIf=\"getAfterFile && issue.afterFiles[2] && !issue.afterFiles[2].permiso\" class=\"clearfix\"></div>\n        <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[2] && !issue.afterFiles[2].permiso\">{{momentTime(issue.afterFiles[2].date)}} </label>  \n        <div *ngIf=\"getAfterFile && issue.afterFiles[2] && !issue.afterFiles[2].permiso\" class=\"clearfix\"></div>\n\n        <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n          <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[3] && !issue.afterFiles[3].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[3].img}}\">\n            <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n              <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n              <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n            </svg>\n            {{issue.afterFiles[3].img}}</a>\n          </div>\n          <div *ngIf=\"getAfterFile && issue.afterFiles[3] && !issue.afterFiles[3].permiso\" class=\"clearfix\"></div>\n          <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[3] && !issue.afterFiles[3].permiso\">{{momentTime(issue.afterFiles[3].date)}} </label>  \n          <div *ngIf=\"getAfterFile && issue.afterFiles[3] && !issue.afterFiles[3].permiso\" class=\"clearfix\"></div>\n\n          <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n            <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[4] && !issue.afterFiles[4].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[4].img}}\">\n              <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n              </svg>\n              {{issue.afterFiles[4].img}}</a>\n            </div>\n            <div *ngIf=\"getAfterFile && issue.afterFiles[4] && !issue.afterFiles[4].permiso\" class=\"clearfix\"></div>\n            <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[4] && !issue.afterFiles[4].permiso\">{{momentTime(issue.afterFiles[4].date)}} </label>  \n            <div *ngIf=\"getAfterFile && issue.afterFiles[4] && !issue.afterFiles[4].permiso\" class=\"clearfix\"></div>\n\n            <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n              <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[5] && !issue.afterFiles[5].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[5].img}}\">\n                <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                  <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                  <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                </svg>\n                {{issue.afterFiles[5].img}}</a>\n              </div>\n              <div *ngIf=\"getAfterFile && issue.afterFiles[5] && !issue.afterFiles[5].permiso\" class=\"clearfix\"></div>\n              <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[5] && !issue.afterFiles[5].permiso\">{{momentTime(issue.afterFiles[5].date)}} </label>  \n              <div *ngIf=\"getAfterFile && issue.afterFiles[5] && !issue.afterFiles[5].permiso\" class=\"clearfix\"></div>\n\n              <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[6] && !issue.afterFiles[6].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[6].img}}\">\n                  <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                    <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                    <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                  </svg>\n                  {{issue.afterFiles[6].img}}</a>\n                </div>\n                <div *ngIf=\"getAfterFile && issue.afterFiles[6] && !issue.afterFiles[6].permiso\" class=\"clearfix\"></div>\n                <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[6] && !issue.afterFiles[6].permiso\">{{momentTime(issue.afterFiles[6].date)}} </label>  \n                <div *ngIf=\"getAfterFile && issue.afterFiles[6] && !issue.afterFiles[6].permiso\" class=\"clearfix\"></div>\n\n                <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                  <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[7] && !issue.afterFiles[7].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[7].img}}\">\n                    <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                      <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                      <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                    </svg>\n                    {{issue.afterFiles[7].img}}</a>\n                  </div>\n                  <div *ngIf=\"getAfterFile && issue.afterFiles[7] && !issue.afterFiles[7].permiso\" class=\"clearfix\"></div>\n                  <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[7] && !issue.afterFiles[7].permiso\">{{momentTime(issue.afterFiles[7].date)}} </label>  \n                  <div *ngIf=\"getAfterFile && issue.afterFiles[7] && !issue.afterFiles[7].permiso\" class=\"clearfix\"></div>\n\n                  <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                    <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[8] && !issue.afterFiles[8].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[8].img}}\">\n                      <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                        <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                        <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                      </svg>\n                      {{issue.afterFiles[8].img}}</a>\n                    </div>\n                    <div *ngIf=\"getAfterFile && issue.afterFiles[8] && !issue.afterFiles[8].permiso\" class=\"clearfix\"></div>\n                    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[8] && !issue.afterFiles[8].permiso\">{{momentTime(issue.afterFiles[8].date)}} </label>  \n                    <div *ngIf=\"getAfterFile && issue.afterFiles[8] && !issue.afterFiles[8].permiso\" class=\"clearfix\"></div>\n\n                    <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                      <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[9] && !issue.afterFiles[9].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[9].img}}\">\n                        <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                          <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                          <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                        </svg>\n                        {{issue.afterFiles[9].img}}</a>\n                      </div>\n                      <div *ngIf=\"getAfterFile && issue.afterFiles[9] && !issue.afterFiles[9].permiso\" class=\"clearfix\"></div>\n                      <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[9] && !issue.afterFiles[9].permiso\">{{momentTime(issue.afterFiles[9].date)}} </label>  \n                      <div *ngIf=\"getAfterFile && issue.afterFiles[9] && !issue.afterFiles[9].permiso\" class=\"clearfix\"></div>\n\n                      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                        <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[10] && !issue.afterFiles[10].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[10].img}}\">\n                          <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                            <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                            <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                          </svg>\n                          {{issue.afterFiles[10].img}}</a>\n                        </div>\n                        <div *ngIf=\"getAfterFile && issue.afterFiles[10] && !issue.afterFiles[10].permiso\" class=\"clearfix\"></div>\n                        <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[10] && !issue.afterFiles[10].permiso\">{{momentTime(issue.afterFiles[10].date)}} </label>  \n                        <div *ngIf=\"getAfterFile && issue.afterFiles[10] && !issue.afterFiles[10].permiso\" class=\"clearfix\"></div>\n\n                        <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                          <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[11] && !issue.afterFiles[11].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[11].img}}\">\n                            <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                              <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                              <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                            </svg>\n                            {{issue.afterFiles[11].img}}</a>\n                          </div>\n                          <div *ngIf=\"getAfterFile && issue.afterFiles[11] && !issue.afterFiles[11].permiso\" class=\"clearfix\"></div>\n                          <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[11] && !issue.afterFiles[11].permiso\">{{momentTime(issue.afterFiles[11].date)}} </label>  \n                          <div *ngIf=\"getAfterFile && issue.afterFiles[11] && !issue.afterFiles[11].permiso\" class=\"clearfix\"></div>\n\n                          <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                            <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[12] && !issue.afterFiles[12].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[12].img}}\">\n                              <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                                <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                                <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                              </svg>\n                              {{issue.afterFiles[12].img}}</a>\n                            </div>\n                            <div *ngIf=\"getAfterFile && issue.afterFiles[12] && !issue.afterFiles[12].permiso\" class=\"clearfix\"></div>\n                            <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[12] && !issue.afterFiles[12].permiso\">{{momentTime(issue.afterFiles[12].date)}} </label>  \n                            <div *ngIf=\"getAfterFile && issue.afterFiles[12] && !issue.afterFiles[12].permiso\" class=\"clearfix\"></div>\n\n                            <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                              <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[13] && !issue.afterFiles[13].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[13].img}}\">\n                                <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                                  <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                                  <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                                </svg>\n                                {{issue.afterFiles[13].img}}</a>\n                              </div>\n                              <div *ngIf=\"getAfterFile && issue.afterFiles[13] && !issue.afterFiles[13].permiso\" class=\"clearfix\"></div>\n                              <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[13] && !issue.afterFiles[13].permiso\">{{momentTime(issue.afterFiles[13].date)}} </label>  \n                              <div *ngIf=\"getAfterFile && issue.afterFiles[13] && !issue.afterFiles[13].permiso\" class=\"clearfix\"></div>\n\n                              <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                                <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[14] && !issue.afterFiles[14].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[14].img}}\">\n                                  <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                                    <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                                    <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                                  </svg>\n                                  {{issue.afterFiles[14].img}}</a>\n                                </div>\n                                <div *ngIf=\"getAfterFile && issue.afterFiles[14] && !issue.afterFiles[14].permiso\" class=\"clearfix\"></div>\n                                <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[14] && !issue.afterFiles[14].permiso\">{{momentTime(issue.afterFiles[14].date)}} </label>  \n                                <div *ngIf=\"getAfterFile && issue.afterFiles[14] && !issue.afterFiles[14].permiso\" class=\"clearfix\"></div>\n\n                                <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                                  <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[15] && !issue.afterFiles[15].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[15].img}}\">\n                                    <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                                      <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                                      <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                                    </svg>\n                                    {{issue.afterFiles[15].img}}</a>\n                                  </div>\n                                  <div *ngIf=\"getAfterFile && issue.afterFiles[15] && !issue.afterFiles[15].permiso\" class=\"clearfix\"></div>\n                                  <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[15] && !issue.afterFiles[15].permiso\">{{momentTime(issue.afterFiles[15].date)}} </label>  \n                                  <div *ngIf=\"getAfterFile && issue.afterFiles[15] && !issue.afterFiles[15].permiso\" class=\"clearfix\"></div>\n\n                                  <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                                    <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[16] && !issue.afterFiles[16].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[16].img}}\">\n                                      <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                                        <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                                        <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                                      </svg>\n                                      {{issue.afterFiles[16].img}}</a>\n                                    </div>\n                                    <div *ngIf=\"getAfterFile && issue.afterFiles[16] && !issue.afterFiles[16].permiso\" class=\"clearfix\"></div>\n                                    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[16] && !issue.afterFiles[16].permiso\">{{momentTime(issue.afterFiles[16].date)}} </label>  \n                                    <div *ngIf=\"getAfterFile && issue.afterFiles[16] && !issue.afterFiles[16].permiso\" class=\"clearfix\"></div>\n\n                                      <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                                        <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[17] && !issue.afterFiles[17].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[17].img}}\">\n                                          <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                                            <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                                            <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                                          </svg>\n                                          {{issue.afterFiles[17].img}}</a>\n                                        </div>\n                                        <div *ngIf=\"getAfterFile && issue.afterFiles[17] && !issue.afterFiles[17].permiso\" class=\"clearfix\"></div>\n                                        <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[17] && !issue.afterFiles[17].permiso\">{{momentTime(issue.afterFiles[17].date)}} </label>  \n                                        <div *ngIf=\"getAfterFile && issue.afterFiles[17] && !issue.afterFiles[17].permiso\" class=\"clearfix\"></div>\n\n                                        <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                                          <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[18] && !issue.afterFiles[18].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[18].img}}\">\n                                            <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                                              <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                                              <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                                            </svg>\n                                            {{issue.afterFiles[18].img}}</a>\n                                          </div>\n                                          <div *ngIf=\"getAfterFile && issue.afterFiles[18] && !issue.afterFiles[18].permiso\" class=\"clearfix\"></div>\n                                          <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[18] && !issue.afterFiles[18].permiso\">{{momentTime(issue.afterFiles[18].date)}} </label>  \n                                          <div *ngIf=\"getAfterFile && issue.afterFiles[18] && !issue.afterFiles[18].permiso\" class=\"clearfix\"></div>\n\n                                        <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                                          <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[19] && !issue.afterFiles[19].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[19].img}}\">\n                                            <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                                              <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                                              <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                                            </svg>\n                                            {{issue.afterFiles[19].img}}</a>\n                                          </div>\n                                          <div *ngIf=\"getAfterFile && issue.afterFiles[19] && !issue.afterFiles[19].permiso\" class=\"clearfix\"></div>\n                                          <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[19] && !issue.afterFiles[19].permiso\">{{momentTime(issue.afterFiles[19].date)}} </label>  \n                                          <div *ngIf=\"getAfterFile && issue.afterFiles[19] && !issue.afterFiles[19].permiso\" class=\"clearfix\"></div>\n\n                                          <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                                            <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[20] && !issue.afterFiles[20].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[20].img}}\">\n                                              <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                                                <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                                                <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                                              </svg>\n                                              {{issue.afterFiles[20].img}}</a>\n                                            </div>\n                                            <div *ngIf=\"getAfterFile && issue.afterFiles[20] && !issue.afterFiles[20].permiso\" class=\"clearfix\"></div>\n                                            <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[20] && !issue.afterFiles[20].permiso\">{{momentTime(issue.afterFiles[20].date)}} </label>  \n                                            <div *ngIf=\"getAfterFile && issue.afterFiles[20] && !issue.afterFiles[20].permiso\" class=\"clearfix\"></div>\n\n                                            <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                                              <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[21] && !issue.afterFiles[21].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[21].img}}\">\n                                                <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                                                  <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                                                  <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                                                </svg>\n                                                {{issue.afterFiles[21].img}}</a>\n                                              </div>\n                                              <div *ngIf=\"getAfterFile && issue.afterFiles[21] && !issue.afterFiles[21].permiso\" class=\"clearfix\"></div>\n                                              <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[21] && !issue.afterFiles[21].permiso\">{{momentTime(issue.afterFiles[21].date)}} </label>  \n                                              <div *ngIf=\"getAfterFile && issue.afterFiles[21] && !issue.afterFiles[21].permiso\" class=\"clearfix\"></div>\n\n                                              <div style=\"margin-top: 2%; background-color: #cbcbcb; width: 34%; font-size: 119%\" >\n                                                <a style=\"margin-left: 5%;\" *ngIf=\"getAfterFile && issue.afterFiles[22] && !issue.afterFiles[22].permiso\" href=\"{{url + 'requests/getImage/' + issue.afterFiles[22].img}}\">\n                                                  <svg style=\"margin-bottom: 2%;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-box-arrow-in-down\" viewBox=\"0 0 16 16\">\n                                                    <path fill-rule=\"evenodd\" d=\"M3.5 6a.5.5 0 0 0-.5.5v8a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5v-8a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 1 0-1h2A1.5 1.5 0 0 1 14 6.5v8a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 14.5v-8A1.5 1.5 0 0 1 3.5 5h2a.5.5 0 0 1 0 1h-2z\"/>\n                                                    <path fill-rule=\"evenodd\" d=\"M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z\"/>\n                                                  </svg>\n                                                  {{issue.afterFiles[22].img}}</a>\n                                                </div>\n                                                <div *ngIf=\"getAfterFile && issue.afterFiles[22] && !issue.afterFiles[22].permiso\" class=\"clearfix\"></div>\n                                                <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[22] && !issue.afterFiles[22].permiso\">{{momentTime(issue.afterFiles[22].date)}} </label>  \n                                                <div *ngIf=\"getAfterFile && issue.afterFiles[22] && !issue.afterFiles[22].permiso\" class=\"clearfix\"></div>\n    </section>\n\n\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[0] && issue.afterFiles[0].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[0].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[0] && issue.afterFiles[0].permiso == 'si'\">{{momentTime(issue.afterFiles[0].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[1] && issue.afterFiles[1].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[1].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[1] && issue.afterFiles[1].permiso == 'si'\">{{momentTime(issue.afterFiles[1].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[2] && issue.afterFiles[2].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[2].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[2] && issue.afterFiles[2].permiso == 'si'\">{{momentTime(issue.afterFiles[2].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[3] && issue.afterFiles[3].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[3].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[3] && issue.afterFiles[3].permiso == 'si'\">{{momentTime(issue.afterFiles[3].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[4] && issue.afterFiles[4].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[4].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[4] && issue.afterFiles[4].permiso == 'si'\">{{momentTime(issue.afterFiles[4].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[5] && issue.afterFiles[5].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[5].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[5] && issue.afterFiles[5].permiso == 'si'\">{{momentTime(issue.afterFiles[5].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[6] && issue.afterFiles[6].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[6].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[6] && issue.afterFiles[6].permiso == 'si'\">{{momentTime(issue.afterFiles[6].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[7] && issue.afterFiles[7].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[7].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[7] && issue.afterFiles[7].permiso == 'si'\">{{momentTime(issue.afterFiles[7].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[8] && issue.afterFiles[8].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[8].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[8] && issue.afterFiles[8].permiso == 'si'\">{{momentTime(issue.afterFiles[8].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[9] && issue.afterFiles[9].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[9].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[9] && issue.afterFiles[9].permiso == 'si'\">{{momentTime(issue.afterFiles[9].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[10] && issue.afterFiles[10].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[10].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[10] && issue.afterFiles[10].permiso == 'si'\">{{momentTime(issue.afterFiles[10].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[11] && issue.afterFiles[11].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[11].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[11] && issue.afterFiles[11].permiso == 'si'\">{{momentTime(issue.afterFiles[11].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[12] && issue.afterFiles[12].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[12].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[12] && issue.afterFiles[12].permiso == 'si'\">{{momentTime(issue.afterFiles[12].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[13] && issue.afterFiles[13].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[13].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[13] && issue.afterFiles[13].permiso == 'si'\">{{momentTime(issue.afterFiles[13].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[14] && issue.afterFiles[14].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[14].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[14] && issue.afterFiles[14].permiso == 'si'\">{{momentTime(issue.afterFiles[14].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[15] && issue.afterFiles[15].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[15].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[15] && issue.afterFiles[15].permiso == 'si'\">{{momentTime(issue.afterFiles[15].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[16] && issue.afterFiles[16].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[16].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[16] && issue.afterFiles[16].permiso == 'si'\">{{momentTime(issue.afterFiles[16].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[17] && issue.afterFiles[17].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[17].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[17] && issue.afterFiles[17].permiso == 'si'\">{{momentTime(issue.afterFiles[17].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[18] && issue.afterFiles[18].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[18].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[18] && issue.afterFiles[18].permiso == 'si'\">{{momentTime(issue.afterFiles[18].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[19] && issue.afterFiles[19].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[19].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[19] && issue.afterFiles[19].permiso == 'si'\">{{momentTime(issue.afterFiles[19].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[20] && issue.afterFiles[20].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[20].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[20] && issue.afterFiles[20].permiso == 'si'\">{{momentTime(issue.afterFiles[20].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[21] && issue.afterFiles[21].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[21].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[21] && issue.afterFiles[21].permiso == 'si'\">{{momentTime(issue.afterFiles[21].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[22] && issue.afterFiles[22].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[22].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[22] && issue.afterFiles[22].permiso == 'si'\">{{momentTime(issue.afterFiles[22].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[23] && issue.afterFiles[23].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[23].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[23] && issue.afterFiles[23].permiso == 'si'\">{{momentTime(issue.afterFiles[23].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[24] && issue.afterFiles[24].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[24].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[24] && issue.afterFiles[24].permiso == 'si'\">{{momentTime(issue.afterFiles[24].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[25] && issue.afterFiles[25].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[25].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[25] && issue.afterFiles[25].permiso == 'si'\">{{momentTime(issue.afterFiles[25].date)}} </label>  \n    <div class=\"clearfix\"></div>\n    <img style=\"margin-top: 2.5%\" width=\"80%\" *ngIf=\"getAfterFile && issue.afterFiles[26] && issue.afterFiles[26].permiso == 'si'\" src=\"{{url + 'requests/getImage/' + issue.afterFiles[26].img}}\"/>\n    <div class=\"clearfix\"></div>\n    <label style=\"text-align: left; color: #0d0d0d; font-weight:30;\" *ngIf=\"getAfterFile && issue.afterFiles[26] && issue.afterFiles[26].permiso == 'si'\">{{momentTime(issue.afterFiles[26].date)}} </label>  \n    <div class=\"clearfix\"></div>\n\n\n  <div *ngIf=\"!getImg && getEvent && eventsAnalyst && !getAfterFile\" class=\"portlet-body form\" style=\"margin-top: 2%; font-size: 110%;\">\n    <div class=\"row\">\n    <div class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" datatable=\"ng\">\n      <thead>\n        <tr>\n          <th style=\"text-align: center; width: 12.5%;\"><a style=\"color: rgb(197, 197, 197);\"> Roll </a></th>\n          <th style=\"text-align: center;\"><a style=\"color: rgb(197, 197, 197);\"> Nombre </a></th>\n          <th style=\"text-align: center;\"><a style=\"color: rgb(197, 197, 197);\"> Email </a></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"odd gradeX\" *ngFor=\"let item of eventsAnalyst; let i = index\" style=\"background-color: rgb(196, 196, 196);\">\n          <td style=\"text-align: center;\"> Analista </td>\n          <td style=\"text-align: center;\"> {{item[0].fname}} {{item[0].lname}}</td>\n          <td style=\"text-align: center;\"> {{item[0].email}} </td>\n        </tr>\n      </tbody>\n    </table>\n    </div>\n  </div>\n  </div>\n\n  <div *ngIf=\"!getImg && getEvent && eventsCopy && !getAfterFile\" class=\"portlet-body form\" style=\"font-size: 110%;\">\n    <div class=\"row\">\n    <div class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" datatable=\"ng\">\n      <thead>\n        <tr>\n          <th style=\"text-align: center; width: 12.5%;\"><a style=\"color: rgb(197, 197, 197);\"> Roll</a></th>\n          <th style=\"text-align: center;\"><a style=\"color: rgb(197, 197, 197);\"> Nombre </a></th>\n          <th style=\"text-align: center;\"><a style=\"color: rgb(197, 197, 197);\"> Email </a></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"odd gradeX\" *ngFor=\"let item of eventsCopy; let i = index\" style=\"background-color: rgb(196, 196, 196);\">\n          <td style=\"text-align: center;\"> Copiados </td>\n          <td style=\"text-align: center;\"> {{item[0].fname}} {{item[0].lname}}</td>\n          <td style=\"text-align: center;\"> {{item[0].email}} </td>\n        </tr>\n      </tbody>\n    </table>\n    </div>\n  </div>\n  </div>\n\n\n\n  <div class=\"col-md-5\" style=\"margin-top: 20px; margin-bottom: 20px;\" *ngIf=\"!getImg && !getEvent && !getAfterFile\">\n\n    <div class=\"card\" style=\"width: 100%; height: 100%; background-color: #f7f7f7;\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <label style=\"text-align: left; margin-top: -30px; margin-left: 20px;\"><h4>Información General</h4></label>\n\n            <div>\n            <div class=\"col-md-4\">\n            <label style=\"text-align: left; color: #575757; font-weight:0;\">Servicio:</label>\n              </div>\n              <div class=\"col-md-8\">\n            <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.service}} </label>      \n              </div>\n            </div>\n\n            <div style=\"margin-top: 3px;\">\n              <div class=\"col-md-4\">\n              <label style=\"text-align: left; color: #575757; font-weight:0;\">Subcategoría:</label>\n              </div>\n              <div class=\"col-md-8\">\n              <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.subCategory}} </label>  \n              </div>    \n              </div>\n\n              <div style=\"margin-top: 10px;\">\n                <div class=\"col-md-4\">\n          <label style=\"text-align: left; color: #575757; font-weight:0;\">Sucursal:</label>\n            </div>\n            <div class=\"col-md-8\" style=\"margin-left: -3%; margin-top: -2%;\">\n              <button type=\"button\" class=\"btn\" style=\"color: #2773c3;\" data-toggle=\"modal\" data-target=\"#exampleModal3\">{{issue.reportBy.name}}</button>\n            </div>    \n          </div>\n\n          <div style=\"margin-top: 3px;\">\n            <div class=\"col-md-4\">\n            <label style=\"text-align: left; color: #575757; font-weight:0;\">Reportado por:</label>\n            </div>\n            <div class=\"col-md-8\">\n            <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.manager}} </label>  \n            </div>    \n            </div>\n\n            <div style=\"margin-top: 10px;\">\n              <div class=\"col-md-4\">\n              <label style=\"text-align: left; color: #575757; font-weight:0;\">Estatus:</label>\n              </div>\n              <div class=\"col-md-8\">\n              <label style=\"text-align: left; color: #747474; font-weight:30;\"> <a *ngIf=\"issue.status && issue.statusCallCenter !='SolucionadoCallCenter' && issue.statusCallCenter !='AutoSolucionado' && issue.statusCallCenter !='SolucionadoPreventivoCallCenter'\">{{issue.status}} </a> <a *ngIf=\"!issue.status || issue.statusCallCenter =='SolucionadoCallCenter' || issue.statusCallCenter =='AutoSolucionado' || issue.statusCallCenter || 'SolucionadoPreventivoCallCenter'\">{{issue.statusCallCenter}}</a></label>     \n              </div> \n              </div>\n\n              <div style=\"margin-top: 10px;\" *ngIf=\"issue.statusCallCenter && issue.statusCallCenter=='AsignadoCallCenter'\">\n                <div class=\"col-md-4\">\n                <label style=\"text-align: left; color: #575757; font-weight:0;\">Estatus CallC:</label>\n                </div>\n                <div class=\"col-md-8\">\n                <label style=\"text-align: left; color: #747474; font-weight:30;\"> <a *ngIf=\"issue.status\">{{issue.statusCallCenter}} </a> <a *ngIf=\"!issue.status\">{{issue.statusCallCenter}}</a></label>     \n                </div> \n                </div>\n\n              <div style=\"margin-top: 10px;\">\n                <div class=\"col-md-4\">\n                <label style=\"text-align: left; color: #575757; font-weight:0;\">SLA:</label>\n                </div>\n                <div class=\"col-md-8\">\n                <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.issue.sla}} h</label>\n                </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"(issue.issue.slaCallCenter && !issue.status) || identity.type=='callCenter'\">\n                  <div class=\"col-md-4\">\n                  <label style=\"text-align: left; color: #575757; font-weight:0;\">SLA CallC:</label>\n                  </div>\n                  <div class=\"col-md-8\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.issue.slaCallCenter}} h</label>\n                  </div> \n                  </div>\n\n              <div style=\"margin-top: 10px;\" >\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #575757; font-weight:0;\">Descripción:</label>\n                </div>\n                <div class=\"col-md-12\">\n                <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.description}} </label>  \n                </div>    \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.motivoAsignadoCallCenter\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Descripción de Call Center:</label>\n                  </div>\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.motivoAsignadoCallCenter}} </label>  \n                  </div>    \n                  </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.menuboards\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">{{menus}} </label>\n                  </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.cantBolsasComprobantes\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">{{cantBolsasComprobantes}} </label>\n                  </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.dt\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\"> Se reinicio el DT?: {{issue.dt}} </label>\n                  </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.kds\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">{{kds}} </label>\n                  </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.pos\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">{{pos}} </label>\n                  </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.medidas\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">{{medidas}} </label>\n                  </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.email\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\"> email: {{issue.email}} </label>\n                  </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.numReport\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\"> Número de reporte: {{issue.numReport}} </label>\n                  </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.numOrden\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\"> Número de orden: {{issue.numOrden}} </label>\n                  </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.producto\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\"> Producto: {{issue.producto}} </label>\n                  </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.lote\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\"> Lote: {{issue.lote}} </label>\n                  </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.cantidad\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\"> Cantidad: {{issue.cantidad}} </label>\n                  </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.numSerie\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\"> Número de serie: {{issue.numSerie}} </label>\n                  </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.marca\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\"> Marca: {{issue.marca}} </label>\n                  </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.nombreTimMember\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\"> Nombre del Tim-Member: {{issue.nombreTimMember}} </label>\n                  </div> \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.numNomina\">\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\"> Número de nómina: {{issue.numNomina}} </label>\n                  </div> \n                </div>\n\n\n        </div>\n      </div>\n    </div>\n\n\n    <div class=\"card\" style=\"width: 100%; height: 100%; background-color: #f7f7f7; margin-top: 20px;\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <label style=\"text-align: left; margin-top: -30px; margin-left: 20px;\"><h4>Contactos</h4></label>\n\n          <div style=\"margin-top: 4px;\">\n            <div>\n              <div class=\"col-md-4\">\n              <label style=\"text-align: left; color: #575757; font-weight:0;\">Analista:</label>\n              </div>\n              <div class=\"col-md-8\">\n                <label style=\"text-align: left; color: #747474; font-weight:30;\" *ngIf=\"issue.analyst\">{{issue.analyst.fname}} {{issue.analyst.lname}} </label>     \n                <label style=\"text-align: left; color: #747474; font-weight:30;\" *ngIf=\"!issue.status\"> Call Center</label>     \n              </div> \n              </div>\n\n          </div>\n\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"issue && issue.encuesta && issue.encuesta!=''\" class=\"card\" style=\"width: 100%; height: 100%; background-color: #f7f7f7; margin-top: 20px;\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div style=\"margin-top: 4px;\">\n            <div>\n              <div class=\"col-md-7\">\n                <label style=\"text-align: left; color: #575757; font-weight:0;\">Encuesta de satisfacción: </label>\n              </div>\n              <div class=\"col-md-3\">\n                <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.encuesta}} </label>     \n              </div> \n            </div>\n            <div class=\"clearfix\"></div>\n            <div style=\"margin-left: 4%;\" *ngIf=\"issue.encuestaComents && issue.encuestaComents!=''\">\n              <label style=\"color: #575757; font-weight:30;\">{{issue.encuestaComents}}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div style=\"margin-top: 4px;\" *ngIf=\"identity.type != 'local' && permiso=='si' && issue.analyst && (issue.status == 'Asignado' || issue.status == 'Pendiente')\">\n      <button data-toggle=\"modal\" data-target=\"#exampleModalReAsignar\" type=\"button\" class=\"btn btn-secondary\" style=\" font-size: 100%;\" (click)=\"getReAsignar(issue)\">Re-Asignar</button>\n    </div>\n\n  </div>\n\n  <div class=\"col-md-4\" style=\"margin-top: 20px; margin-bottom: 20px;\"  *ngIf=\"!getImg && !getEvent && !getAfterFile\">\n    <div class=\"card\" style=\"width: 100%; height: 100%; background-color: #f7f7f7;\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <label style=\"text-align: left; margin-top: -30px; margin-left: 20px;\"><h4>Fechas</h4></label>\n          <div>\n\n            <div>\n              <div class=\"col-md-5\">\n              <label style=\"text-align: left; color: #575757; font-weight:0;\">Fecha de inicio: </label>\n              </div>\n              <div class=\"col-md-7\">\n              <label style=\"text-align: left; color: #747474; font-weight:30;\">{{momentTime(issue.dateOfReport1)}} </label>     \n              </div> \n              </div>\n              <div class=\"clearfix\"></div>\n\n              <div *ngIf=\"issue.dateAssignmentCallCenter\">\n                <div class=\"col-md-5\" style=\"margin-top: 11px;\">\n                <label style=\"text-align: left; color: #575757; font-weight:0;\">Fecha asignacionCC:</label>\n                </div>\n                <div class=\"col-md-7\" style=\"margin-top: 15px;\">\n                <label style=\"text-align: left; color: #747474; font-weight:30;\">{{momentTime(issue.dateAssignmentCallCenter)}} </label>     \n                </div> \n                </div>\n                <div class=\"clearfix\"></div>\n\n              <div>\n                <div class=\"col-md-5\" style=\"margin-top: 11px;\">\n                <label style=\"text-align: left; color: #575757; font-weight:0;\">Última actualización: </label>\n                </div>\n                <div class=\"col-md-7\" style=\"margin-top: 14px;\">\n                <label style=\"text-align: left; color: #747474; font-weight:30;\">{{momentTime(issue.dateLastUpdate)}} </label>     \n                </div> \n                </div>\n                <div class=\"clearfix\"></div>\n\n\n\n              <div>\n                <div class=\"col-md-5\" style=\"margin-top: 11px;\">\n                <label style=\"text-align: left; color: #575757; font-weight:0;\">Fecha de asignacion:</label>\n                </div>\n                <div class=\"col-md-7\" style=\"margin-top: 15px;\">\n                <label style=\"text-align: left; color: #747474; font-weight:30;\">{{momentTime(issue.dateAssignment)}} </label>     \n                </div> \n                </div>\n                <div class=\"clearfix\"></div>\n\n                <div  *ngIf=\"issue.datePendieng && issue.datePendieng!=''\">\n                  <div class=\"col-md-5\" style=\"margin-top: 11px;\">\n                  <label style=\"text-align: left; color: #575757; font-weight:0;\">Fecha pendiente:</label>\n                  </div>\n                  <div class=\"col-md-7\" style=\"margin-top: 12px;\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">{{momentTime(issue.datePendieng)}} </label>     \n                  </div> \n                  </div>\n                  <div class=\"clearfix\"></div>\n\n                  <div  *ngIf=\"issue.pendingCallCenter && issue.pendingCallCenter!=''\">\n                    <div class=\"col-md-5\" style=\"margin-top: 11px;\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Fecha pendienteCC:</label>\n                    </div>\n                    <div class=\"col-md-7\" style=\"margin-top: 12px;\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">{{momentTime(issue.datePendiengCallCenter)}} </label>     \n                    </div> \n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                  <div  *ngIf=\"issue.dateSolution && issue.dateSolution!=''\">\n                    <div class=\"col-md-5\" style=\"margin-top: 11px;\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Fecha Solucionada:</label>\n                    </div>\n                    <div class=\"col-md-7\" style=\"margin-top: 12px;\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">{{momentTime(issue.dateSolution)}} </label>     \n                    </div> \n                    </div>\n\n                    <div  *ngIf=\"issue.dateSolutionCallCenter && issue.dateSolutionCallCenter!=''\">\n                      <div class=\"col-md-5\" style=\"margin-top: 11px;\">\n                      <label style=\"text-align: left; color: #575757; font-weight:0;\">Fecha SolucionadaCC:</label>\n                      </div>\n                      <div class=\"col-md-7\" style=\"margin-top: 12px;\">\n                      <label style=\"text-align: left; color: #747474; font-weight:30;\">{{momentTime(issue.dateSolutionCallCenter)}} </label>     \n                      </div> \n                      </div>\n          </div>\n          <div class=\"clearfix\"></div>\n\n          <div style=\"margin-top: 10px;\" *ngIf=\"issue.pending && issue.pending!=''\">\n            <div class=\"col-md-12\">\n              <label style=\"text-align: left; color: #575757; font-weight:0;\">Motivo pendiente:</label>\n            </div>\n            <div class=\"col-md-12\">\n            <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.pending}} </label> \n            <button data-toggle=\"modal\" data-target=\"#exampleModalEdit\" type=\"button\" class=\"btn btn-secondary\" *ngIf=\"issue.status != 'Solucionado' && issue.status != 'AutoSolucionado' && issue.status != 'SolucionadoPreventivo'  && issue.statusCallCenter != 'SolucionadoCallCenter' && issue.statusCallCenter != 'AutoSolucionado' && issue.statusCallCenter != 'SolucionadoPreventivoCallCenter' && permiso == 'si' \"> Modificar Pendiente </button> \n            </div>    \n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div style=\"margin-top: 10px;\" *ngIf=\"issue.pendingCallCenter && issue.pendingCallCenter!=''\">\n              <div class=\"col-md-12\">\n                <label style=\"text-align: left; color: #575757; font-weight:0;\">Motivo pendienteCC:</label>\n              </div>\n              <div class=\"col-md-12\">\n              <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.pendingCallCenter}} </label> \n              <button data-toggle=\"modal\" data-target=\"#exampleModalEditCC\" type=\"button\" class=\"btn btn-secondary\" *ngIf=\"issue.status != 'Solucionado' && issue.status != 'AutoSolucionado' && issue.status != 'SolucionadoPreventivo'  && issue.statusCallCenter != 'SolucionadoCallCenter' && issue.statusCallCenter != 'AutoSolucionado'  && issue.statusCallCenter != 'SolucionadoPreventivoCallCenter' && identity.type=='callCenter' \"> Modificar Pendiente CC </button> \n              </div>    \n              </div>\n\n\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-md-3\" style=\"margin-top: 20px; margin-bottom: 10px;\" *ngIf=\"!getImg && !getEvent && !getAfterFile\">\n    <div class=\"card\" style=\"width: 100%; height: 100%; background-color: #f7f7f7;\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <label style=\"text-align: left; margin-top: -30px; margin-left: 20px;\"><h4>Reporte SLA</h4></label>\n          <div>\n\n              <div>\n                <div class=\"col-md-5\">\n                <label style=\"text-align: left; color: #575757; font-weight:0;\">Tiempo utilizado: </label>\n                </div>\n                <div class=\"col-md-7\">\n                <label style=\"text-align: left; color: #747474; font-weight:30;\" *ngIf=\"((issue.dateSolution && issue.dateSolution!='') || (issue.dateSolutionCallCenter && issue.dateSolutionCallCenter!=''))\">{{issue.solutionTime[0].day + \" d \" + issue.solutionTime[0].hours + \" h \" + issue.solutionTime[0].minutes + \" m\"}} </label>     \n                <label style=\"text-align: left; color: #747474; font-weight:30;\" *ngIf=\"(!issue.dateSolution || issue.dateSolution=='') && (!issue.dateSolutionCallCenter || issue.dateSolutionCallCenter=='')\">{{issue.tiempos}} </label>     \n                </div> \n                </div>\n                <div class=\"clearfix\"></div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-md-3\" style=\"margin-top: 10px; margin-bottom: 10px;\" *ngIf=\"((issue.dateSolution && issue.dateSolution!='') || (issue.dateSolutionCallCenter && issue.dateSolutionCallCenter!='')) && (!getImg && !getEvent && !getAfterFile)\">\n    <div class=\"card\" style=\"width: 100%; height: 100%; background-color: #f7f7f7;\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <label style=\"text-align: left; margin-top: -30px; margin-left: 20px;\"><h4>Solución</h4></label>\n          <div>\n\n            <div *ngIf=\"issue.solution && issue.solution!=''\">\n              <div class=\"col-md-5\">\n              <label style=\"text-align: left; color: #575757; font-weight:0;\">Fecha Solución: </label>\n              </div>\n              <div class=\"col-md-7\">\n              <label style=\"text-align: left; color: #747474; font-weight:30;\">{{momentTime(issue.dateSolution)}} </label>     \n              </div> \n              </div>\n              <div *ngIf=\"issue.dateSolutionCallCenter && issue.dateSolutionCallCenter!=''\">\n                <div class=\"col-md-5\">\n                <label style=\"text-align: left; color: #575757; font-weight:0;\">Fecha SoluciónCC: </label>\n                </div>\n                <div class=\"col-md-7\">\n                <label style=\"text-align: left; color: #747474; font-weight:30;\">{{momentTime(issue.dateSolutionCallCenter)}} </label>     \n                </div> \n                </div>\n              <div class=\"clearfix\"></div>\n              <div>\n\n                <div class=\"col-md-5\">\n                <label style=\"text-align: left; color: #575757; font-weight:0;\">Tiempo: </label>\n                </div>\n                <div class=\"col-md-7\">\n                <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.solutionTime[0].day + \" d \" + issue.solutionTime[0].hours + \" h \" + issue.solutionTime[0].minutes + \" m\"}} </label>     \n                </div> \n                </div>\n                <div class=\"clearfix\"></div>\n\n              <div style=\"margin-top: 10px;\" *ngIf=\"issue.solution && issue.solution!=''\">\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #575757; font-weight:0;\">Solución:</label>\n                </div>\n                <div class=\"col-md-12\">\n                <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.solution}} </label>  \n                </div>    \n                </div>\n\n                <div style=\"margin-top: 10px;\" *ngIf=\"issue.solutionCallCenter && issue.solutionCallCenter!=''\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Solución CC:</label>\n                  </div>\n                  <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.solutionCallCenter}} </label>  \n                  </div>    \n                  </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-md-3\" style=\"margin-top: 10px; margin-bottom: 10px;\" *ngIf=\"(((issue.dateSolution && issue.dateSolution!='') || (issue.dateSolutionCallCenter && issue.dateSolutionCallCenter!='')) && (!getImg && !getEvent && !getAfterFile)) && ((identity.type=='admin' || identity.type=='superAdmin' ) && (identity.department._id=='62f2c60e5b1ab6024e9fdfb6')) \">\n    <div class=\"card\" style=\"width: 100%; height: 100%; background-color: #f7f7f7;\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <label style=\"text-align: left; margin-top: -30px; margin-left: 20px;\"><h4>Estatus Extra</h4></label>\n          <div>\n            <a *ngIf=\"!issue.statusExtra\">\n              <button type=\"button\" class=\"btn\" style=\"color: #ca243d; margin-top: -6%;\" data-toggle=\"modal\" data-target=\"#exampleModal11\" (click)=\"changeStatusExtra(issue,'Oportunidad Operativa')\" ><u> Oportunidad Operativa </u></button>\n              <button type=\"button\" class=\"btn\" style=\"color: #459113; margin-top: -6%;\" data-toggle=\"modal\" data-target=\"#exampleModal11\" (click)=\"changeStatusExtra(issue,'Naturaleza del equipo')\"><u> Naturaleza del equipo </u></button>\n              <button type=\"button\" class=\"btn\" style=\"color: #2869bd;  margin-top: -6%;\" data-toggle=\"modal\" data-target=\"#exampleModal11\" (click)=\"changeStatusExtra(issue,'Instalación')\"><u> Instalación </u></button>  \n            </a>\n            <a *ngIf=\"issue.statusExtra\">\n              {{issue.statusExtra}}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-md-4\" *ngIf=\"(!issue.pending || issue.pending=='') && (!getImg && !getEvent && !getAfterFile)\">\n  </div>\n\n  <div class=\"col-md-3\" style=\"margin-top: 10px; margin-bottom: 10px;\" *ngIf=\"(issue.reaperturado && issue.reaperturado!='') && (!getImg && !getEvent && !getAfterFile)\">\n    <div class=\"card\" style=\"width: 100%; height: 100%; background-color: #f7f7f7;\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <label style=\"text-align: left; margin-top: -30px; margin-left: 20px;\"><h4>Reaperturado</h4></label>\n          <div>\n\n            <div>\n              <div class=\"col-md-5\">\n              <label style=\"text-align: left; color: #575757; font-weight:0; font-size: 92%\">Fecha Reapertura: </label>\n              </div>\n              <div class=\"col-md-7\">\n              <label style=\"text-align: left; color: #747474; font-weight:30; font-size: 90%;\">{{momentTime(issue.reaperturado[issue.reaperturado.length-1].date)}} </label>     \n              </div> \n              </div>\n              <div class=\"clearfix\"></div>\n\n              <div style=\"margin-top: 10px;\" *ngIf=\"(issue.solution && issue.solution!='') || (issue.solutionCallCenter && issue.solutionCallCenter!='')\">\n                <div class=\"col-md-12\">\n                  <label style=\"text-align: left; color: #575757; font-weight:0;\">Motivo:</label>\n                </div>\n                <div class=\"col-md-12\">\n                <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.reaperturado[issue.reaperturado.length-1].note}} </label>  \n                </div>    \n                </div>\n                <div class=\"clearfix\"></div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n\n\n  <div class=\"col-md-12\" style=\"margin-top: 20px;\" *ngFor=\"let item of issue.notes; let i = index\">\n    <div class=\"col-md-12\" *ngIf=\"item.esperaRespuesta && item.esperaRespuesta==true\">\n      <textarea name=\"note\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"1\" cols=\"1\" [disabled]=\"true\">{{momentTime(item.dateOfNote)}} : {{item.noteBy}}     -- URGENTE RESPONDER *</textarea>\n  </div>\n  <div class=\"col-md-12\" *ngIf=\"!item.esperaRespuesta || item.esperaRespuesta==false\">\n    <textarea name=\"note\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"1\" cols=\"1\" [disabled]=\"true\">{{momentTime(item.dateOfNote)}} : {{item.noteBy}}</textarea>\n</div>\n    <div class=\"col-md-12\" style=\"margin-top: 2px;\">\n      <textarea name=\"note\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\" [disabled]=\"true\"> {{item.note}} </textarea>\n  </div>\n    </div>\n\n<div class=\"col-md-12\" style=\"margin-top: 40px;\" *ngIf=\"( issue.status && issue.status != 'Solucionado' && issue.status != 'AutoSolucionado' && issue.status != 'SolucionadoPreventivo') || (issue.statusCallCenter && issue.statusCallCenter != 'SolucionadoCallCenter' && issue.statusCallCenter != 'AutoSolucionado' && issue.statusCallCenter != 'SolucionadoPreventivoCallCenter')\">\n  <label style=\"text-align: left; color: #575757; font-weight:0;\" *ngIf=\"issue.status!='Solucionado' && issue.status!='AutoSolucionado' && issue.status!='SolucionadoPreventivo'\">Bitácora pública </label>\n  <textarea *ngIf=\"issue.status == 'Nuevo' && permiso=='si'\" #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.note\" class=\"form-control\" placeholder=\"Para escribir Asignate el timcket\" rows=\"5\" cols=\"40\" [disabled]=\"true\"></textarea>\n  <textarea *ngIf=\"(issue.status != 'Nuevo' || permiso=='no') &&  issue.status!='Solucionado' &&  issue.status!='AutoSolucionado' && issue.status!='SolucionadoPreventivo' \" #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.note\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n  <div class=\"col-md-3\"  *ngIf=\"issue.status!='Solucionado' && issue.status!='AutoSolucionado' && issue.status!='SolucionadoPreventivo'\">\n    <input *ngIf=\"!fileToUpload1\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent1($event)\">\n    <label *ngIf=\"fileToUpload1\" style=\"text-align: left; margin-top: 5px;\">{{newName1}}</label>\n      <button *ngIf=\"fileToUpload1\" (click)=\"imgCancel1()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n    </div>\n    <div *ngIf=\"fileToUpload1\" class=\"col-md-3\" >\n      <input *ngIf=\"!fileToUpload2\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent2($event)\">\n      <label *ngIf=\"fileToUpload2\" style=\"text-align: left; margin-top: 5px;\">{{newName2}}</label>\n        <button *ngIf=\"fileToUpload2\" (click)=\"imgCancel2()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n      </div>\n      <div *ngIf=\"fileToUpload1 && fileToUpload2\" class=\"col-md-3\" >\n        <input *ngIf=\"!fileToUpload3\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent3($event)\">\n        <label *ngIf=\"fileToUpload3\" style=\"text-align: left; margin-top: 5px;\">{{newName3}}</label>\n          <button *ngIf=\"fileToUpload3\" (click)=\"imgCancel3()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n        </div>\n        <div *ngIf=\"fileToUpload1 && fileToUpload2 && fileToUpload3\" class=\"col-md-3\" >\n          <input *ngIf=\"!fileToUpload4\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent4($event)\">\n          <label *ngIf=\"fileToUpload4\" style=\"text-align: left; margin-top: 5px;\">{{newName4}}</label>\n            <button *ngIf=\"fileToUpload4\" (click)=\"imgCancel4()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n          </div>\n          <div *ngIf=\"fileToUpload1 && fileToUpload2 && fileToUpload3 && fileToUpload4\" class=\"col-md-3\" >\n            <input *ngIf=\"!fileToUpload5\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent5($event)\">\n            <label *ngIf=\"fileToUpload5\" style=\"text-align: left; margin-top: 5px;\">{{newName5}}</label>\n              <button *ngIf=\"fileToUpload5\" (click)=\"imgCancel5()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n            </div>\n</div>\n\n<div class=\"col-md-12\">\n  <div *ngIf=\"identity.type!='local' && permiso!='si' && (issue.status !='Solucionado' && issue.status !='SolucionadoPreventivo' && issue.status !='AutoSolucionado' && issue.statusCallCenter !='SolucionadoCallCenter' && issue.statusCallCenter !='AutoSolucionado' && issue.statusCallCenter !='SolucionadoPreventivoCallCenter' ) \" style=\"text-align: start; margin-top: 1%;\" class=\"col-md-8\">\n    <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"issue.esperaRespuesta\"> <label>A la espera de respuesta de sucursal <a style=\"color: red;\">( Solo se marca si estás esperando una respuesta de sucursal )</a></label>\n  </div>\n  <div *ngIf=\"permiso=='si' && ( (issue.analyst && issue.status !='Solucionado' && issue.status !='AutoSolucionado' && issue.status !='SolucionadoPreventivo') && (issue.statusCallCenter !='SolucionadoCallCenter' && issue.statusCallCenter !='AutoSolucionado' && issue.statusCallCenter !='SolucionadoPreventivoCallCenter' ))\" style=\"text-align: start; margin-top: 1%;\" class=\"col-md-8\">\n    <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"issue.esperaRespuesta\"> <label>A la espera de respuesta de sucursal <a style=\"color: red;\">( Solo se marca si estás esperando una respuesta de sucursal )</a></label>\n  </div>\n  <div *ngIf=\"permiso=='si' && !issue.analist && ( (!issue.status && !issue.status !='Solucionado' && !issue.status !='AutoSolucionado' && issue.status !='SolucionadoPreventivo') && (issue.statusCallCenter !='SolucionadoCallCenter' && issue.statusCallCenter !='AutoSolucionado' && issue.statusCallCenter !='SolucionadoPreventivoCallCenter' ))\" style=\"text-align: start; margin-top: 1%;\" class=\"col-md-8\">\n    <input type=\"checkbox\" #name=\"ngModel\" name=\"foto\" [(ngModel)]=\"issue.esperaRespuesta\"> <label>A la espera de respuesta de sucursal <a style=\"color: red;\">( Solo se marca si estás esperando una respuesta de sucursal )</a></label>\n  </div>\n  <div class=\"clearfix\"></div>\n  <div *ngIf=\"identity.type!='local' && permiso=='si' && (issue.status=='Nuevo')\" class=\"col-md-12\" style=\"margin-left: -20px; margin-top: 20px;\">\n    <button *ngIf=\"issue.statusCallCenter!='SolucionadoCallCenter' && issue.statusCallCenter!='AutoSolucionado' && issue.statusCallCenter!='SolucionadoPreventivoCallCenter'\" type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" style=\"margin-left: 20px;\" (click)=\"asignar(issue)\">Asignar</button>\n  </div>\n  <div class=\"clearfix\"></div>\n\n<div *ngIf=\"permiso!='si' && (issue.status !='Solucionado' && issue.status !='AutoSolucionado' && issue.status !='SolucionadoPreventivo'  && issue.statusCallCenter !='SolucionadoCallCenter' && issue.statusCallCenter !='AutoSolucionado' && issue.statusCallCenter !='SolucionadoPreventivoCallCenter' ) \" style=\"text-align: start; margin-top: 2%\" class=\"col-md-3\">\n  <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" (click)=\"sendMesage(issue)\">Enviar</button>\n</div>\n<div *ngIf=\"permiso=='si' && ( (issue.analyst && issue.status !='Solucionado' && issue.status !='AutoSolucionado' && issue.status !='SolucionadoPreventivo') && (issue.statusCallCenter !='SolucionadoCallCenter' && issue.statusCallCenter !='AutoSolucionado' && issue.statusCallCenter !='SolucionadoPreventivoCallCenter' ))\" style=\"text-align: start; margin-top: 2%\" class=\"col-md-3\">\n  <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" (click)=\"sendMesage(issue)\">Enviar</button>\n</div>\n<div *ngIf=\"permiso=='si' && !issue.analist && ( (!issue.status && !issue.status !='Solucionado' && issue.status !='AutoSolucionado' && issue.status !='SolucionadoPreventivo') && (issue.statusCallCenter !='SolucionadoCallCenter' && issue.statusCallCenter !='AutoSolucionado' && issue.statusCallCenter !='SolucionadoPreventivoCallCenter' ))\" style=\"text-align: start; margin-top: 2%\" class=\"col-md-3\">\n  <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" (click)=\"sendMesage(issue)\">Enviar</button>\n</div>\n\n<div style=\"margin-left: 70px;  text-align: end; margin-top: 2%\" class=\"col-md-8\">\n  <button *ngIf=\"permiso=='si' && issue.analyst && issue.status && issue.status!='Nuevo' && issue.status!='Pendiente' && (issue.status && issue.status !='Solucionado' && issue.status !='AutoSolucionado' && issue.status !='SolucionadoPreventivo')\" type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" data-toggle=\"modal\" data-target=\"#exampleModal1\" (click)=\"addPendiente(issue)\">Pendiente</button>\n  <button *ngIf=\"permiso=='si' && issue.analyst && issue.status && issue.status!='Nuevo' && (issue.status && issue.status !='Solucionado' && issue.status !='AutoSolucionado' && issue.status !='SolucionadoPreventivo')\" type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" data-toggle=\"modal\" data-target=\"#exampleModal2\" (click)=\"addSolucionado(issue)\">Marcar como solucionado</button>\n  <button *ngIf=\"permiso!='si' && (identity.type=='local' || identity.type=='areaManager' ) && (issue.status !='Solucionado' && issue.status !='AutoSolucionado' && issue.status !='SolucionadoPreventivo' && issue.statusCallCenter !='SolucionadoCallCenter' && issue.statusCallCenter !='AutoSolucionado' && issue.statusCallCenter !='SolucionadoPreventivoCallCenter') \" type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" data-toggle=\"modal\" data-target=\"#exampleModal2\" (click)=\"addSolucionado(issue)\">Marcar como solucionado</button>\n</div>\n<div *ngIf=\"identity.type=='callCenter' && (issue.statusCallCenter && (issue.statusCallCenter!='SolucionadoCallCenter' && issue.statusCallCenter!='AutoSolucionado' && issue.statusCallCenter!='SolucionadoPreventivoCallCenter') || (issue.status && issue.status!='Solucionado' && issue.status!='AutoSolucionado' && issue.status!='SolucionadoPreventivo'))\" style=\"text-align: center; margin-left: 70px; margin-top: 2%\" class=\"col-md-8\">\n  <button *ngIf=\"!issue.status &&  issue.statusCallCenter!='PendienteCallCenter'\" type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" data-toggle=\"modal\" data-target=\"#exampleModal1Call\" (click)=\"addPendienteCallCenter(issue)\">Pendiente CC</button>\n  <button *ngIf=\"issue.status!='Solucionado' && issue.status!='AutoSolucionado' && issue.status!='SolucionadoPreventivo' && issue.statusCallCenter!='SolucionadoCallCenter' && issue.statusCallCenter!='AutoSolucionado' && issue.statusCallCenter!='SolucionadoPreventivoCallCenter' \" type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" data-toggle=\"modal\" data-target=\"#exampleModal2Call\" (click)=\"addSolucionadoCallCenter(issue)\">Marcar como solucionado CC</button>\n  <button *ngIf=\"!issue.status\" type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #2c7ec1; margin-left: 130px;\" data-toggle=\"modal\" data-target=\"#exampleModal3\" (click)=\"buttonAsignarAnalista(issue)\">Asignar analista CC</button>\n</div>\n\n<div *ngIf=\"issue.department=='62f1c28922e803510baceee6' && permiso=='si' && issue.analyst && issue.status!='Nuevo' && (issue.status && issue.status !='Solucionado' && issue.status !='AutoSolucionado' && issue.status !='SolucionadoPreventivo')\" style=\"text-align: center; margin-top: 6%; margin-left: 0px\">\n  <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #2c7ec1;\" (click)=\"buttonToPreventivo(issue)\">Solucionado Preventivo 1</button>\n</div>\n<div *ngIf=\"issue.department=='62f1c28922e803510baceee6' && permiso!='si' && identity.type=='callCenter' && (issue.status && issue.status !='Solucionado' && issue.status !='AutoSolucionado' && issue.status !='SolucionadoPreventivo' && issue.statusCallCenter!='SolucionadoCallCenter' && issue.statusCallCenter!='AutoSolucionado' && issue.statusCallCenter!='SolucionadoPreventivoCallCenter')\" style=\"text-align: center; margin-top: 6%; margin-left: 0px\">\n  <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #2c7ec1;\" (click)=\"buttonToPreventivo(issue)\">Solucionado Preventivo 2</button>\n</div>\n\n\n</div>\n\n<div class=\"clearfix\"></div>\n\n<div style=\"text-align: right;\" class=\"col-md-3\">\n  <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #2f79b9;\" *ngIf=\"((issue.status && (issue.status == 'Solucionado' || issue.status == 'AutoSolucionado' || issue.status=='SolucionadoPreventivo')) || (issue.statusCallCenter && (issue.statusCallCenter == 'SolucionadoCallCenter' || issue.statusCallCenter == 'AutoSolucionado' || issue.statusCallCenter=='SolucionadoPreventivoCallCenter')) ) && ((identity.type == 'local' && issue.toencuesta == 'si') && issue.encuesta =='' )\" data-toggle=\"modal\" data-target=\"#exampleModalEncuesta\">Encuesta de satisfacción<a style=\"font-size: 70%;\"> *(visible sólo 72h de solucionado)</a></button>\n</div>\n\n<div style=\"text-align: right;\" class=\"col-md-3\">\n  <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #6e6e6e; width: 150px;\" *ngIf=\"issue.status == 'Solucionado' || issue.status == 'AutoSolucionado' || issue.status=='SolucionadoPreventivo' || issue.statusCallCenter == 'SolucionadoCallCenter' || issue.statusCallCenter == 'AutoSolucionado' || issue.statusCallCenter == 'SolucionadoPreventivoCallCenter'\" [routerLink]=\"['/requestClosed']\" [routerLinkActive]=\"['actived']\">Regresar</button>\n</div>\n\n<div style=\"text-align: left;\" class=\"col-md-6\">\n  <button type=\"button\" class=\"btn btn-primary\" style=\"background-color: #2f79b9; width: 300px;\" *ngIf=\"(issue.status == 'Solucionado' || issue.status=='SolucionadoPreventivo' || issue.statusCallCenter == 'SolucionadoCallCenter' || issue.statusCallCenter == 'SolucionadoPreventivoCallCenter') && ((identity.type == 'local' && issue.toDateNow == 'si') || (identity.type == 'superAdmin' || identity.type == 'callCenter' || identity.type == 'areaManager') )\" data-toggle=\"modal\" data-target=\"#exampleModalReaperturar\">Reaperturar<a style=\"font-size: 70%;\"> *(Dentro de las primeras 24h de solucionado)</a></button>\n</div>\n<div class=\"clearfix\"></div>\n\n\n</div>\n\n\n</div>\n</div>\n</div>\n</section>\n\n<div *ngIf=\"load==true\">\n  <div id=\"loader-wrapper\">\n    <div id=\"loader\"></div>\n  </div>\n</div>\n\n\n\n\n<!-- Modal Pendiente -->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModal1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\"> Motivo Pendiente </h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n\n\n        <div class=\"col-md-12\" style=\"margin-top: 40px;\">\n          <label style=\"text-align: left; color: #575757; font-weight:0;\">Escribe el motivo</label>\n          <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.pending\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n        </div>\n\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" (click)=\"pendiente(issue)\">Pendiente</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal PendienteCallCenter -->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModal1Call\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\"> Motivo Pendiente </h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n\n\n        <div class=\"col-md-12\" style=\"margin-top: 40px;\">\n          <label style=\"text-align: left; color: #575757; font-weight:0;\">Escribe el motivo</label>\n          <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.pendingCallCenter\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n        </div>\n\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" (click)=\"pendienteCallCenter(issue)\">Pendiente</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal Marcar-como-solucionado -->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModalEncuesta\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 25%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\"> Encuesta de satisfacción {{issue.codeRequest}}</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">   \n\n        <div class=\"col-md-12\" style=\"margin-top: 0%;\">\n          <label style=\"text-align: left; color: #575757; font-weight:0;\">Seleccione cómo calificaría el servicio de atención, en donde \"5\" es muy satisfecho y \"1\" es muy insatisfecho </label>\n        </div>\n\n        <div>\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"encuesta.cinco\" style=\"margin-right: 1%;\" (ngModelChange)=\"encuesta5(encuesta)\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-emoji-laughing-fill\" viewBox=\"0 0 16 16\" style=\"color: #02A80A\">\n            <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zM7 6.5c0 .501-.164.396-.415.235C6.42 6.629 6.218 6.5 6 6.5c-.218 0-.42.13-.585.235C5.164 6.896 5 7 5 6.5 5 5.672 5.448 5 6 5s1 .672 1 1.5zm5.331 3a1 1 0 0 1 0 1A4.998 4.998 0 0 1 8 13a4.998 4.998 0 0 1-4.33-2.5A1 1 0 0 1 4.535 9h6.93a1 1 0 0 1 .866.5zm-1.746-2.765C10.42 6.629 10.218 6.5 10 6.5c-.218 0-.42.13-.585.235C9.164 6.896 9 7 9 6.5c0-.828.448-1.5 1-1.5s1 .672 1 1.5c0 .501-.164.396-.415.235z\"/>\n          </svg>\n          <label style=\"text-align: left; color: #575757; font-weight:0;\">5 - Muy satisfecho</label>\n        </div>\n\n        <div>\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"encuesta.cuatro\" style=\"margin-right: 1%;\" (ngModelChange)=\"encuesta4(encuesta)\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-emoji-smile-fill\" viewBox=\"0 0 16 16\" style=\"color: #6DCB02\">\n          <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zM7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5zM4.285 9.567a.5.5 0 0 1 .683.183A3.498 3.498 0 0 0 8 11.5a3.498 3.498 0 0 0 3.032-1.75.5.5 0 1 1 .866.5A4.498 4.498 0 0 1 8 12.5a4.498 4.498 0 0 1-3.898-2.25.5.5 0 0 1 .183-.683zM10 8c-.552 0-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5S10.552 8 10 8z\"/>\n        </svg>\n        <label style=\"text-align: left; color: #575757; font-weight:0;\">4 - Satisfecho</label>\n        </div>\n\n        <div>\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"encuesta.tres\" style=\"margin-right: 1%;\" (ngModelChange)=\"encuesta3(encuesta)\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-emoji-neutral-fill\" viewBox=\"0 0 16 16\" style=\"color: #D5D500\">\n          <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zM7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5zm-3 4a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zM10 8c-.552 0-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5S10.552 8 10 8z\"/>\n        </svg>\n        <label style=\"text-align: left; color: #575757; font-weight:0;\">3 - Regular</label>\n        </div>\n\n        <div>\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"encuesta.dos\" style=\"margin-right: 1%;\" (ngModelChange)=\"encuesta2(encuesta)\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-emoji-frown-fill\" viewBox=\"0 0 16 16\" style=\"color: #D5A100\">\n          <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zM7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5zm-2.715 5.933a.5.5 0 0 1-.183-.683A4.498 4.498 0 0 1 8 9.5a4.5 4.5 0 0 1 3.898 2.25.5.5 0 0 1-.866.5A3.498 3.498 0 0 0 8 10.5a3.498 3.498 0 0 0-3.032 1.75.5.5 0 0 1-.683.183zM10 8c-.552 0-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5S10.552 8 10 8z\"/>\n        </svg>\n        <label style=\"text-align: left; color: #575757; font-weight:0;\">2 -  Insatisfecho</label>\n        </div>\n\n        <div>\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"encuesta.uno\" style=\"margin-right: 1%;\" (ngModelChange)=\"encuesta1(encuesta)\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-emoji-angry-fill\" viewBox=\"0 0 16 16\" style=\"color: #D55700;\">\n          <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zM4.053 4.276a.5.5 0 0 1 .67-.223l2 1a.5.5 0 0 1 .166.76c.071.206.111.44.111.687C7 7.328 6.552 8 6 8s-1-.672-1-1.5c0-.408.109-.778.285-1.049l-1.009-.504a.5.5 0 0 1-.223-.67zm.232 8.157a.5.5 0 0 1-.183-.683A4.498 4.498 0 0 1 8 9.5a4.5 4.5 0 0 1 3.898 2.25.5.5 0 1 1-.866.5A3.498 3.498 0 0 0 8 10.5a3.498 3.498 0 0 0-3.032 1.75.5.5 0 0 1-.683.183zM10 8c-.552 0-1-.672-1-1.5 0-.247.04-.48.11-.686a.502.502 0 0 1 .166-.761l2-1a.5.5 0 1 1 .448.894l-1.009.504c.176.27.285.64.285 1.049 0 .828-.448 1.5-1 1.5z\"/>\n        </svg>\n        <label style=\"text-align: left; color: #575757; font-weight:0;\">1 - Muy Insatisfecho</label>\n        </div>\n\n        <div class=\"col-md-12\" style=\"margin-top: 10px;\">\n          <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"encuestaComents\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios  (Opcional)\" rows=\"5\" cols=\"40\"></textarea>\n        </div>\n\n      </div>\n      <div style=\"text-align: center; margin-bottom: 3%;\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #2f79b9; width: 180px;\" data-toggle=\"modal\" data-target=\"#exampleModalEncuesta\" (click)=\"encuestaClik(issue)\">Contestar encuesta</button>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"load==true\">\n    <div id=\"loader-wrapper\">\n      <div id=\"loader\"></div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal Marcar-como-solucionado -->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModal2\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\"> Motivo de Solución </h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n\n\n        <div class=\"col-md-12\" style=\"margin-top: 40px;\">\n          <label style=\"text-align: left; color: #575757; font-weight:0;\">Solución:</label>\n          <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.solution\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n        </div>\n\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" (click)=\"solucionado(issue)\">Marcar como solucionado</button>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"load==true\">\n    <div id=\"loader-wrapper\">\n      <div id=\"loader\"></div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal Marcar-como-solucionado CallCenter -->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModal2Call\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\"> Motivo de Solución </h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n\n\n        <div class=\"col-md-12\" style=\"margin-top: 40px;\">\n          <label style=\"text-align: left; color: #575757; font-weight:0;\">Solución:</label>\n          <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.solutionCallCenter\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n        </div>\n\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" (click)=\"solucionadoCallCenter(issue)\">Marcar como solucionado</button>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"load==true\">\n    <div id=\"loader-wrapper\">\n      <div id=\"loader\"></div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal Asignar analista -->\n<div *ngIf=\"issueAsignar\" class=\"modal fade\" id=\"exampleModal3\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\"> Asignar Analista </h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n\n        <div class=\"col-md-12\">\n\n          <div class=\"col-md-6\" style=\"margin-top: 15px;\" >\n            <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Departamento:</label>\n            <div class=\"col-md-8\">\n                <select class=\"form-control\" #name=\"ngModel\" name=\"select\" (change)=\"searchServices(issue.issueMore.departments)\" [(ngModel)]=\"issue.issueMore.departments\">\n                    <option value=\"\">▼</option>\n                    <option *ngFor=\"let department of departments; let i = index\" (change)=\"searchServices(department)\" value={{department._id}}>{{department.name}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>     \n\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n            <label class=\"col-md-2\" style=\"text-align: right; margin-top: 5px;\">Servicio:</label>\n            <div class=\"col-md-10\">\n                    <select class=\"form-control\" #name=\"ngModel\" name=\"select\" (change)=\"searchsubCategory(issue.issueMore.service)\" [(ngModel)]=\"issue.issueMore.service\" >\n                        <option value=\"\">▼</option>\n                         <option *ngFor=\"let services of service; let i = index\" (change)=\"searchsubCategory(services.service)\" value={{services.service}}>{{services.service}}</option>\n                    </select>\n            </div>\n        </div>\n        <div class=\"clearfix\"></div>\n\n        <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n          <label class=\"col-md-2\" style=\"text-align: right; margin-top: 5px;\">SubCategoria:</label>\n          <div class=\"col-md-10\">\n                  <select class=\"form-control\" #name=\"ngModel\" name=\"select\" (change)=\"subCategoryFinish(issue.issueMore.subcategory)\" [(ngModel)]=\"issue.issueMore.subcategory\" >\n                      <option value=\"\">▼</option>\n                       <option *ngFor=\"let subCategory of subCategorys; let i = index\" (change)=\"subCategoryFinish(subCategory)\" value={{subCategory.subcategory}}>{{subCategory.subcategory}}</option>\n                  </select>\n          </div>\n      </div>\n      <div class=\"clearfix\"></div>\n\n      <div class=\"col-md-12\" style=\"margin-top: 40px;\">\n        <label style=\"text-align: left; color: #575757; font-weight:0;\">Motivo: <a style=\"font-size: 80%; margin-left: 5px;\"> (Opcional)</a></label>\n        <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.motivoAsignadoCallCenter\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n      </div>\n\n    </div>\n\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #2f79b9;\" (click)=\"asignarCallCenter(issueAsignar)\">Asignar analista</button>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"load==true\">\n    <div id=\"loader-wrapper\">\n      <div id=\"loader\"></div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal Reaperturar -->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModalReaperturar\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\"> Motivo para Reaperturar </h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n\n\n        <div class=\"col-md-12\" style=\"margin-top: 40px;\">\n          <label style=\"text-align: left; color: #575757; font-weight:0;\">Motivo:</label>\n          <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.motivoReapertura\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n        </div>\n\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" (click)=\"reaperturar(issue)\">Reaperturar</button>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"load==true\">\n    <div id=\"loader-wrapper\">\n      <div id=\"loader\"></div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal Editar Pendiente -->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModalEdit\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\"> Editar Motivo Pendiente </h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n\n\n        <div class=\"col-md-12\" style=\"margin-top: 40px;\">\n          <label style=\"text-align: left; color: #575757; font-weight:0;\">Escribe el motivo</label>\n          <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.pending\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n        </div>\n\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" (click)=\"editPendiente(issue)\">Editar pendiente</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal Editar Pendiente CC -->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModalEditCC\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\"> Editar Motivo Pendiente </h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n\n\n        <div class=\"col-md-12\" style=\"margin-top: 40px;\">\n          <label style=\"text-align: left; color: #575757; font-weight:0;\">Escribe el motivo</label>\n          <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.pendingCallCenter\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n        </div>\n\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" (click)=\"editPendienteCC(issue)\">Editar pendiente</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal Re-Asignar -->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModalReAsignar\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 50%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: center;\"> Re-Asignarlo </h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">  \n\n        <div *ngIf=\"issue.analyst\" class=\"col-md-6\" style=\"margin-top: 15px;\">\n          <label style=\"text-align: left; margin-top: 5px;\">Analista:</label>\n          <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"issue.newAnalist\" >\n            <option value={{issue.analyst._id}}>{{issue.analyst.fname}} {{issue.analyst.lname}} ▼</option>\n            <option *ngFor=\"let analist of issue.issue.emailToSendAnalist; let i = index\" value={{analist._id}}>{{analist.fname}} {{analist.lname}}</option>\n          </select>\n          <div style=\"margin-top: 20px;\">\n            <button type=\"button\" class=\"btn btn-secondary\" style=\" font-size: 100%;\" (click)=\"reAsignar(issue)\">Re-Asignar</button>\n          </div>\n        </div>\n\n\n\n      </div>\n    </div>\n  </div>\n</div>\n\n\n\n<!-- Modal Estatus Extra -->\n<div *ngIf=\"statusEx\" class=\"modal fade\" id=\"exampleModal11\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 50%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\">{{statusEx.codeRequest}}  ---  {{statusExtype}}</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n\n\n        <div class=\"col-md-12\" style=\"margin-top: 40px;\">\n          <label style=\"text-align: left; color: #575757; font-weight:0;\">Escribe el motivo</label>\n          <textarea #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"statusEx.statusExtraMotivo\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n        </div>\n\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" (click)=\"daleStatus(statusEx, statusExtype)\">Guardar</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal Sucursal -->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModal3\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: center;\"> {{issue.reportBy.name}} </h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n\n        <div class=\"col-md-7\">\n          <div style=\"margin-top: 15px;\">\n            <div class=\"col-md-3\">\n            <label style=\"text-align: left; color: #575757; font-weight:0;\">Sucursal:</label>\n            </div>\n            <div>\n            <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.reportBy.name}} </label>  \n            </div>    \n            </div>\n            <div class=\"clearfix\"></div>\n\n\n          <div style=\"margin-top: 15px;\">\n            <div class=\"col-md-3\">\n            <label style=\"text-align: left; color: #575757; font-weight:0;\">Teléfono:</label>\n            </div>\n            <div>\n            <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.reportBy.phone}} </label>  \n            </div>    \n            </div>\n            <div class=\"clearfix\"></div>\n\n\n          <div style=\"margin-top: 15px;\">\n            <div class=\"col-md-3\">\n            <label style=\"text-align: left; color: #575757; font-weight:0;\">Teléfono:</label>\n            </div>\n            <div>\n            <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.reportBy.email}} </label>  \n            </div>    \n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div style=\"margin-top: 15px;\">\n              <div class=\"col-md-3\">\n              <label style=\"text-align: left; color: #575757; font-weight:0;\">calle:</label>\n              </div>\n              <div>\n              <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.reportBy.street}} </label>  \n              </div>    \n              </div>\n              <div class=\"clearfix\"></div>\n\n\n            <div style=\"margin-top: 15px;\">\n              <div class=\"col-md-3\">\n              <label style=\"text-align: left; color: #575757; font-weight:0;\">Num Ext:</label>\n              </div>\n              <div>\n              <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.reportBy.numExt}} </label>  \n              </div>    \n              </div>\n              <div class=\"clearfix\"></div>\n\n              <div style=\"margin-top: 15px;\">\n                <div class=\"col-md-3\">\n                <label style=\"text-align: left; color: #575757; font-weight:0;\">Num Int:</label>\n                </div>\n                <div>\n                <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.reportBy.numInt}} </label>  \n                </div>    \n                </div>\n                <div class=\"clearfix\"></div>\n\n                <div style=\"margin-top: 15px;\">\n                  <div class=\"col-md-3\">\n                  <label style=\"text-align: left; color: #575757; font-weight:0;\">Colonia:</label>\n                  </div>\n                  <div>\n                  <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.reportBy.suburb}} </label>  \n                  </div>    \n                  </div>\n                  <div class=\"clearfix\"></div>\n\n                  <div style=\"margin-top: 15px;\">\n                    <div class=\"col-md-3\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Municipio:</label>\n                    </div>\n                    <div>\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.reportBy.municipality}} </label>  \n                    </div>    \n                    </div>\n                    <div class=\"clearfix\"></div>\n\n\n                  <div style=\"margin-top: 15px;\">\n                    <div class=\"col-md-3\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Estado:</label>\n                    </div>\n                    <div>\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">{{issue.reportBy.state}} </label>  \n                    </div>    \n                    </div>\n                    <div class=\"clearfix\"></div>\n          </div>\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<style>\n\n#loader-wrapper {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 1000;\n  }\n\n  #loader {\n    display: block;\n    position: relative;\n    left: 50%;\n    top: 50%;\n    width: 150px;\n    height: 150px;\n    margin: -75px 0 0 -75px;\n    border-radius: 50%;\n    border: 3px solid transparent;\n    border-top-color:#f53737;\n    -webkit-animation: spin 2s linear infinite;\n    /* Chrome, Opera 15+, Safari 5+ */\n    animation: spin 2s linear infinite;\n    /* Chrome, Firefox 16+, IE 10+, Opera */\n  }\n\n  #loader:before {\n    content: \"\";\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    right: 5px;\n    bottom: 5px;\n    border-radius: 50%;\n    border: 3px solid transparent;\n    border-top-color: #eeeeee;\n    -webkit-animation: spin 3s linear infinite;\n    /* Chrome, Opera 15+, Safari 5+ */\n    animation: spin 3s linear infinite;\n    /* Chrome, Firefox 16+, IE 10+, Opera */\n  }\n\n  #loader:after {\n    content: \"\";\n    position: absolute;\n    top: 15px;\n    left: 15px;\n    right: 15px;\n    bottom: 15px;\n    border-radius: 50%;\n    border: 3px solid transparent;\n    border-top-color: #bb2121;\n    -webkit-animation: spin 1.5s linear infinite;\n    /* Chrome, Opera 15+, Safari 5+ */\n    animation: spin 1.5s linear infinite;\n    /* Chrome, Firefox 16+, IE 10+, Opera */\n  }\n\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(0deg);\n      /* IE 9 */\n      transform: rotate(0deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n\n    100% {\n      -webkit-transform: rotate(360deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(360deg);\n      /* IE 9 */\n      transform: rotate(360deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(0deg);\n      /* IE 9 */\n      transform: rotate(0deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n\n    100% {\n      -webkit-transform: rotate(360deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(360deg);\n      /* IE 9 */\n      transform: rotate(360deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n  }\n</style>"

/***/ }),

/***/ 1062:
/***/ (function(module, exports) {

module.exports = "<div class=\"col-lg-12\" >\n  <h1 *ngIf=\"identity.type=='local'\" class=\"col-md-11\" style=\"color: #3F2021; font-family: 'sofia-pro'; font-size: 240%; font-weight: 510\">{{title}}</h1>\n  <h1 *ngIf=\"identity.type!='local'\" style=\"margin-left: -15px; color:#DDCBA4; font-family: 'sofia-pro'; font-size: 240%; font-weight: 510;\" class=\"col-md-11\">{{title}}</h1>\n\n    <div class=\"col-md-1\" style=\"margin-top: 10px;\"  [routerLink]=\"['/encuesta']\">\n      <img *ngIf=\"identity.type=='local' && dataEncuesta\" style=\"width: 50px; height:50px;\" src=\"./assets/bell.gif\" />\n    </div>\n\n    <div class=\"clearfix\"></div> \n\n    <div *ngIf=\"identity.type=='local'\"  class=\"card\" style=\"width: 100%; height: 100%; margin-top: 5px;\">\n      <div class=\"card-body\">\n          <div class=\"row\">\n\n            <div class=\"row\">\n               <div class=\"col-md-12\" style=\"align-items: flex-end;\">\n                <div class=\"col-md-1\" style=\"text-align:right; margin-top: 0.4%; \">\n                  <label>Filtrar:</label>\n                </div>\n                <div class=\"col-md-3\">\n                  <input type=\"search\" class=\"form-control input-sm\" placeholder=\"Busqueda\" #name=\"ngModel\" [(ngModel)]=\"search\" (ngModelChange)=\"search1(search)\" >\n                </div>\n                <div class=\"btn-group  btn_group_explicit col-md-7\" style=\"padding-right: 0%;\">\n                  <a *ngIf=\"table == 'original'\" class=\"btn btn-default active\" (click)=\"onClickdismis()\">-</a>\n                  <a *ngIf=\"table != 'original'\" class=\"btn btn-default\" (click)=\"onClickdismis()\">-</a>\n                  <a *ngIf=\"table != 'original'\" class=\"btn btn-default active\" (click)=\"onClickmore()\">+</a>\n                  <a *ngIf=\"table == 'original'\" class=\"btn btn-default \" (click)=\"onClickmore()\">+</a>\n              </div>\n              </div>\n              <div class=\"clearfix\"></div>\n               </div>\n\n\n\n               <ul *ngIf=\"table=='original'\" id=\"menu\" style=\"margin-left: 1%; margin-bottom: -0.5%;\">\n                <hr style=\"color: #707070; margin-left: -1%;\" width=\"100%\"/>\n\n                <div *ngFor=\"let allIsue of allIsues; let i = index\" [attr.data-index]=\"i\">\n                <li style=\"margin-bottom: -0.5%;\">\n                  <input type=\"checkbox\" name=\"list\" id=\"nivel1-{{i+1}}\"><label for=\"nivel1-{{i+1}}\">{{allIsue.name}}</label>\n\n                  <ul class=\"interior\">\n                    <div *ngFor=\"let issue of allIsue.service2[0]; let ii = index\" [attr.data-index]=\"ii\">\n                      <hr style=\"color: #707070;\" width=\"98%\"/>\n                        <!-- <li><input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" (click)=\"prueba(issue)\" data-toggle=\"modal\" data-target=\"#exampleModal\">{{issue.issue}}</label></li> -->\n                        <li style=\"margin-bottom: -0.5%;\">\n                            <input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" >{{issue.subName}}</label>\n                           <br>\n                            <h6 style=\"color: rgb(104, 104, 104);\">{{issue.descService}}</h6>\n                        \n                            <ul class=\"interior\">\n                                <div *ngFor=\"let subcategory of issue.subcategory; let iii = index\" [attr.data-index]=\"iii\">\n                                <hr style=\"color: #707070;\" width=\"98%\"/>\n                                    <li style=\"margin-bottom: -0.5%;\"><input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" (click)=\"onClickIssue(subcategory)\" data-toggle=\"modal\" data-target=\"#exampleModal2\"> {{subcategory.subcategory}}</label></li>\n                                    <!-- <li><input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" >{{subcategory.subcategory}}</label></li> -->\n                                    <br>\n                                    <h6 style=\"color: rgb(104, 104, 104);\">{{subcategory.descSubcategory}} <a *ngIf=\"subcategory.sla || subcategory.format || subcategory.descSla\">  | </a> {{subcategory.sla}} horas <a *ngIf=\"subcategory.descSla\"> * </a> {{subcategory.descSla}}</h6>\n                                </div>\n                                </ul>\n                        \n                        </li>\n                    </div>\n                      </ul>\n\n                </li>\n                <hr style=\"color: #707070;\" width=\"98%\"/>\n                </div>\n                </ul>\n\n\n                <ul *ngIf=\"table=='segunda'\" id=\"menu2\" style=\"margin-left: 1%; margin-bottom: -0.5%;\">\n                  <hr style=\"color: #707070; margin-left: -1%;\" width=\"100%\"/>\n  \n                  <div *ngFor=\"let allIsue of allIsues; let i = index\" [attr.data-index]=\"i\">\n                  <li style=\"margin-bottom: -0.5%;\">\n                    <input type=\"checkbox\" name=\"list\" id=\"nivel1-{{i+1}}\"><label for=\"nivel1-{{i+1}}\">{{allIsue.name}}</label>\n  \n                    <ul class=\"interior\" style=\"margin-left:2%\">\n                      <div *ngFor=\"let issue of allIsue.service2[0]; let ii = index\" [attr.data-index]=\"ii\">\n                        <hr style=\"color: #707070;\" width=\"98%\"/>\n                          <!-- <li><input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" (click)=\"prueba(issue)\" data-toggle=\"modal\" data-target=\"#exampleModal\">{{issue.issue}}</label></li> -->\n                          <li style=\"margin-bottom: -0.5%;\">\n                              <input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" >{{issue.subName}}</label>\n                             <br>\n                              <h6 style=\"color: rgb(104, 104, 104);\">{{issue.descService}}</h6>\n                          \n                              <ul class=\"interior\" style=\"margin-left:2%\">\n                                  <div *ngFor=\"let subcategory of issue.subcategory; let iii = index\" [attr.data-index]=\"iii\">\n                                  <hr style=\"color: #707070;\" width=\"98%\"/>\n                                      <li style=\"margin-bottom: -0.5%;\"><input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" (click)=\"onClickIssue(subcategory)\" data-toggle=\"modal\" data-target=\"#exampleModal\"> {{subcategory.subcategory}}</label></li>\n                                      <!-- <li><input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" >{{subcategory.subcategory}}</label></li> -->\n                                      <br>\n                                      <h6 style=\"color: rgb(104, 104, 104);\">{{subcategory.descSubcategory}} <a *ngIf=\"subcategory.sla || subcategory.format || subcategory.descSla\">  | </a> {{subcategory.sla}} horas <a *ngIf=\"subcategory.descSla\"> * </a> {{subcategory.descSla}}</h6>\n                                  </div>\n                                  </ul>\n                          \n                          </li>\n                      </div>\n                        </ul>\n                  </li>\n                  <hr style=\"color: #707070;\" width=\"98%\"/>\n                  </div>\n                  </ul>\n\n\n          </div></div></div>\n\n          <div *ngIf=\"identity.type!='local'\"  class=\"card\" style=\"width: 100%; height: 100%; margin-top: 8px; background-color:#DDCBA4; border-color: rgb(71, 71, 71)\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n      \n                  <div class=\"row\">\n                     <div class=\"col-md-12\" style=\"align-items: flex-end;\">\n                      <div class=\"col-md-1\" style=\"text-align:right; margin-top: 0.4%; \">\n                        <label>Filtrar:</label>\n                      </div>\n                      <div class=\"col-md-3\">\n                        <input style=\"background-color: #e1e1e1;\" type=\"search\" class=\"form-control input-sm\" placeholder=\"Busqueda\" #name=\"ngModel\" [(ngModel)]=\"search\" (ngModelChange)=\"search1(search)\" >\n                      </div>\n                      <div class=\"btn-group  btn_group_explicit col-md-7\" style=\"padding-right: 0%;\">\n                        <a *ngIf=\"table == 'original'\" class=\"btn btn-default active\" (click)=\"onClickdismis()\">-</a>\n                        <a *ngIf=\"table != 'original'\" class=\"btn btn-default\" style=\"background-color: #e1e1e1;\" (click)=\"onClickdismis()\">-</a>\n                        <a *ngIf=\"table != 'original'\" class=\"btn btn-default active\" (click)=\"onClickmore()\">+</a>\n                        <a *ngIf=\"table == 'original'\" class=\"btn btn-default \" style=\"background-color: #e1e1e1;\" (click)=\"onClickmore()\">+</a>\n                    </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n                     </div>\n      \n      \n      \n                     <ul *ngIf=\"table=='original'\" id=\"menu\" style=\"margin-left: 1%; margin-bottom: -0.5%;\">\n                      <hr style=\"color: #707070; margin-left: -1%;\" width=\"100%\"/>\n      \n                      <div *ngFor=\"let allIsue of allIsues; let i = index\" [attr.data-index]=\"i\">\n                      <li style=\"margin-bottom: -0.5%;\">\n                        <input type=\"checkbox\" name=\"list\" id=\"nivel1-{{i+1}}\"><label for=\"nivel1-{{i+1}}\">{{allIsue.name}}</label>\n      \n                        <ul class=\"interior\">\n                          <div *ngFor=\"let issue of allIsue.service2[0]; let ii = index\" [attr.data-index]=\"ii\">\n                            <hr style=\"color: #707070;\" width=\"98%\"/>\n                              <!-- <li><input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" (click)=\"prueba(issue)\" data-toggle=\"modal\" data-target=\"#exampleModal\">{{issue.issue}}</label></li> -->\n                              <li style=\"margin-bottom: -0.5%;\">\n                                  <input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" >{{issue.subName}}</label>\n                                 <br>\n                                  <h6 style=\"color: rgb(104, 104, 104);\">{{issue.descService}}</h6>\n                              \n                                  <ul class=\"interior\">\n                                      <div *ngFor=\"let subcategory of issue.subcategory; let iii = index\" [attr.data-index]=\"iii\">\n                                      <hr style=\"color: #707070;\" width=\"98%\"/>\n                                          <li style=\"margin-bottom: -0.5%;\"><input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" (click)=\"onClickIssue(subcategory)\" data-toggle=\"modal\" data-target=\"#exampleModal2\"> {{subcategory.subcategory}}</label></li>\n                                          <!-- <li><input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" >{{subcategory.subcategory}}</label></li> -->\n                                          <br>\n                                          <h6 style=\"color: rgb(104, 104, 104);\">{{subcategory.descSubcategory}} <a *ngIf=\"subcategory.sla || subcategory.format || subcategory.descSla\">  | </a> {{subcategory.sla}} horas <a *ngIf=\"subcategory.descSla\"> * </a> {{subcategory.descSla}}</h6>\n                                      </div>\n                                      </ul>\n                              \n                              </li>\n                          </div>\n                            </ul>\n      \n                      </li>\n                      <hr style=\"color: #707070;\" width=\"98%\"/>\n                      </div>\n                      </ul>\n      \n      \n                      <ul *ngIf=\"table=='segunda'\" id=\"menu2\" style=\"margin-left: 1%; margin-bottom: -0.5%;\">\n                        <hr style=\"color: #707070; margin-left: -1%;\" width=\"100%\"/>\n        \n                        <div *ngFor=\"let allIsue of allIsues; let i = index\" [attr.data-index]=\"i\">\n                        <li style=\"margin-bottom: -0.5%;\">\n                          <input type=\"checkbox\" name=\"list\" id=\"nivel1-{{i+1}}\"><label for=\"nivel1-{{i+1}}\">{{allIsue.name}}</label>\n        \n                          <ul class=\"interior\" style=\"margin-left:2%\">\n                            <div *ngFor=\"let issue of allIsue.service2[0]; let ii = index\" [attr.data-index]=\"ii\">\n                              <hr style=\"color: #707070;\" width=\"98%\"/>\n                                <!-- <li><input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" (click)=\"prueba(issue)\" data-toggle=\"modal\" data-target=\"#exampleModal\">{{issue.issue}}</label></li> -->\n                                <li style=\"margin-bottom: -0.5%;\">\n                                    <input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" >{{issue.subName}}</label>\n                                   <br>\n                                    <h6 style=\"color: rgb(104, 104, 104);\">{{issue.descService}}</h6>\n                                \n                                    <ul class=\"interior\" style=\"margin-left:2%\">\n                                        <div *ngFor=\"let subcategory of issue.subcategory; let iii = index\" [attr.data-index]=\"iii\">\n                                        <hr style=\"color: #707070;\" width=\"98%\"/>\n                                            <li style=\"margin-bottom: -0.5%;\"><input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" (click)=\"onClickIssue(subcategory)\" data-toggle=\"modal\" data-target=\"#exampleModal\"> {{subcategory.subcategory}}</label></li>\n                                            <!-- <li><input type=\"checkbox\" name=\"list\" id=\"nivel{{1+ii+1}}-{{i+1}}\"><label for=\"nivel{{1+ii+1}}-{{i+1}}\" >{{subcategory.subcategory}}</label></li> -->\n                                            <br>\n                                            <h6 style=\"color: rgb(104, 104, 104);\">{{subcategory.descSubcategory}} <a *ngIf=\"subcategory.sla || subcategory.format || subcategory.descSla\">  | </a> {{subcategory.sla}} horas <a *ngIf=\"subcategory.descSla\"> * </a> {{subcategory.descSla}}</h6>\n                                        </div>\n                                        </ul>\n                                \n                                </li>\n                            </div>\n                              </ul>\n                        </li>\n                        <hr style=\"color: #707070;\" width=\"98%\"/>\n                        </div>\n                        </ul>\n      \n      \n                </div></div></div>      \n\n\n</div>\n\n<!-- Modal Estatus Extra -->\n<div class=\"modal fade\" id=\"exampleModal2\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 70%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: center; left: 2%\"> {{requestNew.category}} Bot,  ( Asistente virtual )</h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n\n\n        <div class=\"col-md-12\">\n          <textarea name=\"note\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"1\" cols=\"1\" [disabled]=\"true\"> {{requestNew.service}},  {{requestNew.subCategory}} </textarea>\n        </div>\n        <div class=\"clearfix\"></div>\n\n        <div class=\"col-md-12\" style=\"margin-top: 10px;\">\n          <svg style=\"margin-left: 15px\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" fill=\"currentColor\" class=\"bi bi-chat-dots-fill\" viewBox=\"0 0 16 16\">\n            <path d=\"M16 8c0 3.866-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.584.296-1.925.864-4.181 1.234-.2.032-.352-.176-.273-.362.354-.836.674-1.95.77-2.966C.744 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7zM5 8a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm4 0a1 1 0 1 0-2 0 1 1 0 0 0 2 0zm3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"/>\n          </svg>\n        </div>\n        <div class=\"clearfix\"></div>\n\n        <div class=\"col-md-12\" style=\"margin-top: 15px; text-align: start;\">\n          <div class=\"col-md-8;\">\n            <div style=\"background-color: #3f2021; position: relative; display: inline-block; padding: 10px; border-radius: 8px; border: 1px solid #ddd;\">\n              <p style=\"color: #DDCBA4;\">\n                Hola, soy tu asistente virtual !, Cuéntanos, en que te puedo ayudar?\n              </p>\n            </div>\n          </div>\n          <div class=\"clearfix\"></div>\n        </div>\n        <div class=\"clearfix\"></div>\n\n        <div *ngFor=\"let item of messages; let i = index\">\n          <div *ngIf=\"item.role=='assistant'\" class=\"col-md-12\" style=\"margin-top: 10px; text-align: start;\">\n            <div class=\"col-md-8\">\n              <div style=\"background-color: #3f2021; position: relative; display: inline-block; padding: 10px; border-radius: 8px; border: 1px solid #ddd;\">\n                <p style=\"color: #DDCBA4;\">\n                  {{item.content}}\n                </p>\n              </div>\n              <div *ngIf=\"!messagesBD[i].util\" class=\"display: inline-block; margin-right: 5px;\">\n                <a style=\"font-size: 80%;\">\n                  Te sirvio la respuesta?\n                </a>\n                <button class=\"btn btn-light\" style=\"color: rgb(0, 156, 0); background-color: #dddddd; font-size: 60%;\" (click)=\"sirvio(i, 'si')\">\n                  <span class=\"glyphicon glyphicon-ok\"></span>\n                </button>\n                <button class=\"btn btn-light\" style=\"color: #C8102E; background-color: #dddddd; font-size: 60%;\" (click)=\"sirvio(i, 'no')\">\n                  <span class=\"glyphicon glyphicon-remove\"></span>\n                </button>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n          </div>\n\n          <div *ngIf=\"item.role=='user'\" class=\"col-md-12\" style=\"margin-top: 10px;\">\n            <div class=\"col-md-6\"></div>\n            <div style=\" text-align: end; background-color:#C8102E; position: relative; display: inline-block; padding: 10px; border-radius: 8px; border: 1px solid #ddd;\">\n              <p style=\"color: #DDCBA4;\" >\n                {{item.content}}\n              </p>\n            </div>\n            <div class=\"clearfix\"></div>\n          </div>\n          <div class=\"clearfix\"></div>\n        </div>\n\n        <div class=\"col-md-11\" style=\"margin-top: 20px;\">\n          <textarea name=\"note\" class=\"form-control\" [(ngModel)]=\"note\" placeholder=\"Escribe aquí tus comentarios\" rows=\"3\" cols=\"3\"></textarea>\n        </div>\n        <div class=\"col-md-1\" style=\"margin-top: 20px; margin-left: -30px;\">\n          <button class=\"btn btn-light\" style=\"color: green; background-color: #dddddd;\" (click)=\"pregunta(note)\">\n            <h2>\n              <span class=\"glyphicon glyphicon-send\"></span>\n            </h2>\n          </button>\n        </div>\n        <div class=\"clearfix\"></div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <div style=\"margin-right: 30%;\" *ngIf=\"messagesBD[1]\">\n          <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #C8102E; font-size: 140%;\" data-toggle=\"modal\" data-target=\"#exampleModal\">LEVANTAR TIMCKET</button>\n        </div>\n        <div>\n          <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"load==true\">\n    <div id=\"loader-wrapper\">\n      <div id=\"loader\"><a *ngIf=\"functions3==true\">+</a></div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal -->\n<div *ngIf=\"requestNew.subCategory\" class=\"modal fade\" id=\"exampleModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\"> Nuevo Requerimiento  {{ subCategory }} </h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n        <div class=\"col-md-6\" style=\"margin-top: 15px;\">\n          <label style=\"text-align: left; margin-top: 5px;\">Servicio:</label>\n          <input type=\"text\" #name=\"ngModel\"  name=\"service\" [(ngModel)]=\"requestNew.service\" class=\"form-control\" [disabled]=\"true\" required>\n\n        </div>\n        <div class=\"col-md-6\" style=\"margin-top: 15px;\">\n          <label style=\"text-align: left; margin-top: 5px;\">Subcategoría:</label>\n          <input type=\"text\" #name=\"ngModel\"  name=\"subCategory\" [(ngModel)]=\"requestNew.subCategory\" class=\"form-control\" [disabled]=\"true\" required/>\n        </div>\n        <div class=\"clearfix\"></div>\n\n        <div *ngIf=\"campos.menuboards==true\">\n\n        <label style=\"margin-top: 20px; margin-left: 15px;\">Seleccione (el o los) Menuboards *</label>\n        <div class=\"clearfix\"></div>\n\n        <div class=\"modal-header\" style=\"background-color: #ecebeb; color: #1f1f1f;\">\n        <div class=\"col-md-2\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"menuboard.promopanel\" style=\"margin-right: 1%;\">\n          <label>1- Promo panel</label>\n        </div>\n        <div class=\"col-md-2\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"menuboard.panaderia\" style=\"margin-right: 1%;\">\n          <label>2- Panadería</label>\n        </div>\n        <div class=\"col-md-3\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"menuboard.bebidasCalientes\" style=\"margin-right: 1%;\">\n          <label>3- Bebidas calientes</label>\n        </div>\n        <div class=\"col-md-2\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"menuboard.babidasFrias\" style=\"margin-right: 1%;\">\n          <label>4- Bebidas frías</label>\n        </div>\n        <div class=\"col-md-3\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"menuboard.dasayunosLunch\" style=\"margin-right: 1%;\">\n          <label>5- Desayunos|Lunch</label>\n        </div>\n        </div>\n      </div>\n      <div class=\"clearfix\"></div>\n\n      <div *ngIf=\"campos.cantBolsasComprobantes==true\">\n\n        <label style=\"margin-top: 20px; margin-left: 15px;\">Seleccione mínimo un campo*</label>\n        <div class=\"clearfix\"></div>\n\n        <div class=\"modal-header\" style=\"background-color: #ecebeb; color: #1f1f1f;\">\n        <div class=\"col-md-2\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"cantBolsasComprobantes.bolsas\" style=\"margin-right: 1%;\">\n          <label>100 Bolsas</label>\n        </div>\n        <div class=\"col-md-2\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"cantBolsasComprobantes.comprobantes\" style=\"margin-right: 1%;\">\n          <label>100 Comprobantes</label>\n        </div>\n        </div>\n      </div>\n      <div class=\"clearfix\"></div>\n\n      <div *ngIf=\"campos.dt==true\" class=\"col-md-6\">\n        <label style=\"margin-top: 20px; margin-left: 15px;\">¿Se realizó el reinicio de HME de acuerdo al manual de fallas comunes en DriveThru? *</label>\n        <div class=\"clearfix\"></div>\n        <div class=\"modal-header\" style=\"background-color: #ecebeb; color: #1f1f1f;\">\n\n          <div class=\"col-md-4\" style=\"margin-left: -20px;\">\n            <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"dt\">\n              <option value=\"\">▼</option>\n              <option value=\"Si\">Sí</option>\n              <option value=\"No\">No</option>\n          </select>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"campos.email==true\" class=\"col-md-6\">\n        <label style=\"margin-top: 20px; margin-left: 15px;\">email *</label>\n        <div class=\"clearfix\"></div>\n        <div class=\"modal-header\" style=\"background-color: #ecebeb; color: #1f1f1f;\">\n\n          <div class=\"col-md-8\">\n            <input type=\"text\" #name=\"ngModel\"  name=\"email\" [(ngModel)]=\"email\" placeholder=\"email\" class=\"form-control\"/>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n\n      <div *ngIf=\"campos.pos==true\">\n\n        <label style=\"margin-top: 20px; margin-left: 15px;\">Seleccione (el o los) POS *</label>\n        <div class=\"clearfix\"></div>\n        <div>\n          <img style=\"width: 400px; height: 250px;\" src=\"./assets/pos.jpeg\" />\n        </div>\n        <div class=\"modal-header; col-md-12\" style=\"background-color: #ecebeb; color: #1f1f1f; margin-top: 5px;\">\n        <div class=\"col-md-2\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"pos.fcRight\" style=\"margin-right: 1%;\">\n          <label>FC Right</label>\n        </div>\n        <div class=\"col-md-2\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"pos.fcLeft\" style=\"margin-right: 1%;\">\n          <label>FC Left</label>\n        </div>\n        <div class=\"col-md-2\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"pos.fc3\" style=\"margin-right: 1%;\">\n          <label>FC 3</label>\n        </div>\n        <div class=\"col-md-2\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"pos.dtOt\" style=\"margin-right: 1%;\">\n          <label>DT OT</label>\n        </div>\n        <div class=\"col-md-2\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"pos.dtOt2\" style=\"margin-right: 1%;\">\n          <label>DT OT2</label>\n        </div>\n        <div class=\"col-md-2\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"pos.dtCashier\" style=\"margin-right: 1%;\">\n          <label>DT Cashier</label>\n        </div>\n        </div>\n      </div>\n      <div class=\"clearfix\"></div>\n\n      <div *ngIf=\"campos.medidas==true\">\n        <label style=\"margin-top: 20px; margin-left: 15px;\">Medidas *</label>\n        <div class=\"clearfix\"></div>\n        <div class=\"modal-header\" style=\"background-color: #ecebeb; color: #1f1f1f;\">\n          <div class=\"col-md-3\">\n            <input type=\"text\" #name=\"ngModel\"  name=\"email\" [(ngModel)]=\"medidas.altura\" placeholder=\"Altura\" class=\"form-control\"/>\n          </div>\n          <div class=\"col-md-3\">\n            <input type=\"text\" #name=\"ngModel\"  name=\"email\" [(ngModel)]=\"medidas.ancho\" placeholder=\"Ancho\" class=\"form-control\"/>\n          </div>\n          <div class=\"col-md-3\">\n            <input type=\"text\" #name=\"ngModel\"  name=\"email\" [(ngModel)]=\"medidas.profundidad\" placeholder=\"Profundidad\" class=\"form-control\"/>\n          </div>\n        </div>\n      </div>\n      <div class=\"clearfix\"></div>\n\n      <div *ngIf=\"campos.kds==true\">\n\n        <label style=\"margin-top: 20px; margin-left: 15px;\">Seleccione (el o los) KDS *</label>\n        <div class=\"clearfix\"></div>\n\n        <div class=\"modal-header; col-md-12\" style=\"background-color: #ecebeb; color: #1f1f1f;\">\n        <div class=\"col-md-4\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"kds.expo1\" style=\"margin-right: 1%;\">\n          <label>Expo1(Lobby/Ventanilla peatones)</label>\n        </div>\n        <div class=\"col-md-2\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"kds.expo2\" style=\"margin-right: 1%;\">\n          <label>Expo2(DriveThru)</label>\n        </div>\n        <div class=\"col-md-2\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"kds.sandwiches\" style=\"margin-right: 1%;\">\n          <label>Sándwiches</label>\n        </div>\n        <div class=\"col-md-4\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"kds.bebidasCalientes\" style=\"margin-right: 1%;\">\n          <label>Bebidas calientes(Expreso y Bunn)</label>\n        </div>\n        <div class=\"col-md-3\">\n          <input type=\"checkbox\" #name=\"ngModel\" name=\"5\" [(ngModel)]=\"kds.bebidasFrias\" style=\"margin-right: 1%;\">\n          <label>Bebidas frías(Taylor y iMix)</label>\n        </div>\n        </div>\n      </div>\n      <div class=\"clearfix\"></div>\n\n      <div *ngIf=\"campos.numReport==true\" class=\"col-md-4\">\n        <label style=\"margin-top: 20px; margin-left: 15px;\">Número de reporte *</label>\n        <div class=\"clearfix\"></div>\n        <div class=\"modal-header\" style=\"background-color: #ecebeb; color: #1f1f1f;\">\n\n          <div class=\"col-md-11\">\n            <input type=\"text\" #name=\"ngModel\"  name=\"numReport\" [(ngModel)]=\"numReport\" placeholder=\"\" class=\"form-control\"/>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"campos.numOrden==true\" class=\"col-md-4\">\n        <label style=\"margin-top: 20px; margin-left: 15px;\">Número de orden *</label>\n        <div class=\"clearfix\"></div>\n        <div class=\"modal-header\" style=\"background-color: #ecebeb; color: #1f1f1f;\">\n\n          <div class=\"col-md-11\">\n            <input type=\"text\" #name=\"ngModel\"  name=\"numOrden\" [(ngModel)]=\"numOrden\" placeholder=\"\" class=\"form-control\"/>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"campos.producto==true\"  class=\"col-md-4\">\n        <label style=\"margin-top: 20px; margin-left: 15px;\">Producto *</label>\n        <div class=\"clearfix\"></div>\n        <div class=\"modal-header\" style=\"background-color: #ecebeb; color: #1f1f1f;\">\n\n          <div class=\"col-md-12\">\n            <input type=\"text\" #name=\"ngModel\"  name=\"producto\" [(ngModel)]=\"producto\" placeholder=\"\" class=\"form-control\"/>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"campos.lote==true\" class=\"col-md-4\">\n        <label style=\"margin-top: 20px; margin-left: 15px;\">Lote *</label>\n        <div class=\"clearfix\"></div>\n        <div class=\"modal-header\" style=\"background-color: #ecebeb; color: #1f1f1f;\">\n\n          <div class=\"col-md-11\">\n            <input type=\"text\" #name=\"ngModel\"  name=\"lote\" [(ngModel)]=\"lote\" placeholder=\"\" class=\"form-control\"/>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"campos.cantidad==true\" class=\"col-md-4\">\n        <label style=\"margin-top: 20px; margin-left: 15px;\">Cantidad *</label>\n        <div class=\"clearfix\"></div>\n        <div class=\"modal-header\" style=\"background-color: #ecebeb; color: #1f1f1f;\">\n\n          <div class=\"col-md-11\">\n            <input type=\"text\" #name=\"ngModel\"  name=\"cantidad\" [(ngModel)]=\"cantidad\" placeholder=\"\" class=\"form-control\"/>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"campos.numSerie==true\" class=\"col-md-4\">\n        <label style=\"margin-top: 20px; margin-left: 15px;\">Número de serie *</label>\n        <div class=\"clearfix\"></div>\n        <div class=\"modal-header\" style=\"background-color: #ecebeb; color: #1f1f1f;\">\n\n          <div class=\"col-md-11\">\n            <input type=\"text\" #name=\"ngModel\"  name=\"numSerie\" [(ngModel)]=\"numSerie\" placeholder=\"\" class=\"form-control\"/>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"campos.marca==true\" class=\"col-md-4\">\n        <label style=\"margin-top: 20px; margin-left: 15px;\">Marca *</label>\n        <div class=\"clearfix\"></div>\n        <div class=\"modal-header\" style=\"background-color: #ecebeb; color: #1f1f1f;\">\n\n          <div class=\"col-md-11\">\n            <input type=\"text\" #name=\"ngModel\"  name=\"marca\" [(ngModel)]=\"marca\" placeholder=\"\" class=\"form-control\"/>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"campos.nombreTimMember==true\" class=\"col-md-4\">\n        <label style=\"margin-top: 20px; margin-left: 15px;\">Nombre del Tim-Member *</label>\n        <div class=\"clearfix\"></div>\n        <div class=\"modal-header\" style=\"background-color: #ecebeb; color: #1f1f1f;\">\n\n          <div class=\"col-md-11\">\n            <input type=\"text\" #name=\"ngModel\"  name=\"nombreTimMember\" [(ngModel)]=\"nombreTimMember\" placeholder=\"\" class=\"form-control\"/>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"campos.numNomina==true\" class=\"col-md-4\">\n        <label style=\"margin-top: 20px; margin-left: 15px;\">Número de nómina *</label>\n        <div class=\"clearfix\"></div>\n        <div class=\"modal-header\" style=\"background-color: #ecebeb; color: #1f1f1f;\">\n\n          <div class=\"col-md-11\">\n            <input type=\"text\" #name=\"ngModel\"  name=\"numNomina\" [(ngModel)]=\"numNomina\" placeholder=\"\" class=\"form-control\"/>\n          </div>\n        </div>\n      </div>\n      <div class=\"clearfix\"></div>\n\n\n      <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n        <label style=\"text-align: left; margin-top: 5px;\">Descripción: *</label>\n        <textarea name=\"comentarios\" #name=\"ngModel\" name=\"description\" [(ngModel)]=\"requestNew.description\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"10\" cols=\"40\" required></textarea>\n      </div>\n      <div class=\"clearfix\"></div>\n      <div *ngIf=\"identity.type!='areaManager' && identity.upload!='si' && identity.type!='callCenter'\" class=\"col-md-6\" style=\"margin-top: 15px;\">\n        <label style=\"text-align: left; margin-top: 5px;\">Gerencial que reporta: *</label>\n        <input type=\"text\" #name=\"ngModel\"  name=\"subCategory\" [(ngModel)]=\"requestNew.manager\" placeholder=\"Nombre de quien reporta\" class=\"form-control\" required/>\n      </div>\n      <div *ngIf=\"identity.type=='areaManager'\" class=\"col-md-6\" style=\"margin-top: 15px;\">\n        <label style=\"text-align: left; margin-top: 5px;\">AM que reporta:</label>\n        <input type=\"text\" #name=\"ngModel\"  name=\"subCategory\" [(ngModel)]=\"requestNew.manager\" placeholder=\"Nombre de quien reporta\" class=\"form-control\" [disabled]=\"true\" required/>\n      </div>\n\n      <div *ngIf=\"identity.type=='areaManager'\" class=\"col-md-6\" style=\"margin-top: 15px;\">\n        <label style=\"text-align: left; margin-top: 5px;\">Sucursal: *</label>\n        <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"requestNew.reportBy\" >\n          <option value=\"\">▼</option>\n          <option *ngFor=\"let sucursal of sucursales; let i = index\" value={{sucursal._id}}>{{sucursal.name}}</option>\n      </select>\n      </div>\n\n      <div *ngIf=\"identity.upload=='si' || identity.type=='callCenter'\" class=\"col-md-6\" style=\"margin-top: 15px;\">\n        <label style=\"text-align: left; margin-top: 5px;\">Usuario que reporta:</label>\n        <input type=\"text\" #name=\"ngModel\"  name=\"subCategory\" [(ngModel)]=\"requestNew.manager2\" placeholder=\"Nombre de quien reporta\" class=\"form-control\" [disabled]=\"true\" required/>\n      </div>\n\n      <div *ngIf=\"identity.upload=='si' || identity.type=='callCenter'\" class=\"col-md-6\" style=\"margin-top: 15px;\">\n        <label style=\"text-align: left; margin-top: 5px;\">Sucursal:</label>\n        <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"requestNew.reportBy\" >\n          <option value=\"\">▼</option>\n          <option *ngFor=\"let sucursal of sucursales; let i = index\" value={{sucursal._id}}>{{sucursal.name}}</option>\n      </select>\n      </div>\n\n      <div class=\"clearfix\"></div>\n      <div class=\"col-md-12\" style=\"margin-top: 22px;\">\n        <label style=\"text-align: left; margin-top: 5px;\">Anexos: <a *ngIf=\"campos.foto==true\"> * (mínimo 1 foto)</a> <a *ngIf=\"campos.video==true\"> * (mínimo 1 video)</a></label>\n        <div class=\"modal-header\" style=\"background-color: #e9e9e9; color: #818181;\">\n          <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n            <div class=\"col-md-3\" >\n            <input *ngIf=\"!fileToUpload1\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent1($event)\">\n            <label *ngIf=\"fileToUpload1\" style=\"text-align: left; margin-top: 5px;\">{{newName1}}</label>\n              <button *ngIf=\"fileToUpload1\" (click)=\"imgCancel1()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n            </div>\n            <div *ngIf=\"fileToUpload1\" class=\"col-md-3\" style=\"margin-left: 0px;\">\n              <input *ngIf=\"!fileToUpload2\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent2($event)\">\n              <label *ngIf=\"fileToUpload2\" style=\"text-align: left; margin-top: 5px;\">{{newName2}}</label>\n                <button *ngIf=\"fileToUpload2\" (click)=\"imgCancel2()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n              </div>\n              <div *ngIf=\"fileToUpload1 && fileToUpload2\" class=\"col-md-3\" style=\"margin-left: 0px;\">\n                <input *ngIf=\"!fileToUpload3\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent3($event)\">\n                <label *ngIf=\"fileToUpload3\" style=\"text-align: left; margin-top: 5px;\">{{newName3}}</label>\n                  <button *ngIf=\"fileToUpload3\" (click)=\"imgCancel3()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n                </div>\n                <div *ngIf=\"fileToUpload1 && fileToUpload2 && fileToUpload3\" class=\"col-md-3\" style=\"margin-left: 0px;\">\n                  <input *ngIf=\"!fileToUpload4\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent4($event)\">\n                  <label *ngIf=\"fileToUpload4\" style=\"text-align: left; margin-top: 5px;\">{{newName4}}</label>\n                    <button *ngIf=\"fileToUpload4\" (click)=\"imgCancel4()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n                  </div>\n                  <div class=\"clearfix\"></div>\n                  <div *ngIf=\"fileToUpload1 && fileToUpload2 && fileToUpload3 && fileToUpload4\" class=\"col-md-3\" style=\"margin-top:10px\">\n                    <input *ngIf=\"!fileToUpload5\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent5($event)\">\n                    <label *ngIf=\"fileToUpload5\" style=\"text-align: left; margin-top: 5px;\">{{newName5}}</label>\n                      <button *ngIf=\"fileToUpload5\" (click)=\"imgCancel5()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n                    </div>\n                    <div *ngIf=\"fileToUpload1 && fileToUpload2 && fileToUpload3 && fileToUpload4 && fileToUpload5\" class=\"col-md-3\" style=\"margin-left: 0px;margin-top:10px\">\n                      <input *ngIf=\"!fileToUpload6\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent6($event)\">\n                      <label *ngIf=\"fileToUpload6\" style=\"text-align: left; margin-top: 5px;\">{{newName6}}</label>\n                        <button *ngIf=\"fileToUpload6\" (click)=\"imgCancel6()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n                      </div>\n                      <div *ngIf=\"fileToUpload1 && fileToUpload2 && fileToUpload3 && fileToUpload4 && fileToUpload5 && fileToUpload6\" class=\"col-md-3\" style=\"margin-left: 0px;margin-top:10px\">\n                        <input *ngIf=\"!fileToUpload7\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent7($event)\">\n                        <label *ngIf=\"fileToUpload7\" style=\"text-align: left; margin-top: 5px;\">{{newName7}}</label>\n                          <button *ngIf=\"fileToUpload7\" (click)=\"imgCancel7()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n                        </div>\n                        <div *ngIf=\"fileToUpload1 && fileToUpload2 && fileToUpload3 && fileToUpload4 && fileToUpload5 && fileToUpload6 && fileToUpload7\" class=\"col-md-3\" style=\"margin-left: 0px;margin-top:10px\">\n                          <input *ngIf=\"!fileToUpload8\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent8($event)\">\n                          <label *ngIf=\"fileToUpload8\" style=\"text-align: left; margin-top: 5px;\">{{newName8}}</label>\n                            <button *ngIf=\"fileToUpload8\" (click)=\"imgCancel8()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n                          </div>\n                          <div class=\"clearfix\"></div>\n                          <div *ngIf=\"fileToUpload1 && fileToUpload2 && fileToUpload3 && fileToUpload4 && fileToUpload5 && fileToUpload6 && fileToUpload7 && fileToUpload8\" class=\"col-md-3\" style=\"margin-top:10px\">\n                            <input *ngIf=\"!fileToUpload9\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent9($event)\">\n                            <label *ngIf=\"fileToUpload9\" style=\"text-align: left; margin-top: 5px;\">{{newName9}}</label>\n                              <button *ngIf=\"fileToUpload9\" (click)=\"imgCancel9()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n                            </div>\n                            <div *ngIf=\"fileToUpload1 && fileToUpload2 && fileToUpload3 && fileToUpload4 && fileToUpload5 && fileToUpload6 && fileToUpload7 && fileToUpload8 && fileToUpload9\" class=\"col-md-3\" style=\"margin-left: 0px;margin-top:10px\">\n                              <input *ngIf=\"!fileToUpload10\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent10($event)\">\n                              <label *ngIf=\"fileToUpload10\" style=\"text-align: left; margin-top: 5px;\">{{newName10}}</label>\n                                <button *ngIf=\"fileToUpload10\" (click)=\"imgCancel10()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n                              </div>\n                              <div *ngIf=\"fileToUpload1 && fileToUpload2 && fileToUpload3 && fileToUpload4 && fileToUpload5 && fileToUpload6 && fileToUpload7 && fileToUpload8 && fileToUpload9 && fileToUpload10\" class=\"col-md-3\" style=\"margin-left: 0px;margin-top:10px\">\n                                <input *ngIf=\"!fileToUpload11\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent11($event)\">\n                                <label *ngIf=\"fileToUpload11\" style=\"text-align: left; margin-top: 5px;\">{{newName11}}</label>\n                                  <button *ngIf=\"fileToUpload11\" (click)=\"imgCancel11()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n                                </div>\n                                <div *ngIf=\"fileToUpload1 && fileToUpload2 && fileToUpload3 && fileToUpload4 && fileToUpload5 && fileToUpload6 && fileToUpload7 && fileToUpload8 && fileToUpload9 && fileToUpload10 && fileToUpload11\" class=\"col-md-3\" style=\"margin-left: 0px;margin-top:10px\">\n                                  <input *ngIf=\"!fileToUpload12\" type=\"file\" placeholder=\"Sube imagen...\" (change)=\"fileChangeEvent12($event)\">\n                                  <label *ngIf=\"fileToUpload12\" style=\"text-align: left; margin-top: 5px;\">{{newName12}}</label>\n                                    <button *ngIf=\"fileToUpload12\" (click)=\"imgCancel12()\" type=\"button\" class=\"btn btn-secondary\" > x </button>\n                                  </div>\n\n\n        </div>\n        <div class=\"clearfix\"></div>\n        </div>\n      </div>\n      <div class=\"clearfix\"></div>\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #C8102E; margin-right: 1.3%;\"  (click)=\"asignar()\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-check\" viewBox=\"0 0 16 16\">\n            <path d=\"M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z\"></path>\n          </svg>\n          <label style=\"margin-top: 4%; margin-left:-4%; size: 10%;\">\n            Enviar\n          </label>\n        </button>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"load==true\">\n    <div id=\"loader-wrapper\">\n      <div id=\"loader\"><a *ngIf=\"functions3==true\">+</a></div>\n    </div>\n  </div>\n</div>\n\n<style>\n    #menu * { list-style:none; color: #C8102E;}\n    #menu li{ line-height:30%;}\n    #menu input[name=\"list\"] {position: absolute; left: -1000em}\n    #menu label{font-weight: normal}\n    #menu label:before{ content:\"\\025b8\"; margin-right:4px;}\n    #menu input:checked ~ label:before{ content:\"\\025be\";}\n    #menu .interior{display: none; margin-left: 2%;}\n    #menu input:checked ~ ul{display:block;}\n    \n    #menu2 * { list-style:none; color: #C8102E;}\n    #menu2 li{ line-height:30%;}\n    #menu2 input[name=\"list\"] {position: absolute; left: -1000em}\n    #menu2 label{font-weight: normal}\n    #menu2 label:before{ content:\"\\025b8\"; margin-right:4px;}\n    #menu2 input:checked ~ label:before{ content:\"\\025be\";}\n    #menu2 input:checked ~ ul{display:block;}\n\n  #loader-wrapper {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 1000;\n  }\n\n  #loader {\n    display: block;\n    position: relative;\n    left: 50%;\n    top: 50%;\n    width: 150px;\n    height: 150px;\n    margin: -75px 0 0 -75px;\n    border-radius: 50%;\n    border: 3px solid transparent;\n    border-top-color: #C8102E;\n    -webkit-animation: spin 2s linear infinite;\n    /* Chrome, Opera 15+, Safari 5+ */\n    animation: spin 2s linear infinite;\n    /* Chrome, Firefox 16+, IE 10+, Opera */\n  }\n\n  #loader:before {\n    content: \"\";\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    right: 5px;\n    bottom: 5px;\n    border-radius: 50%;\n    border: 3px solid transparent;\n    border-top-color: #eeeeee;\n    -webkit-animation: spin 3s linear infinite;\n    /* Chrome, Opera 15+, Safari 5+ */\n    animation: spin 3s linear infinite;\n    /* Chrome, Firefox 16+, IE 10+, Opera */\n  }\n\n  #loader:after {\n    content: \"\";\n    position: absolute;\n    top: 15px;\n    left: 15px;\n    right: 15px;\n    bottom: 15px;\n    border-radius: 50%;\n    border: 3px solid transparent;\n    border-top-color: #C8102E;\n    -webkit-animation: spin 1.5s linear infinite;\n    /* Chrome, Opera 15+, Safari 5+ */\n    animation: spin 1.5s linear infinite;\n    /* Chrome, Firefox 16+, IE 10+, Opera */\n  }\n\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(0deg);\n      /* IE 9 */\n      transform: rotate(0deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n\n    100% {\n      -webkit-transform: rotate(360deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(360deg);\n      /* IE 9 */\n      transform: rotate(360deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(0deg);\n      /* IE 9 */\n      transform: rotate(0deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n\n    100% {\n      -webkit-transform: rotate(360deg);\n      /* Chrome, Opera 15+, Safari 3.1+ */\n      -ms-transform: rotate(360deg);\n      /* IE 9 */\n      transform: rotate(360deg);\n      /* Firefox 16+, IE 10+, Opera */\n    }\n  }\n\n@import url(\"https://p.typekit.net/p.css?s=1&k=lkr2zif&ht=tk&f=24539.24540.24547&a=6178157&app=typekit&e=css\");\n@font-face {\nfont-family:\"sofia-pro\";\nsrc:url(\"https://use.typekit.net/af/5d97ff/00000000000000007735f999/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"woff2\"),url(\"https://use.typekit.net/af/5d97ff/00000000000000007735f999/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"woff\"),url(\"https://use.typekit.net/af/5d97ff/00000000000000007735f999/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n7&v=3\") format(\"opentype\");\nfont-display:auto;font-style:normal;font-weight:700;font-stretch:normal;\n}\n@font-face {\nfont-family:\"sofia-pro\";\nsrc:url(\"https://use.typekit.net/af/66e20c/00000000000000007735f993/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3\") format(\"woff2\"),url(\"https://use.typekit.net/af/66e20c/00000000000000007735f993/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3\") format(\"woff\"),url(\"https://use.typekit.net/af/66e20c/00000000000000007735f993/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=i7&v=3\") format(\"opentype\");\nfont-display:auto;font-style:italic;font-weight:700;font-stretch:normal;\n}\n@font-face {\nfont-family:\"sofia-pro\";\nsrc:url(\"https://use.typekit.net/af/b718ff/00000000000000007735f98d/30/l?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"woff2\"),url(\"https://use.typekit.net/af/b718ff/00000000000000007735f98d/30/d?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"woff\"),url(\"https://use.typekit.net/af/b718ff/00000000000000007735f98d/30/a?primer=7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=n4&v=3\") format(\"opentype\");\nfont-display:auto;font-style:normal;font-weight:400;font-stretch:normal;\n}\n\n</style>\n"

/***/ }),

/***/ 1063:
/***/ (function(module, exports) {

module.exports = "    <div class=\"col-md-7\">\n      <h1 *ngIf=\"identity.type=='local'\" style=\"margin-left: 15px; color: #3F2021; font-family: 'sofia-pro'; font-weight: 510; font-size: 240%;\">{{title}}</h1>\n      <h1 *ngIf=\"identity.type!='local'\" style=\"color:#DDCBA4; font-family: 'sofia-pro'; font-weight: 510; font-size: 240%;\">{{title}}</h1>\n    </div>\n    <div class=\"col-md-2\" style=\"margin-top: 15px;\" >\n      <img *ngIf=\"identity.type=='local' && dataEncuesta\" style=\"width: 50px; height:50px;\" src=\"./assets/bell3.png\"  [routerLink]=\"['/encuesta']\"/>\n    </div>\n    <div class=\"col-md-3\" style=\"margin-top: 27px;\">\n      <div class=\"input-group\" *ngIf=\"identity.type=='local'\">\n        <span class=\"input-group-btn\">\n          <button class=\"btn btn-default\" type=\"button\" (click)=\"goToSearch(search)\">\n            <div style=\"font-size: 10px\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\n                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\n              </svg>\n            </div>\n          </button>\n        </span>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Buscar Folio\" #name=\"ngModel\" name=\"search\" [(ngModel)]=\"search\">\n      </div>\n      <div class=\"input-group\" *ngIf=\"identity.type!='local'\">\n        <span class=\"input-group-btn\">\n          <button style=\"background-color: #e1e1e1;\" class=\"btn btn-default\" type=\"button\" (click)=\"goToSearch(search)\">\n            <div style=\"font-size: 10px\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\n                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\n              </svg>\n            </div>\n          </button>\n        </span>\n        <input style=\"background-color: #e1e1e1;\" type=\"text\" class=\"form-control\" placeholder=\"Buscar Folio\" #name=\"ngModel\" name=\"search\" [(ngModel)]=\"search\">\n      </div>\n    </div>\n    <div class=\"clearfix\"></div>\n\n    <section class=\"row\" id=\"main-content\" style=\"margin-top: 5px;\">\n        <div class=\"col-xs-12\">\n<ul *ngIf=\"identity.type!='callCenter'\" class=\"nav nav-pills grouping_tabs\">\n            <li class=\"active\" *ngIf=\"table==1 && identity.type=='local'\">\n              <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 1\" type=\"button\" id=\"btn_tab_for_opened\">Nuevos<span class=\"badge\">{{inProcess.length}}</span></a>\n            </li>\n            <li *ngIf=\"table!=1 && identity.type=='local'\">\n              <a (click)=\"table = 1\" type=\"button\" id=\"btn_tab_for_opened\">Nuevos<span class=\"badge\">{{inProcess.length}}</span></a>\n            </li>\n            <li class=\"active\" *ngIf=\"table==2 && identity.type=='local'\">\n              <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 2\" type=\"button\" id=\"btn_tab_for_resolved\">Pendientes<span class=\"badge\">{{inPending.length}}</span></a>\n            </li>\n            <li *ngIf=\"table!=2 && identity.type=='local'\">\n              <a (click)=\"table = 2\" type=\"button\" id=\"btn_tab_for_resolved\">Pendientes<span class=\"badge\">{{inPending.length}}</span></a>\n            </li>\n\n            <li class=\"active\" *ngIf=\"table==1 && identity.type!='local'\">\n              <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 1\" type=\"button\" id=\"btn_tab_for_opened\">Nuevos<span class=\"badge\">{{inProcess.length}}</span></a>\n            </li>\n            <li *ngIf=\"table!=1 && identity.type!='local'\">\n              <a style=\"color: #DDCBA4\" (click)=\"table = 1\" type=\"button\" id=\"btn_tab_for_opened\">Nuevos<span class=\"badge\">{{inProcess.length}}</span></a>\n            </li>\n            <li class=\"active\" *ngIf=\"table==2 && identity.type!='local'\">\n              <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 2\" type=\"button\" id=\"btn_tab_for_resolved\">Pendientes<span class=\"badge\">{{inPending.length}}</span></a>\n            </li>\n            <li *ngIf=\"table!=2 && identity.type!='local'\">\n              <a style=\"color: #DDCBA4\" (click)=\"table = 2\" type=\"button\" id=\"btn_tab_for_resolved\">Pendientes<span class=\"badge\">{{inPending.length}}</span></a>\n            </li>\n\n            <li class=\"active\" style=\"margin-left: 5%;\" *ngIf=\"table==3 && identity.type!='local'\">\n              <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 3\" type=\"button\" id=\"btn_tab_for_opened\">Copiados Nuevos<span class=\"badge\">{{inProcessCopiados.length}}</span></a>\n            </li>\n            <li *ngIf=\"table!=3 && identity.type!='local'\" style=\"margin-left: 5%;\">\n              <a style=\"color: #DDCBA4\" (click)=\"table = 3\" type=\"button\" id=\"btn_tab_for_opened\">Copiados Nuevos<span class=\"badge\">{{inProcessCopiados.length}}</span></a>\n            </li>\n            <li class=\"active\" *ngIf=\"table==4 && identity.type!='local'\">\n              <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 4\" type=\"button\" id=\"btn_tab_for_resolved\">Copiados Pendientes<span class=\"badge\">{{inPendingCopiados.length}}</span></a>\n            </li>\n            <li *ngIf=\"table!=4 && identity.type!='local'\">\n              <a style=\"color: #DDCBA4;\" (click)=\"table = 4\" type=\"button\" id=\"btn_tab_for_resolved\">Copiados Pendientes<span class=\"badge\">{{inPendingCopiados.length}}</span></a>\n            </li>\n            <li class=\"active\" *ngIf=\"table==9 && identity.type!='local' && identity.type!='areaManager'\" style=\"margin-left: 6%;\">\n              <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 9\" type=\"button\" id=\"btn_tab_for_resolved\">En CallCenter<span class=\"badge\">{{inProcessInProgres.length}}</span></a>\n            </li>\n            <li *ngIf=\"table!=9 && identity.type!='local' && identity.type!='areaManager'\" style=\"margin-left: 6%;\">\n              <a style=\"color: #DDCBA4;\" (click)=\"table = 9\" type=\"button\" id=\"btn_tab_for_resolved\">En CallCenter<span class=\"badge\">{{inProcessInProgres.length}}</span></a>\n            </li>\n  </ul>\n\n  <ul *ngIf=\"identity.type=='callCenter'\" class=\"nav nav-pills grouping_tabs\">\n    <li class=\"active\" *ngIf=\"table==5\">\n      <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 5\" type=\"button\" id=\"btn_tab_for_opened\">Nuevos CallC.<span class=\"badge\">{{inProcessCallCenter.length}}</span></a>\n    </li>\n    <li *ngIf=\"table!=5\">\n      <a style=\"color: #DDCBA4;\" (click)=\"table = 5\" type=\"button\" id=\"btn_tab_for_opened\">Nuevos CallC<span class=\"badge\">{{inProcessCallCenter.length}}</span></a>\n    </li>\n    <li class=\"active\" *ngIf=\"table==6\">\n      <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 6\" type=\"button\" id=\"btn_tab_for_resolved\">Pendientes CallC.<span class=\"badge\">{{inPendingCallCenter.length}}</span></a>\n    </li>\n    <li *ngIf=\"table!=6\">\n      <a style=\"color: #DDCBA4;\" (click)=\"table = 6\" type=\"button\" id=\"btn_tab_for_resolved\">Pendientes CallC.<span class=\"badge\">{{inPendingCallCenter.length}}</span></a>\n    </li>\n\n    <li class=\"active\" style=\"margin-left: 5%;\" *ngIf=\"table==7\">\n      <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 7\" type=\"button\" id=\"btn_tab_for_opened\">Analista Nuevos<span class=\"badge\">{{inProcessNew.length}}</span></a>\n    </li>\n    <li *ngIf=\"table!=7\" style=\"margin-left: 5%;\">\n      <a style=\"color: #DDCBA4;\" (click)=\"table = 7\" type=\"button\" id=\"btn_tab_for_opened\">Analista Nuevos<span class=\"badge\">{{inProcessNew.length}}</span></a>\n    </li>\n    <li class=\"active\" *ngIf=\"table==8\">\n      <a style=\"color: #3F2021; background-color: #DDCBA4;\" (click)=\"table = 8\" type=\"button\" id=\"btn_tab_for_resolved\">Analista Pendientes<span class=\"badge\">{{inPendingNew.length}}</span></a>\n    </li>\n    <li *ngIf=\"table!=8\">\n      <a style=\"color: #DDCBA4;\" (click)=\"table = 8\" type=\"button\" id=\"btn_tab_for_resolved\">Analista Pendientes<span class=\"badge\">{{inPendingNew.length}}</span></a>\n    </li>\n</ul>\n\n<div class=\"panel panel-default\" style=\"background-color:#DDCBA4; border-color: rgb(71, 71, 71)\">\n<div class=\"panel-body\">\n<!-- <h3 class=\"text-center\">Sin elementos</h3> -->\n<div class=\"portlet-body form\" style=\"margin-top: 2%; font-size: 100%;\">\n  <div *ngIf=\"table==1\" class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <a type=\"button\" style=\"margin-bottom: 0.3%; background-color: green;\" class=\"btn btn-primary\" (click)=\"exportFunction(inProcess)\">Excel <span class=\"glyphicon glyphicon-save\" aria-hidden=\"true\"></span></a>\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inProcess\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy1\" [mfRowsOnPage]=\"20\">\n      <thead>\n        <tr>\n          <th style=\"text-align: center;\"><mfDefaultSorter> <a style=\"color: #3F2021;\"> # </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"codeRequest\"> <a style=\"color: #3F2021;\"> Nombre Común </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"dateOfReport\"> <a style=\"color: #3F2021;\"> Fecha de inicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"> <a style=\"color: #3F2021;\"> Hora </a></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"subCategory\"><a style=\"color: #3F2021;\">Subcategoría </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"service\"><a style=\"color: #3F2021;\"> Servicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"numSerie\"><a style=\"color: #3F2021;\"> Num.Serie </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.category\"> <a style=\"color: #3F2021;\"> Departamento </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.sla\"> <a style=\"color: #3F2021;\"> SLA </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"restantes\"> <a style=\"color: #3F2021;\"> Restante </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"status\"> <a style=\"color: #3F2021;\"> Estatus </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.name\"><a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.area.name\"><a style=\"color: #3F2021;\"> Área </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"analyst.fnames\"><a style=\"color: #3F2021;\"> Analista </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"pasado\"><a style=\"color: #3F2021;\"> Vencido </a></mfDefaultSorter></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style=\"background-color: #dad2c1;\">\n          <td></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio1(search.folio)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria1(search.subcategoria)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio1(search.servicio)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie\" [(ngModel)]=\"search.numSerie\" (ngModelChange)=\"searchNumSerie(search.numSerie)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea1(search.area)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatus\" (ngModelChange)=\"searchEstatus1(search.estatus)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy1(search.reportadoPor)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista1(search.analista)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchAnalista1(search.area)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido1(search.vencido)\"></td>\n        </tr>\n        <tr class=\"odd gradeX\" *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1;\">\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{i + 1}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{i + 1}} </td>\n          <td style=\"text-align: center; padding-top: 0.2%; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> \n            <!-- <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\"> -->\n            <a>\n              <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center; padding-top: 0.2%;\" *ngIf=\"!item.color || identity.type=='local'\">\n            <!-- <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\"> -->\n            <a>\n                <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.service}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.service}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.sla}} h</td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.sla}} h</td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.status!='Solucionado'\">{{item.restantes}}</a> <a *ngIf=\"item.status=='Solucionado'\"></a></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.status!='Solucionado'\">{{item.restantes}}</a> <a *ngIf=\"item.status=='Solucionado'\"></a></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.status\" >{{item.status}} </a> <a *ngIf=\"!item.status\" >{{item.statusCallCenter}}</a> <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.status\" >{{item.status}} </a> <a *ngIf=\"!item.status\" >{{item.statusCallCenter}}</a> <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.reportBy.area\">{{item.reportBy.area.name}}</a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.reportBy.area\">{{item.reportBy.area.name}}</a> </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </td>\n        </tr>\n        <td></td>\n        <td> <a style=\"font-size: 120%;\" *ngIf=\"inProcess\">Total: {{inProcess.length}}</a> </td>\n      </tbody>\n      <tfoot>\n        <tr style=\"background-color: #dad2c1\">\n            <td colspan=\"12\">\n                <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n            </td>\n        </tr>\n        </tfoot>\n    </table>\n  </div>\n\n  <div *ngIf=\"table==2\" class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <a type=\"button\" style=\"margin-bottom: 0.3%; background-color: green;\" class=\"btn btn-primary\" (click)=\"exportFunction(inPending)\">Excel <span class=\"glyphicon glyphicon-save\" aria-hidden=\"true\"></span></a>\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inPending\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy2\" [mfRowsOnPage]=\"20\">\n      <thead>\n        <tr>\n          <th style=\"text-align: center;\"><mfDefaultSorter> <a style=\"color: #3F2021;\"> # </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"codeRequest\"> <a style=\"color: #3F2021;\"> Nombre Común </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"dateOfReport\"> <a style=\"color: #3F2021;\"> Fecha de inicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><a style=\"color: #3F2021;\"> Hora </a></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"subCategory\"> <a style=\"color: #3F2021;\"> Subcategoría </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"service\"> <a style=\"color: #3F2021;\"> Servicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"numSerie\"><a style=\"color: #3F2021;\"> Num.Serie </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.category\"> <a style=\"color: #3F2021;\"> Departamento </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.sla\"> <a style=\"color: #3F2021;\"> SLA </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"restantes\"> <a style=\"color: #3F2021;\"> Restante </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"status\"> <a style=\"color: #3F2021;\"> Estatus </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.name\"> <a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.area.name\"> <a style=\"color: #3F2021;\"> Área </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"analyst.fnames\"> <a style=\"color: #3F2021;\"> Analista </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"pending\"> <a style=\"color: #3F2021;\"> Motivo Pendiente </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"pasado\"> <a style=\"color: #3F2021;\"> Vencido </a></mfDefaultSorter></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style=\"background-color: #dad2c1;\">\n          <td></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio2(search.folio)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria2(search.subcategoria)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio2(search.servicio)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie\" [(ngModel)]=\"search.numSerie\" (ngModelChange)=\"searchNumSerie2(search.numSerie)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea2(search.area)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatus\" (ngModelChange)=\"searchEstatus2(search.estatus)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy2(search.reportadoPor)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchAnalista2(search.area)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista2(search.analista)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"motivoPendiente\" [(ngModel)]=\"search.motivoPendiente\" (ngModelChange)=\"searchMotivoPendiente2(search.motivoPendiente)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido2(search.vencido)\"></td>\n        </tr>\n        <tr class=\"odd gradeX\" *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1;\">\n          <td style=\"text-align: center;\"> {{i + 1}} </td>\n          <td style=\"text-align: center; padding-top: 0.2%;\"> \n            <!-- <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\"> -->\n            <a>\n              <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center;\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center;\"> {{item.service}} </td>\n          <td style=\"text-align: center;\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center;\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center;\"> {{item.issue.sla}} h</td>\n          <td style=\"text-align: center;\"> <a *ngIf=\"item.status!='Solucionado'\">{{item.restantes}}</a> <a *ngIf=\"item.status=='Solucionado'\"></a></td>\n          <td style=\"text-align: center;\"> <a *ngIf=\"item.status\" >{{item.status}} </a> <a *ngIf=\"!item.status\" >{{item.statusCallCenter}}</a> <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center;\"> {{item.reportBy.name}}<label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center;\"> <a *ngIf=\"item.reportBy.area\">{{item.reportBy.area.name}}</a> </td>\n          <td style=\"text-align: center;\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center;\"> <a *ngIf=\"item.datePendieng\">{{item.pending}}</a> </td>\n          <td style=\"text-align: center;\"><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </td>\n        </tr>\n        <td></td>\n        <td> <a style=\"font-size: 120%;\" *ngIf=\"inPending\">Total: {{inPending.length}}</a> </td>\n      </tbody>\n      <tfoot>\n        <tr style=\"background-color: #dad2c1\">\n            <td colspan=\"12\">\n                <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n            </td>\n        </tr>\n        </tfoot>\n    </table>\n  </div>\n\n  <div *ngIf=\"table==3\" class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <a type=\"button\" style=\"margin-bottom: 0.3%; background-color: green;\" class=\"btn btn-primary\" (click)=\"exportFunction(inProcessCopiados)\">Excel <span class=\"glyphicon glyphicon-save\" aria-hidden=\"true\"></span></a>\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inProcessCopiados\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy3\" [mfRowsOnPage]=\"20\">\n      <thead>\n        <tr>\n          <th style=\"text-align: center;\"><mfDefaultSorter> <a style=\"color: #3F2021;\"> # </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"codeRequest\"> <a style=\"color: #3F2021;\"> Nombre Común </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"dateOfReport\"> <a style=\"color: #3F2021;\"> Fecha de inicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"> <a style=\"color: #3F2021;\"> </a>Hora </th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"subCategory\"> <a style=\"color: #3F2021;\"> Subcategoría </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"service\"> <a style=\"color: #3F2021;\"> Servicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"numSerie\"><a style=\"color: #3F2021;\"> Num.Serie </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.category\"> <a style=\"color: #3F2021;\"> Departamento </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.sla\"> <a style=\"color: #3F2021;\"> SLA </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"restantes\"> <a style=\"color: #3F2021;\"> Restante </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"status\"> <a style=\"color: #3F2021;\"> Estatus </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.name\"> <a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.area.name\"> <a style=\"color: #3F2021;\"> Área </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"analyst.fnames\"> <a style=\"color: #3F2021;\"> Analista </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"pasado\"> <a style=\"color: #3F2021;\"> Vencido </a></mfDefaultSorter></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style=\"background-color: #dad2c1;\">\n          <td></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio3(search.folio)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria3(search.subcategoria)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio3(search.servicio)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie\" [(ngModel)]=\"search.numSerie\" (ngModelChange)=\"searchNumSerie3(search.numSerie)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea3(search.area)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatus\" (ngModelChange)=\"searchEstatus3(search.estatus)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy3(search.reportadoPor)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchAnalista3(search.area)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista3(search.analista)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido3(search.vencido)\"></td>\n        </tr>\n        <tr class=\"odd gradeX\" *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1;\">\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{i + 1}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{i + 1}} </td>\n          <td style=\"text-align: center; padding-top: 0.2%; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> \n            <!-- <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\"> -->\n            <a>\n              <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center; padding-top: 0.2%;\" *ngIf=\"!item.color || identity.type=='local'\">\n            <!-- <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\"> -->\n            <a>\n                <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.service}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.service}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.sla}} h</td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.sla}} h</td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.status!='Solucionado'\">{{item.restantes}}</a> <a *ngIf=\"item.status=='Solucionado'\"></a></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.status!='Solucionado'\">{{item.restantes}}</a> <a *ngIf=\"item.status=='Solucionado'\"></a></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.status}} <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.status}} <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.reportBy\">{{item.reportBy.area.name}}</a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.reportBy\">{{item.reportBy.area.name}}</a> </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </td>\n        </tr>\n        <td></td>\n        <td> <a style=\"font-size: 120%;\" *ngIf=\"inProcess\">Total: {{inProcess.length}}</a> </td>\n      </tbody>\n      <tfoot>\n        <tr style=\"background-color: #dad2c1\">\n            <td colspan=\"12\">\n                <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n            </td>\n        </tr>\n        </tfoot>\n    </table>\n  </div>\n\n  <div *ngIf=\"table==4\" class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <a type=\"button\" style=\"margin-bottom: 0.3%; background-color: green;\" class=\"btn btn-primary\" (click)=\"exportFunction(inPendingCopiados)\">Excel <span class=\"glyphicon glyphicon-save\" aria-hidden=\"true\"></span></a>\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inPendingCopiados\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy4\" [mfRowsOnPage]=\"20\">\n      <thead>\n        <tr>\n          <th style=\"text-align: center;\"><mfDefaultSorter> <a style=\"color: #3F2021;\"> # </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"codeRequest\"> <a style=\"color: #3F2021;\"> Nombre Común </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"dateOfReport\"> <a style=\"color: #3F2021;\"> Fecha de inicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"> <a style=\"color: #3F2021;\"> </a>Hora</th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"subCategory\"> <a style=\"color: #3F2021;\"> Subcategoría </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"service\"> <a style=\"color: #3F2021;\"> Servicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"numSerie\"><a style=\"color: #3F2021;\"> Num.Serie </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.category\"> <a style=\"color: #3F2021;\"> Departamento </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.sla\"> <a style=\"color: #3F2021;\"> SLA </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"restantes\"> <a style=\"color: #3F2021;\"> Restante</a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"status\"> <a style=\"color: #3F2021;\"> Estatus </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.name\"> <a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.area.name\"> <a style=\"color: #3F2021;\"> Área </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"analyst.fnames\"> <a style=\"color: #3F2021;\"> Analista </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"pending\"> <a style=\"color: #3F2021;\"> Motivo Pendiente </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"pasado\"> <a style=\"color: #3F2021;\"> Vencido </a></mfDefaultSorter></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style=\"background-color: #dad2c1;\">\n          <td></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio4(search.folio)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria4(search.subcategoria)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio4(search.servicio)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie\" [(ngModel)]=\"search.numSerie\" (ngModelChange)=\"searchNumSerie4(search.numSerie)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea4(search.area)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatus\" (ngModelChange)=\"searchEstatus4(search.estatus)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy4(search.reportadoPor)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchAnalista4(search.area)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista4(search.analista)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"motivoPendiente\" [(ngModel)]=\"search.motivoPendiente\" (ngModelChange)=\"searchMotivoPendiente4(search.motivoPendiente)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido4(search.vencido)\"></td>\n        </tr>\n        <tr class=\"odd gradeX\" *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1;\">\n          <td style=\"text-align: center;\"> {{i + 1}} </td>\n          <td style=\"text-align: center; padding-top: 0.2%;\"> \n            <!-- <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\"> -->\n            <a>\n              <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center;\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center;\"> {{item.service}} </td>\n          <td style=\"text-align: center;\"> {{item.numSerie}} </td>          \n          <td style=\"text-align: center;\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center;\"> {{item.issue.sla}} h</td>\n          <td style=\"text-align: center;\"> <a *ngIf=\"item.status!='Solucionado'\">{{item.restantes}}</a> <a *ngIf=\"item.status=='Solucionado'\"></a></td>\n          <td style=\"text-align: center;\"> {{item.status}} <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center;\"> {{item.reportBy.name}}<label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center;\"> <a *ngIf=\"item.reportBy.area\">{{item.reportBy.area.name}}</a> </td>\n          <td style=\"text-align: center;\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center;\"> <a *ngIf=\"item.datePendieng\">{{item.pending}}</a> </td>\n          <td style=\"text-align: center;\"><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </td>\n        </tr>\n        <td></td>\n        <td> <a style=\"font-size: 120%;\" *ngIf=\"inPending\">Total: {{inPending.length}}</a> </td>\n      </tbody>\n      <tfoot>\n        <tr style=\"background-color: #dad2c1\">\n            <td colspan=\"12\">\n                <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n            </td>\n        </tr>\n        </tfoot>\n    </table>\n  </div>\n\n\n  <div *ngIf=\"table==5\" class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <a type=\"button\" style=\"margin-bottom: 0.3%; background-color: green;\" class=\"btn btn-primary\" (click)=\"exportFunction(inProcessCallCenter)\">Excel <span class=\"glyphicon glyphicon-save\" aria-hidden=\"true\"></span></a>\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inProcessCallCenter\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy5\" [mfRowsOnPage]=\"20\">\n      <thead>\n        <tr>\n          <th style=\"text-align: center;\"><mfDefaultSorter> <a style=\"color: #3F2021;\"> # </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"codeRequest\"> <a style=\"color: #3F2021;\"> Nombre Común </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"dateOfReport\"> <a style=\"color: #3F2021;\"> Fecha de inicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><a style=\"color: #3F2021;\"> Hora </a></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"subCategory\"> <a style=\"color: #3F2021;\"> Subcategoría</a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"service\"> <a style=\"color: #3F2021;\"> Servicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"numSerie\"> <a style=\"color: #3F2021;\"> Num.Serie </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.category\"> <a style=\"color: #3F2021;\"> Departamento </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.slaCallCenter\"> <a style=\"color: #3F2021;\"> SLA CC </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"restantes\"> <a style=\"color: #3F2021;\"> Restante </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"statusCallCenter\"> <a style=\"color: #3F2021;\"> Estatus </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.name\"> <a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"area.name\"> <a style=\"color: #3F2021;\"> Área </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"analyst.fnames\"> <a style=\"color: #3F2021;\"> Analista </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"pasadoCallCenter\"> <a style=\"color: #3F2021;\"> Vencido </a></mfDefaultSorter></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style=\"background-color: #dad2c1;\">\n          <td></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio5(search.folio)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria5(search.subcategoria)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio5(search.servicio)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie\" [(ngModel)]=\"search.numSerie\" (ngModelChange)=\"searchNumSerie5(search.numSerie)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea5(search.area)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatus\" (ngModelChange)=\"searchEstatus5(search.estatus)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy5(search.reportadoPor)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista5(search.analista)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchAnalista5(search.area)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido5(search.vencido)\"></td>\n        </tr>\n        <tr class=\"odd gradeX\" *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1;\">\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{i + 1}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{i + 1}} </td>\n          <td style=\"text-align: center; padding-top: 0.2%; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> \n            <!-- <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\"> -->\n            <a>\n              <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center; padding-top: 0.2%;\" *ngIf=\"!item.color || identity.type=='local'\">\n            <!-- <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\"> -->\n            <a>\n                <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.service}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.service}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.slaCallCenter}} h</td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.slaCallCenter}} h</td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.statusCallCenter!='SolucionadoCallCenter'\">{{item.restantesCallCenter}}</a> <a *ngIf=\"item.statusCallCenter=='SolucionadoCallCenter'\"></a></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.statusCallCenter!='SolucionadoCallCenter'\">{{item.restantesCallCenter}}</a> <a *ngIf=\"item.statusCallCenter=='SolucionadoCallCenter'\"></a></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.statusCallCenter}} <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.statusCallCenter}} <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.area\">{{item.area.name}}</a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.area\">{{item.area.name}}</a> </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"><a *ngIf=\"!item.pasadoCallCenter && item.pasadoCallCenter!='red'\"> </a> <a  *ngIf=\"item.pasadoCallCenter && item.pasadoCallCenter=='red'\"> Si </a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"><a *ngIf=\"!item.pasadoCallCenter && item.pasadoCallCenter!='red'\"> </a> <a  *ngIf=\"item.pasadoCallCenter && item.pasadoCallCenter=='red'\"> Si </a> </td>\n        </tr>\n        <td></td>\n        <td> <a style=\"font-size: 120%;\" *ngIf=\"inProcessCallCenter\">Total: {{inProcessCallCenter.length}}</a> </td>\n      </tbody>\n      <tfoot>\n        <tr style=\"background-color: #dad2c1\">\n            <td colspan=\"12\">\n                <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n            </td>\n        </tr>\n        </tfoot>\n    </table>\n  </div>\n\n  <div *ngIf=\"table==6\" class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <a type=\"button\" style=\"margin-bottom: 0.3%; background-color: green;\" class=\"btn btn-primary\" (click)=\"exportFunction(inPendingCallCenter)\">Excel <span class=\"glyphicon glyphicon-save\" aria-hidden=\"true\"></span></a>\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inPendingCallCenter\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy6\" [mfRowsOnPage]=\"20\">\n      <thead>\n        <tr>\n          <th style=\"text-align: center;\"><mfDefaultSorter> <a style=\"color: #3F2021;\"> # </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"codeRequest\"> <a style=\"color: #3F2021;\"> Nombre Común </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"dateOfReport\"> <a style=\"color: #3F2021;\"> Fecha de inicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"> <a style=\"color: #3F2021;\"> Hora </a></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"subCategory\"> <a style=\"color: #3F2021;\"> Subcategoría </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"service\"> <a style=\"color: #3F2021;\"> Servicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"numSerie\"> <a style=\"color: #3F2021;\"> Num.Serie </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.category\"> <a style=\"color: #3F2021;\"> Departamento </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.slaCallCenter\"> <a style=\"color: #3F2021;\"> SLA CC </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"restantesCallCenter\"> <a style=\"color: #3F2021;\"> Restante </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"statusCallCenter\"> <a style=\"color: #3F2021;\"> Estatus </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.name\"> <a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"area.name\"> <a style=\"color: #3F2021;\"> Área </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"analyst.fnames\"> <a style=\"color: #3F2021;\"> Analista </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"pendingCallCenter\"> <a style=\"color: #3F2021;\"> Motivo Pendiente </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"pasadoCallCenter\"> <a style=\"color: #3F2021;\"> Vencido </a></mfDefaultSorter></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style=\"background-color: #dad2c1;\">\n          <td></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio6(search.folio)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria6(search.subcategoria)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio6(search.servicio)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie\" [(ngModel)]=\"search.numSerie\" (ngModelChange)=\"searchNumSerie6(search.numSerie)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea6(search.area)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatusCallCenter\" [(ngModel)]=\"search.estatusCallCenter\" (ngModelChange)=\"searchEstatus6(search.estatusCallCenter)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy6(search.reportadoPor)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchAnalista6(search.area)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista6(search.analista)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"pendingCallCenter\" [(ngModel)]=\"search.pendingCallCenter\" (ngModelChange)=\"searchAnalista6(search.pendingCallCenter)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido6(search.vencido)\"></td>\n        </tr>\n        <tr class=\"odd gradeX\" *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1;\">\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{i + 1}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{i + 1}} </td>\n          <td style=\"text-align: center; padding-top: 0.2%; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> \n            <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\">\n            <!-- <a href=\"http://localhost:4200/requestDetail/{{item.codeRequest}}\"> -->\n              <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center; padding-top: 0.2%;\" *ngIf=\"!item.color || identity.type=='local'\">\n            <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\">\n            <!-- <a href=\"http://localhost:4200/requestDetail/{{item.codeRequest}}\"> -->\n                <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.service}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.service}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.slaCallCenter}} h</td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.slaCallCenter}} h</td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.statusCallCenter!='SolucionadoCallCenter'\">{{item.restantesCallCenter}}</a> <a *ngIf=\"item.statusCallCenter=='SolucionadoCallCenter'\"></a></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.statusCallCenter!='SolucionadoCallCenter'\">{{item.restantesCallCenter}}</a> <a *ngIf=\"item.statusCallCenter=='SolucionadoCallCenter'\"></a></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.statusCallCenter}} <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.statusCallCenter}} <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.area\">{{item.area.name}}</a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.area\">{{item.area.name}}</a> </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.pendingCallCenter\">{{item.pendingCallCenter}}</a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.pendingCallCenter\">{{item.pendingCallCenter}}</a> </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"><a *ngIf=\"!item.pasadoCallCenter && item.pasadoCallCenter!='red'\"> </a> <a  *ngIf=\"item.pasadoCallCenter && item.pasadoCallCenter=='red'\"> Si </a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"><a *ngIf=\"!item.pasadoCallCenter && item.pasadoCallCenter!='red'\"> </a> <a  *ngIf=\"item.pasadoCallCenter && item.pasadoCallCenter=='red'\"> Si </a> </td>\n        </tr>\n        <td></td>\n        <td> <a style=\"font-size: 120%;\" *ngIf=\"inPendingCallCenter\">Total: {{inPendingCallCenter.length}}</a> </td>\n      </tbody>\n      <tfoot>\n        <tr tyle=\"background-color: #dad2c1\">\n            <td colspan=\"12\">\n                <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n            </td>\n        </tr>\n        </tfoot>\n    </table>\n  </div>\n\n  <div *ngIf=\"table==7\" class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <a type=\"button\" style=\"margin-bottom: 0.3%; background-color: green;\" class=\"btn btn-primary\" (click)=\"exportFunction(inProcessNew)\">Excel <span class=\"glyphicon glyphicon-save\" aria-hidden=\"true\"></span></a>\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inProcessNew\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy7\" [mfRowsOnPage]=\"20\">\n      <thead>\n        <tr>\n          <th style=\"text-align: center;\"><mfDefaultSorter> <a style=\"color: #3F2021;\"> # </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"codeRequest\"> <a style=\"color: #3F2021;\"> Nombre Común </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"dateOfReport\"> <a style=\"color: #3F2021;\"> Fecha de inicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"> <a style=\"color: #3F2021;\"> Hora </a></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"subCategory\"> <a style=\"color: #3F2021;\"> Subcategoría </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"service\"> <a style=\"color: #3F2021;\"> Servicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"numSerie\"> <a style=\"color: #3F2021;\"> Num.Serie </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.category\"> <a style=\"color: #3F2021;\"> Departamento </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.sla\"> <a style=\"color: #3F2021;\"> SLA </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"restantes\"> <a style=\"color: #3F2021;\"> Restante </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"status\"> <a style=\"color: #3F2021;\"> Estatus </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.name\"> <a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"area.name\"> <a style=\"color: #3F2021;\"> Área </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"analyst.fnames\"> <a style=\"color: #3F2021;\"> Analista </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"pasado\"> <a style=\"color: #3F2021;\"> Vencido </a></mfDefaultSorter></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style=\"background-color: #dad2c1;\">\n          <td></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio7(search.folio)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria7(search.subcategoria)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio7(search.servicio)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie\" [(ngModel)]=\"search.numSerie\" (ngModelChange)=\"searchNumSerie7(search.numSerie)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea7(search.area)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatus\" (ngModelChange)=\"searchEstatus7(search.estatus)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy7(search.reportadoPor)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchAnalista7(search.area)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista7(search.analista)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido7(search.vencido)\"></td>\n        </tr>\n        <tr class=\"odd gradeX\" *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1;\">\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{i + 1}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{i + 1}} </td>\n          <td style=\"text-align: center; padding-top: 0.2%; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> \n            <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\">\n            <!-- <a href=\"http://localhost:4200/requestDetail/{{item.codeRequest}}\"> -->\n              <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center; padding-top: 0.2%;\" *ngIf=\"!item.color || identity.type=='local'\">\n            <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\">\n            <!-- <a href=\"http://localhost:4200/requestDetail/{{item.codeRequest}}\"> -->\n                <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.service}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.service}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.sla}} h</td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.sla}} h</td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.status!='Solucionado'\">{{item.restantes}}</a> <a *ngIf=\"item.status=='Solucionado'\"></a></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.status!='Solucionado'\">{{item.restantes}}</a> <a *ngIf=\"item.status=='Solucionado'\"></a></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.status}} <label *ngIf=\"item.reaperturado && item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.status}} <label *ngIf=\"item.reaperturado && item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.area\">{{item.area.name}}</a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.area\">{{item.area.name}}</a> </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </td>\n        </tr>\n        <td></td>\n        <td> <a style=\"font-size: 120%;\" *ngIf=\"inProcessNew\">Total: {{inProcessNew.length}}</a> </td>\n      </tbody>\n      <tfoot>\n        <tr style=\"background-color: #dad2c1;\">\n            <td colspan=\"12\">\n                <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n            </td>\n        </tr>\n        </tfoot>\n    </table>\n  </div>\n\n\n\n  <div *ngIf=\"table==8\" class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <a type=\"button\" style=\"margin-bottom: 0.3%; background-color: green;\" class=\"btn btn-primary\" (click)=\"exportFunction(inPendingNew)\">Excel <span class=\"glyphicon glyphicon-save\" aria-hidden=\"true\"></span></a>\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inPendingNew\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy8\" [mfRowsOnPage]=\"20\">\n      <thead>\n        <tr>\n          <th style=\"text-align: center;\"><mfDefaultSorter> <a style=\"color: #3F2021;\"> # </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"codeRequest\"> <a style=\"color: #3F2021;\"> Nombre Común </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"dateOfReport\"> <a style=\"color: #3F2021;\"> Fecha de inicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><a style=\"color: #3F2021;\"> </a>Hora</th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"subCategory\"> <a style=\"color: #3F2021;\"> Subcategoría </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"service\"> <a style=\"color: #3F2021;\"> Servicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"numSerie\"> <a style=\"color: #3F2021;\"> Num.Serie </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.category\"> <a style=\"color: #3F2021;\"> Departamento </a></mfDefaultSorter></th>\n          <th style=\"text-align: center; width: 5%;\"><mfDefaultSorter by=\"issue.sla\"> <a style=\"color: #3F2021;\"> SLA </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"restantes\"> <a style=\"color: #3F2021;\"> Restante </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"status\"> <a style=\"color: #3F2021;\"> Estatus </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.name\"> <a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"area.name\"> <a style=\"color: #3F2021;\"> Área </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"analyst.fnames\"> <a style=\"color: #3F2021;\"> Analista </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"pasado\"> <a style=\"color: #3F2021;\"> Vencido </a></mfDefaultSorter></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style=\"background-color: #dad2c1;\">\n          <td></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio8(search.folio)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria8(search.subcategoria)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio8(search.servicio)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie\" [(ngModel)]=\"search.numSerie\" (ngModelChange)=\"searchNumSerie8(search.numSerie)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea8(search.area)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatus\" (ngModelChange)=\"searchEstatus8(search.estatus)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy8(search.reportadoPor)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchAnalista8(search.area)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista8(search.analista)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido8(search.vencido)\"></td>\n        </tr>\n        <tr class=\"odd gradeX\" *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1;\">\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{i + 1}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{i + 1}} </td>\n          <td style=\"text-align: center; padding-top: 0.2%; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> \n            <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\">\n            <!-- <a href=\"http://localhost:4200/requestDetail/{{item.codeRequest}}\"> -->\n              <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center; padding-top: 0.2%;\" *ngIf=\"!item.color || identity.type=='local'\">\n            <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\">\n            <!-- <a href=\"http://localhost:4200/requestDetail/{{item.codeRequest}}\"> -->\n                <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.service}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.service}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.sla}} h</td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.sla}} h</td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.status!='Solucionado'\">{{item.restantes}}</a> <a *ngIf=\"item.status=='Solucionado'\"></a></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.status!='Solucionado'\">{{item.restantes}}</a> <a *ngIf=\"item.status=='Solucionado'\"></a></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.status}} <label *ngIf=\"item.reaperturado && item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.status}} <label *ngIf=\"item.reaperturado && item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.area\">{{item.area.name}}</a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.area\">{{item.area.name}}</a> </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"><a *ngIf=\"!item.pasado && item.pasado!='red'\"> </a> <a  *ngIf=\"item.pasado && item.pasado=='red'\"> Si </a> </td>\n        </tr>\n        <td></td>\n        <td> <a style=\"font-size: 120%;\" *ngIf=\"inPendingNew\">Total: {{inPendingNew.length}}</a> </td>\n      </tbody>\n      <tfoot>\n        <tr style=\"background-color: #dad2c1;\">\n            <td colspan=\"12\">\n                <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n            </td>\n        </tr>\n        </tfoot>\n    </table>\n  </div>\n\n\n  <div *ngIf=\"table==9\" class=\"col-md-12\" style=\"width: 100%; height: 100%; overflow-x: scroll;\">\n    <a type=\"button\" style=\"margin-bottom: 0.3%; background-color: green;\" class=\"btn btn-primary\" (click)=\"exportFunction(inProcessInProgres)\">Excel <span class=\"glyphicon glyphicon-save\" aria-hidden=\"true\"></span></a>\n    <table class=\"table table-striped table-bordered table-hover table-checkable order-column\" [mfData]=\"inProcessInProgres\" #mf=\"mfDataTable\" [(mfSortBy)]=\"sortBy9\" [mfRowsOnPage]=\"20\">\n      <thead>\n        <tr>\n          <th style=\"text-align: center;\"><mfDefaultSorter> <a style=\"color: #3F2021;\"> # </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"codeRequest\"> <a style=\"color: #3F2021;\"> Nombre Común </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"dateOfReport\"> <a style=\"color: #3F2021;\"> Fecha de inicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><a style=\"color: #3F2021;\"> Hora </a></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"subCategory\"> <a style=\"color: #3F2021;\"> Subcategoría </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"service\"> <a style=\"color: #3F2021;\"> Servicio </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"numSerie\"><a style=\"color: #3F2021;\"> Num.Serie </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.category\"> <a style=\"color: #3F2021;\"> Departamento </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"issue.slaCallCenter\"> <a style=\"color: #3F2021;\"> SLA CC </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"restantes\"> <a style=\"color: #3F2021;\"> Restante </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"statusCallCenter\"> <a style=\"color: #3F2021;\"> Estatus </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"reportBy.name\"> <a style=\"color: #3F2021;\"> Reportado por </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"analyst.fnames\"> <a style=\"color: #3F2021;\"> Analista </a></mfDefaultSorter></th>\n          <th style=\"text-align: center;\"><mfDefaultSorter by=\"pasadoCallCenter\"> Vencido <a style=\"color: #3F2021;\"> </a></mfDefaultSorter></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr style=\"background-color: #dad2c1;\">\n          <td></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"folio\" [(ngModel)]=\"search.folio\" (ngModelChange)=\"searchFolio9(search.folio)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"subcategoria\" [(ngModel)]=\"search.subcategoria\" (ngModelChange)=\"searchSubcategoria9(search.subcategoria)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"servicio\" [(ngModel)]=\"search.servicio\" (ngModelChange)=\"searchServicio9(search.servicio)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"numSerie\" [(ngModel)]=\"search.numSerie\" (ngModelChange)=\"searchNumSerie9(search.numSerie)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"search.area\" (ngModelChange)=\"searchArea9(search.area)\"></td>\n          <td> </td>\n          <td> </td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"estatus\" [(ngModel)]=\"search.estatus\" (ngModelChange)=\"searchEstatus9(search.estatus)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"reportadoPor\" [(ngModel)]=\"search.reportadoPor\" (ngModelChange)=\"searchReportBy9(search.reportadoPor)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"analista\" [(ngModel)]=\"search.analista\" (ngModelChange)=\"searchAnalista9(search.analista)\"></td>\n          <td> <input type=\"text\" style=\"width: 100%; background-color: #e1e1e1;\" #name=\"ngModel\" name=\"vencido\" [(ngModel)]=\"search.vencido\" (ngModelChange)=\"searchVencido9(search.vencido)\"></td>\n        </tr>\n        <tr class=\"odd gradeX\" *ngFor=\"let item of mf.data; let i = index\" style=\"background-color: #dad2c1;\">\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{i + 1}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{i + 1}} </td>\n          <td style=\"text-align: center; padding-top: 0.2%; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> \n            <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\">\n            <!-- <a href=\"http://localhost:4200/requestDetail/{{item.codeRequest}}\"> -->\n              <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center; padding-top: 0.2%;\" *ngIf=\"!item.color || identity.type=='local'\">\n            <a href=\"https://soporte.timhortonsmx.com/requestDetail/{{item.codeRequest}}\">\n            <!-- <a href=\"http://localhost:4200/requestDetail/{{item.codeRequest}}\"> -->\n                <button type=\"button\" class=\"btn\" style=\"color: #ca243d;\">{{item.codeRequest}}</button>\n            </a>\n          </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeDate(item.dateOfReport)}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{momentTimeHour(item.dateOfReport)}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.subCategory}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.service}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.service}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.numSerie}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.category}} </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.issue.slaCallCenter}} h</td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.issue.slaCallCenter}} h</td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.statusCallCenter!='SolucionadoCallCenter'\">{{item.restantesCallCenter}}</a> <a *ngIf=\"item.statusCallCenter=='SolucionadoCallCenter'\"></a></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.statusCallCenter!='SolucionadoCallCenter'\">{{item.restantesCallCenter}}</a> <a *ngIf=\"item.statusCallCenter=='SolucionadoCallCenter'\"></a></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.statusCallCenter}} <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.statusCallCenter}} <label *ngIf=\"item.reaperturado[0]\">Reaperturado</label></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> {{item.reportBy.name}} <label *ngIf=\"item.reportByAm\" style=\"font-size: 90%;\"> - {{item.manager}}</label></td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"> <a *ngIf=\"item.analyst\">{{item.analyst.fnames}}</a> </td>\n          <td style=\"text-align: center; background-color: #FFF1A4;\" *ngIf=\"item.color && identity.type!='local'\"><a *ngIf=\"!item.pasadoCallCenter && item.pasadoCallCenter!='red'\"> </a> <a  *ngIf=\"item.pasadoCallCenter && item.pasadoCallCenter=='red'\"> Si </a> </td>\n          <td style=\"text-align: center;\" *ngIf=\"!item.color || identity.type=='local'\"><a *ngIf=\"!item.pasadoCallCenter && item.pasadoCallCenter!='red'\"> </a> <a  *ngIf=\"item.pasadoCallCenter && item.pasadoCallCenter=='red'\"> Si </a> </td>\n        </tr>\n        <td></td>\n        <td> <a style=\"font-size: 120%;\" *ngIf=\"inProcessCallCenter\">Total: {{inProcessCallCenter.length}}</a> </td>\n      </tbody>\n      <tfoot>\n        <tr style=\"background-color: #dad2c1;\">\n            <td colspan=\"12\">\n                <mfBootstrapPaginator [rowsOnPageSet]=\"[20,50,100,1000,10000]\"></mfBootstrapPaginator>\n            </td>\n        </tr>\n        </tfoot>\n    </table>\n  </div>\n\n\n\n  </div>\n\n\n</div>\n</div>\n</div>\n    </section>\n\n    <div *ngIf=\"load==true\">\n      <div id=\"loader-wrapper\">\n        <div id=\"loader\"></div>\n      </div>\n    </div>\n\n<!-- Modal -->\n<div *ngIf=\"issue\" class=\"modal fade\" id=\"exampleModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-xl\" style=\"width: 100%;\" role=\"dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\" style=\"background-color: #5e5e5e; color: #ffffff;\">\n        <h4 class=\"modal-title;\" id=\"exampleModalLabel\" style=\"color: rgb(255, 255, 255); position: fixed; left: 2%\">  Actualizando  {{issue.codeRequest}}  (Requerimiento) - {{issue.issue.category}} </h4>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"position: fixed; right: 2%; color: rgb(255, 255, 255);\">\n          <span  aria-hidden=\"true\" >&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">     \n\n        <div class=\"col-md-7\" style=\"margin-top: 10px; margin-bottom: 20px;\">\n        <div class=\"card\" style=\"width: 100%; height: 100%; background-color: #f7f7f7;\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <label style=\"text-align: left; margin-top: -30px; margin-left: 20px;\"><h4>Información General</h4></label>\n\n              <div>\n                <div class=\"col-md-5\" style=\"margin-top: 1%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">servicio </label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.service}} </label>      \n                  </div>          \n                </div>\n                <div class=\"col-md-7\" style=\"margin-top: 1%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Subcategoría </label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.subCategory}} </label>      \n                  </div>          \n                </div>\n              </div>\n\n              <div>\n                <div class=\"col-md-5\" style=\"margin-top: 4%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Sucursal</label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.reportBy.name}} </label>      \n                  </div>          \n                </div>\n                <div class=\"col-md-7\" style=\"margin-top: 4%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Reportado por </label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.manager}} </label>      \n                  </div>          \n                </div>\n              </div>\n\n\n              <div>\n                <div class=\"col-md-12\" style=\"margin-top: 4%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Descripción</label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.description}} </label>      \n                  </div>          \n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-md-5\" style=\"margin-top: 10px; margin-bottom: 20px;\">\n        <div class=\"card\" style=\"width: 100%; height: 100%; background-color: #f7f7f7;\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <label style=\"text-align: left; margin-top: -30px; margin-left: 20px;\"><h4>Clasificación & Fechas</h4></label>\n              <div>\n                <div class=\"col-md-5\" style=\"margin-top: 1%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Estatus </label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.status}} </label>      \n                  </div>          \n                </div>\n                <div class=\"col-md-7\" style=\"margin-top: 1%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Fecha de inicio </label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.dateOfReport}} </label>      \n                  </div>          \n                </div>\n              </div>\n              \n              <div style=\"margin-top: 4%;\">\n                <div class=\"col-md-5\" style=\"margin-top: 1%;\">\n                  <div class=\"col-md-12\" *ngIf=\"issue.analyst\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Analista </label>\n                  </div>\n                  <div class=\"col-md-12\" *ngIf=\"issue.analyst\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.analyst}} </label>      \n                  </div>          \n                </div>\n                <div class=\"col-md-7\" style=\"margin-top: 1%;\">\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #575757; font-weight:0;\">Última actualización </label>\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label style=\"text-align: left; color: #747474; font-weight:30;\">- {{issue.dateLastUpdate}} </label>      \n                  </div>          \n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-md-12\" style=\"margin-top: 20px;\" *ngFor=\"let item of issue.notes; let i = index\">\n      <div class=\"col-md-12\">\n        <textarea name=\"note\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"1\" cols=\"1\" [disabled]=\"true\">{{momentTime(item.dateOfNote)}} : {{item.noteBy}} </textarea>\n    </div>\n      <div class=\"col-md-12\" style=\"margin-top: 2px;\">\n        <textarea name=\"note\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\" [disabled]=\"true\"> {{item.note}} </textarea>\n    </div>\n      </div>\n    <div class=\"col-md-12\" style=\"margin-top: 40px;\">\n      <label style=\"text-align: left; color: #575757; font-weight:0;\">Bitácora pública </label>\n      <textarea *ngIf=\"identity.type == 'local'\" #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.note\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n      <textarea *ngIf=\"identity.type != 'local' && issue.status == 'Nuevo'\" #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.note\" class=\"form-control\" placeholder=\"Para escribir Asignate el timcket\" rows=\"5\" cols=\"40\" [disabled]=\"true\"></textarea>\n      <textarea *ngIf=\"identity.type != 'local' && issue.status != 'Nuevo'\" #name=\"ngModel\"  name=\"note\" [(ngModel)]=\"issue.note\" class=\"form-control\" placeholder=\"Escribe aquí tus comentarios\" rows=\"5\" cols=\"40\"></textarea>\n  </div>\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #dddddd; color: #1b1b1b;\" data-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" *ngIf=\"identity.type == 'local' || issue.status != 'Nuevo'\" (click)=\"sendNotes(issue)\">Enviar</button>\n        <button type=\"button\" class=\"btn btn-secondary\" style=\"background-color: #d63245;\" *ngIf=\"identity.type != 'local' && issue.status == 'Nuevo'\" (click)=\"sendNotes(issue)\">Asignar</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<style>\n\n#loader-wrapper {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1000;\n}\n\n#loader {\n  display: block;\n  position: relative;\n  left: 50%;\n  top: 50%;\n  width: 150px;\n  height: 150px;\n  margin: -75px 0 0 -75px;\n  border-radius: 50%;\n  border: 3px solid transparent;\n  border-top-color:#f53737;\n  -webkit-animation: spin 2s linear infinite;\n  /* Chrome, Opera 15+, Safari 5+ */\n  animation: spin 2s linear infinite;\n  /* Chrome, Firefox 16+, IE 10+, Opera */\n}\n\n#loader:before {\n  content: \"\";\n  position: absolute;\n  top: 5px;\n  left: 5px;\n  right: 5px;\n  bottom: 5px;\n  border-radius: 50%;\n  border: 3px solid transparent;\n  border-top-color: #eeeeee;\n  -webkit-animation: spin 3s linear infinite;\n  /* Chrome, Opera 15+, Safari 5+ */\n  animation: spin 3s linear infinite;\n  /* Chrome, Firefox 16+, IE 10+, Opera */\n}\n\n#loader:after {\n  content: \"\";\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n  border-radius: 50%;\n  border: 3px solid transparent;\n  border-top-color: #bb2121;\n  -webkit-animation: spin 1.5s linear infinite;\n  /* Chrome, Opera 15+, Safari 5+ */\n  animation: spin 1.5s linear infinite;\n  /* Chrome, Firefox 16+, IE 10+, Opera */\n}\n\n@-webkit-keyframes spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(0deg);\n    /* IE 9 */\n    transform: rotate(0deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n\n  100% {\n    -webkit-transform: rotate(360deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(360deg);\n    /* IE 9 */\n    transform: rotate(360deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n}\n\n@keyframes spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(0deg);\n    /* IE 9 */\n    transform: rotate(0deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n\n  100% {\n    -webkit-transform: rotate(360deg);\n    /* Chrome, Opera 15+, Safari 3.1+ */\n    -ms-transform: rotate(360deg);\n    /* IE 9 */\n    transform: rotate(360deg);\n    /* Firefox 16+, IE 10+, Opera */\n  }\n}\n\n</style>"

/***/ }),

/***/ 1064:
/***/ (function(module, exports) {

module.exports = "\n\n<h1>{{title}}</h1>\n\n<div class=\"card\" style=\"width: 100%; height: 100%;\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n\n\n            <form #userUpdateForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" class=\"col-md-10\">\n                <div class=\"col-lg-6\">\n                    <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                        <label class=\"col-md-3\" style=\"text-align: right; margin-top: 5px;\">Usuario:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" #name=\"ngModel\" name=\"userLog\" [(ngModel)]=\"users.userLog\" [disabled]=\"true\" class=\"form-control\"/>\n                        </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-md-12\" style=\"margin-top: 30px;\">\n                        <label class=\"col-md-3\" style=\"text-align: right; margin-top: 5px;\">Correo:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" #name=\"ngModel\" name=\"email\" [(ngModel)]=\"users.email\" [disabled]=\"true\" class=\"form-control\"/>\n                        </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-md-12\" style=\"margin-top: 30px;\">\n                        <label class=\"col-md-3\" style=\"text-align: right; margin-top: 5px;\">Perfil:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" #name=\"ngModel\" name=\"type\" [(ngModel)]=\"users.type\" [disabled]=\"true\" class=\"form-control\"/>\n                        </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div *ngIf=\"users.department\" class=\"col-md-12\" style=\"margin-top: 30px;\">\n                        <label class=\"col-md-3\" style=\"text-align: right; margin-top: 5px;\">Departamento:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" #name=\"ngModel\" name=\"department\" [(ngModel)]=\"users.department.name\" [disabled]=\"true\" class=\"form-control\"/>\n                        </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div *ngIf=\"users.responsable\" class=\"col-md-12\" style=\"margin-top: 30px;\">\n                        <label class=\"col-md-3\" style=\"text-align: right; margin-top: 5px;\">Responsable:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" #name=\"ngModel\" name=\"responsable\" [(ngModel)]=\"users.responsable.fname + ' ' + users.responsable.lname \" [disabled]=\"true\" class=\"form-control\"/>\n                        </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div id=\"icon\" *ngIf=\"activeChange == true\">\n                        <span class=\"glyphicon glyphicon-user\" aria-hidden=\"true\"></span>\n                    </div>\n                    <div class=\"clearfix\"></div>\n                </div>\n\n\n                <div class=\"col-lg-6\">\n                    <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                        <label class=\"col-md-3\" style=\"text-align: right; margin-top: 5px;\">Nombre:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" #name=\"ngModel\" name=\"fname\" [(ngModel)]=\"users.fname\" [disabled]=\"true\" class=\"form-control\"/>\n                        </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-md-12\" style=\"margin-top: 30px;\">\n                        <label class=\"col-md-3\" style=\"text-align: right; margin-top: 5px;\">Apellido:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" #name=\"ngModel\" name=\"lname\" [(ngModel)]=\"users.lname\" [disabled]=\"true\" class=\"form-control\"/>\n                        </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-md-12\" style=\"margin-top: 30px;\">\n                        <label class=\"col-md-3\" style=\"text-align: right; margin-top: 5px;\">Teléfono:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" #name=\"ngModel\" name=\"phone\" [(ngModel)]=\"users.phone\" [disabled]=\"true\" class=\"form-control\"/>\n                        </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div *ngIf=\"activeChange != true\" class=\"col-md-11\" style=\"margin-top: 30px ;margin-bottom: 5%; text-align: center;\">\n                        <span class=\"btn btn-primary\" (click)=\"changePassword()\" >\n                            Cambiar contraseña\n                        </span>\n                    </div>\n\n                    <div *ngIf=\"activeChange == true\" style=\"margin-top: 30px ;margin-bottom: 5%;\">\n                        <div class=\"col-md-12\" style=\"margin-top: 30px;\">\n                            <label class=\"col-md-4\" style=\"text-align: right;\">Nueva contraseña:</label>\n                            <div class=\"col-md-7\">\n                                <input type=\"password\" #name=\"ngModel\" name=\"password\" [(ngModel)]=\"password\" class=\"form-control\"/>\n                            </div>\n                        </div>\n                        <div class=\"clearfix\"></div>\n\n                        <div class=\"col-md-12\" style=\"margin-top: 30px;\">\n                            <label class=\"col-md-4\" style=\"text-align: right;\">Nueva contraseña:</label>\n                            <div class=\"col-md-7\">\n                                <input type=\"password\" #name=\"ngModel\" name=\"password2\" [(ngModel)]=\"password2\" class=\"form-control\"/>\n                            </div>\n                        </div>\n                        <div class=\"clearfix\"></div>\n                        <div class=\"col-md-11\" style=\"margin-top: 30px ;margin-bottom: 5%; text-align: center;\">\n                            <span class=\"btn btn-primary\" (click)=\"changePassword2()\" >\n                                Cambiar contraseña\n                            </span>\n                        </div>\n                    </div>\n\n                </div>\n\n            </form>\n\n        </div>\n\n        <div class=\"clearfix\"></div>\n\n\n    </div>\n</div>\n\n<style>\n#icon{\n    font-size: 100px;\n    text-align: center;\n    margin-top: 70px;\n    }\n\n.card{\n    background-color: rgb(248, 248, 248);\n}\n</style>"

/***/ }),

/***/ 1065:
/***/ (function(module, exports) {

module.exports = "    <h1>{{title}}</h1>\n\n    <div class=\"card\" style=\"width: 100%; height: 100%;\">\n        <div class=\"card-body\">\n            <div class=\"row\">\n    \n    <form #userNewForm=\"ngForm\" (ngSubmit)=\"onSubmitNew()\" class=\"col-md-10\">\n        <div class=\"col-lg-6\">\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\" >\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Perfil:</label>\n                <div class=\"col-md-8\">\n                    <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"users.type\" >\n                        <option value=\"\">▼</option>\n                        <option value=\"superAdmin\">Super Admin</option>\n                        <option value=\"admin\">Administrador</option>\n                        <option value=\"areaManager\">Area Manager</option>\n                        <option value=\"callCenter\">Call Center</option>\n                        <option value=\"proveedor\">Proveedor</option>\n                        <option value=\"local\">Sucursal</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n\n            <div *ngIf=\"users.type != 'local'\" class=\"col-md-12\" style=\"margin-top: 15px;\" >\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Departamento:</label>\n                <div class=\"col-md-8\">\n                    <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"users.department\" >\n                        <option value=\"\">▼</option>\n                        <option *ngFor=\"let department of departments; let i = index\" value={{department._id}}>{{department.name}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div *ngIf=\"users.type != 'local'\" class=\"col-md-12\" style=\"margin-top: 15px;\" >\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Empresa:</label>\n                <div class=\"col-md-8\">\n                    <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"users.business\" >\n                        <option value=\"\">▼</option>\n                        <option *ngFor=\"let proveedor of proveedores; let i = index\" value={{proveedor._id}}>{{proveedor.name}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\" >\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Estado:</label>\n                <div class=\"col-md-8\">\n                    <select class=\"form-control\" #name=\"ngModel\" name=\"select\" [(ngModel)]=\"users.state\" >\n                        <option value=\"\">▼</option>\n                        <option value=\"NuevoLeón\">NuevoLeón</option>\n                        <option value=\"Coahuila\">Coahuila</option>\n                        <option value=\"Querétaro\">Querétaro</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n\n            <div *ngIf=\"users.type != 'local'\" class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Nombre:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" #name=\"ngModel\" name=\"fname\" [(ngModel)]=\"users.fname\" class=\"form-control\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div *ngIf=\"users.type != 'local'\" class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Apellido:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" #name=\"ngModel\" name=\"lname\" [(ngModel)]=\"users.lname\" class=\"form-control\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div *ngIf=\"users.type == 'local'\"  class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Nombre:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" #name=\"ngModel\" name=\"name\" [(ngModel)]=\"users.name\" class=\"form-control\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Usuario:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" #name=\"ngModel\" name=\"userLog\" [(ngModel)]=\"users.userLog\" class=\"form-control\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Correo:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"email\" #name=\"ngModel\" name=\"email\" [(ngModel)]=\"users.email\" class=\"form-control\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div *ngIf=\"users.type != 'local' && users.type!='areaManager'\" class=\"col-md-12\" style=\"margin-top: 15px;\" >\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Responsable:</label>\n                <div class=\"col-md-8\">\n                    <select class=\"form-control\" #name=\"ngModel\" name=\"responsable\" [(ngModel)]=\"users.responsable\" >\n                        <option value=\"\">▼</option>\n                        <option *ngFor=\"let usersAdmin of usersAdmins; let i = index\" value={{usersAdmin._id}}>{{usersAdmin.fname}} {{usersAdmin.lname}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div *ngIf=\"users.type == 'local'\" class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Calle:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" #name=\"ngModel\" name=\"street\" [(ngModel)]=\"users.street\" class=\"form-control\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div *ngIf=\"users.type == 'local'\"  class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Num ext:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" #name=\"ngModel\" name=\"numExt\" [(ngModel)]=\"users.numExt\" class=\"form-control\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div *ngIf=\"users.type == 'local'\" class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Num int:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" #name=\"ngModel\" name=\"numInt\" [(ngModel)]=\"users.numInt\" class=\"form-control\" placeholder=\"( Opcional )\"/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div *ngIf=\"users.type == 'local'\" class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Colonia:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"text\" #name=\"ngModel\" name=\"street\" [(ngModel)]=\"users.suburb\" class=\"form-control\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n        </div>\n\n        <div class=\"col-lg-6\">\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Teléfono:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"number\" #name=\"ngModel\" name=\"phone\" [(ngModel)]=\"users.phone\" class=\"form-control\" placeholder=\"( Opcional )\"/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n\n            <div *ngIf=\"users.type == 'local'\" class=\"col-md-12\" style=\"margin-top: 15px;\" >\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Área:</label>\n                <div class=\"col-md-8\">\n                    <select class=\"form-control\" #name=\"ngModel\" name=\"area\" [(ngModel)]=\"users.area\" >\n                        <option value=\"\">▼</option>\n                        <option *ngFor=\"let area of areas; let i = index\" value={{area.area._id}}>{{area.area.name}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Contraseña:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"password\" #name=\"ngModel\" name=\"password\" [(ngModel)]=\"users.password\" class=\"form-control\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div>     \n\n\n            <div class=\"col-md-12\" style=\"margin-top: 15px;\">\n                <label class=\"col-md-4\" style=\"text-align: right; margin-top: 5px;\">Repite contraseña:</label>\n                <div class=\"col-md-8\">\n                    <input type=\"password\" #name=\"ngModel\" name=\"password2\" [(ngModel)]=\"users.password2\" class=\"form-control\" required/>\n                </div>\n            </div>\n            <div class=\"clearfix\"></div> \n\n            <div *ngIf=\"users.type != 'local'\" class=\"col-md-10\" style=\"text-align: right;\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\"  aria-hidden=\"true\" class=\"bi bi-person-plus-fill\" viewBox=\"0 0 16 16\">\n                    <path d=\"M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\n                    <path fill-rule=\"evenodd\" d=\"M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5z\"/>\n                  </svg>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div *ngIf=\"users.type == 'local'\" class=\"col-md-10\" style=\"text-align: right;\">\n                <svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-shop\" viewBox=\"0 0 16 16\">\n                    <path d=\"M2.97 1.35A1 1 0 0 1 3.73 1h8.54a1 1 0 0 1 .76.35l2.609 3.044A1.5 1.5 0 0 1 16 5.37v.255a2.375 2.375 0 0 1-4.25 1.458A2.371 2.371 0 0 1 9.875 8 2.37 2.37 0 0 1 8 7.083 2.37 2.37 0 0 1 6.125 8a2.37 2.37 0 0 1-1.875-.917A2.375 2.375 0 0 1 0 5.625V5.37a1.5 1.5 0 0 1 .361-.976l2.61-3.045zm1.78 4.275a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 1 0 2.75 0V5.37a.5.5 0 0 0-.12-.325L12.27 2H3.73L1.12 5.045A.5.5 0 0 0 1 5.37v.255a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0zM1.5 8.5A.5.5 0 0 1 2 9v6h1v-5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v5h6V9a.5.5 0 0 1 1 0v6h.5a.5.5 0 0 1 0 1H.5a.5.5 0 0 1 0-1H1V9a.5.5 0 0 1 .5-.5zM4 15h3v-5H4v5zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-3zm3 0h-2v3h2v-3z\"/>\n                  </svg>\n            </div>\n            <div class=\"clearfix\"></div>\n\n            <div class=\"col-md-11\" style=\"text-align: center; margin-top: 20px; margin-bottom: 15px;\">\n                <input type=\"submit\" value=\"Guardar\" class=\"btn btn-primary\"/>\n            </div>\n            <div class=\"clearfix\"></div> \n\n        </div>\n\n    </form>\n\n            </div>\n        </div></div>\n\n\n<style>\n    .card{\n        background-color: rgb(248, 248, 248);\n    }\n\n    .bi{\n    margin-top: 20px;\n    margin-bottom: 20px;\n    width: 150px;\n    height: 150px;\n    }\n\n</style>"

/***/ }),

/***/ 134:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(108);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__global__ = __webpack_require__(60);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RequestNewService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var RequestNewService = (function () {
    function RequestNewService(_http) {
        this._http = _http;
        this.url = __WEBPACK_IMPORTED_MODULE_3__global__["a" /* GLOBAL */].url;
    }
    RequestNewService.prototype.getIssues = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'issues/issue', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestNewService.prototype.getBySearch = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'issues/getBySearch', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestNewService.prototype.getAllIssuesNormal = function (identity) {
        var params = JSON.stringify(identity);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'issues/allIssueNormal', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestNewService.prototype.newRequest = function (requests_to_Do) {
        var params = JSON.stringify(requests_to_Do);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/prueba/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestNewService.prototype.getAreaBranches = function (identity) {
        var params = JSON.stringify(identity);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'requests/areaBranches', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestNewService.prototype.getLocals = function (identity) {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json' });
        return this._http.get(this.url + 'users/getLocals', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestNewService.prototype.chatGPT = function (note) {
        var params = JSON.stringify(note);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'requests/chatGpt', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestNewService.prototype.getOneUser = function (identity) {
        var params = JSON.stringify(identity);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'requests/getOneUser', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestNewService.prototype.searchService = function (requests_to_Do) {
        var params = JSON.stringify(requests_to_Do);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/searchService/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestNewService.prototype.searchSubCategoria = function (requests_to_Do) {
        var params = JSON.stringify(requests_to_Do);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/searchSubCategoria/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestNewService.prototype.newService = function (requests_to_Do) {
        var params = JSON.stringify(requests_to_Do);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/newService/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestNewService.prototype.editService = function (requests_to_Do) {
        var params = JSON.stringify(requests_to_Do);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/editService/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestNewService.prototype.getToken = function () {
        var token = localStorage.getItem('token');
        if (token != undefined) {
            this.token = token;
        }
        else {
            this.token = null;
        }
        return this.token;
    };
    RequestNewService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["c" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["c" /* Http */]) === 'function' && _a) || Object])
    ], RequestNewService);
    return RequestNewService;
    var _a;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/requestNew.service.js.map

/***/ }),

/***/ 1386:
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(746);
module.exports = __webpack_require__(739);


/***/ }),

/***/ 19:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(108);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__global__ = __webpack_require__(60);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UsersService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var UsersService = (function () {
    function UsersService(_http) {
        this._http = _http;
        this.url = __WEBPACK_IMPORTED_MODULE_3__global__["a" /* GLOBAL */].url;
    }
    UsersService.prototype.signup = function (user_to_login, gethash) {
        if (gethash === void 0) { gethash = null; }
        if (gethash != null) {
            user_to_login.gethash = gethash;
        }
        var json = JSON.stringify(user_to_login);
        var params = json;
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json' });
        return this._http.post(this.url + 'users/loginUser/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.resumePasword = function (passwordToResume) {
        var send = { send: passwordToResume };
        var params = JSON.stringify(send);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json' });
        return this._http.post(this.url + 'users/passwordToResume/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.ensureAuth = function (newPassword) {
        var params = JSON.stringify(newPassword);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'issues/sendsms/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.oneUser = function (request) {
        var request2 = { request: request };
        var params = JSON.stringify(request2);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'users/oneUser/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.updatePassword = function (newPassword) {
        var params = JSON.stringify(newPassword);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'users/changePassword/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.newUser = function (user_to_register) {
        var params = JSON.stringify(user_to_register);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'users/saveUser/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.updateUser = function (user_to_update) {
        var params = JSON.stringify(user_to_update);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'users/updateUser/' + user_to_update._id, params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.getIdentity = function () {
        var identity = JSON.parse(localStorage.getItem('identity'));
        if (identity != undefined) {
            this.identity = identity;
        }
        else {
            this.identity = null;
        }
        return this.identity;
    };
    UsersService.prototype.getToken = function () {
        var token = localStorage.getItem('token');
        if (token != undefined) {
            this.token = token;
        }
        else {
            this.token = null;
        }
        return this.token;
    };
    UsersService.prototype.getDepartments = function (identity) {
        var params = JSON.stringify(identity);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'departments/all', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.getAreas = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json' });
        return this._http.get(this.url + 'departments/allAreas', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.getProveedores = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json' });
        return this._http.get(this.url + 'departments/allProveedores', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.newDepartments = function (newDepartment) {
        var params = JSON.stringify(newDepartment);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'departments/saveDepartment/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.editDepartments = function (newDepartment) {
        var params = JSON.stringify(newDepartment);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'departments/editDepartment/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.newArea = function (newArea) {
        var params = JSON.stringify(newArea);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'departments/saveArea/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.getAdminUsers = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json' });
        return this._http.get(this.url + 'users/usersAdmin', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.getLocals = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json' });
        return this._http.get(this.url + 'users/getLocals', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.allAreasOnly = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json' });
        return this._http.get(this.url + 'users/allAreasOnly', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService.prototype.editLocal = function (newLocal) {
        var params = JSON.stringify(newLocal);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'users/editLocal/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UsersService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["c" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["c" /* Http */]) === 'function' && _a) || Object])
    ], UsersService);
    return UsersService;
    var _a;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/users.service.js.map

/***/ }),

/***/ 20:
/***/ (function(module, exports, __webpack_require__) {

!function(t,e){ true?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.swal=e():t.swal=e()}(this,function(){return function(t){function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=8)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o="swal-button";e.CLASS_NAMES={MODAL:"swal-modal",OVERLAY:"swal-overlay",SHOW_MODAL:"swal-overlay--show-modal",MODAL_TITLE:"swal-title",MODAL_TEXT:"swal-text",ICON:"swal-icon",ICON_CUSTOM:"swal-icon--custom",CONTENT:"swal-content",FOOTER:"swal-footer",BUTTON_CONTAINER:"swal-button-container",BUTTON:o,CONFIRM_BUTTON:o+"--confirm",CANCEL_BUTTON:o+"--cancel",DANGER_BUTTON:o+"--danger",BUTTON_LOADING:o+"--loading",BUTTON_LOADER:o+"__loader"},e.default=e.CLASS_NAMES},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getNode=function(t){var e="."+t;return document.querySelector(e)},e.stringToNode=function(t){var e=document.createElement("div");return e.innerHTML=t.trim(),e.firstChild},e.insertAfter=function(t,e){var n=e.nextSibling;e.parentNode.insertBefore(t,n)},e.removeNode=function(t){t.parentElement.removeChild(t)},e.throwErr=function(t){throw t=t.replace(/ +(?= )/g,""),"SweetAlert: "+(t=t.trim())},e.isPlainObject=function(t){if("[object Object]"!==Object.prototype.toString.call(t))return!1;var e=Object.getPrototypeOf(t);return null===e||e===Object.prototype},e.ordinalSuffixOf=function(t){var e=t%10,n=t%100;return 1===e&&11!==n?t+"st":2===e&&12!==n?t+"nd":3===e&&13!==n?t+"rd":t+"th"}},function(t,e,n){"use strict";function o(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}Object.defineProperty(e,"__esModule",{value:!0}),o(n(25));var r=n(26);e.overlayMarkup=r.default,o(n(27)),o(n(28)),o(n(29));var i=n(0),a=i.default.MODAL_TITLE,s=i.default.MODAL_TEXT,c=i.default.ICON,l=i.default.FOOTER;e.iconMarkup='\n  <div class="'+c+'"></div>',e.titleMarkup='\n  <div class="'+a+'"></div>\n',e.textMarkup='\n  <div class="'+s+'"></div>',e.footerMarkup='\n  <div class="'+l+'"></div>\n'},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1);e.CONFIRM_KEY="confirm",e.CANCEL_KEY="cancel";var r={visible:!0,text:null,value:null,className:"",closeModal:!0},i=Object.assign({},r,{visible:!1,text:"Cancel",value:null}),a=Object.assign({},r,{text:"OK",value:!0});e.defaultButtonList={cancel:i,confirm:a};var s=function(t){switch(t){case e.CONFIRM_KEY:return a;case e.CANCEL_KEY:return i;default:var n=t.charAt(0).toUpperCase()+t.slice(1);return Object.assign({},r,{text:n,value:t})}},c=function(t,e){var n=s(t);return!0===e?Object.assign({},n,{visible:!0}):"string"==typeof e?Object.assign({},n,{visible:!0,text:e}):o.isPlainObject(e)?Object.assign({visible:!0},n,e):Object.assign({},n,{visible:!1})},l=function(t){for(var e={},n=0,o=Object.keys(t);n<o.length;n++){var r=o[n],a=t[r],s=c(r,a);e[r]=s}return e.cancel||(e.cancel=i),e},u=function(t){var n={};switch(t.length){case 1:n[e.CANCEL_KEY]=Object.assign({},i,{visible:!1});break;case 2:n[e.CANCEL_KEY]=c(e.CANCEL_KEY,t[0]),n[e.CONFIRM_KEY]=c(e.CONFIRM_KEY,t[1]);break;default:o.throwErr("Invalid number of 'buttons' in array ("+t.length+").\n      If you want more than 2 buttons, you need to use an object!")}return n};e.getButtonListOpts=function(t){var n=e.defaultButtonList;return"string"==typeof t?n[e.CONFIRM_KEY]=c(e.CONFIRM_KEY,t):Array.isArray(t)?n=u(t):o.isPlainObject(t)?n=l(t):!0===t?n=u([!0,!0]):!1===t?n=u([!1,!1]):void 0===t&&(n=e.defaultButtonList),n}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(2),i=n(0),a=i.default.MODAL,s=i.default.OVERLAY,c=n(30),l=n(31),u=n(32),f=n(33);e.injectElIntoModal=function(t){var e=o.getNode(a),n=o.stringToNode(t);return e.appendChild(n),n};var d=function(t){t.className=a,t.textContent=""},p=function(t,e){d(t);var n=e.className;n&&t.classList.add(n)};e.initModalContent=function(t){var e=o.getNode(a);p(e,t),c.default(t.icon),l.initTitle(t.title),l.initText(t.text),f.default(t.content),u.default(t.buttons,t.dangerMode)};var m=function(){var t=o.getNode(s),e=o.stringToNode(r.modalMarkup);t.appendChild(e)};e.default=m},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),r={isOpen:!1,promise:null,actions:{},timer:null},i=Object.assign({},r);e.resetState=function(){i=Object.assign({},r)},e.setActionValue=function(t){if("string"==typeof t)return a(o.CONFIRM_KEY,t);for(var e in t)a(e,t[e])};var a=function(t,e){i.actions[t]||(i.actions[t]={}),Object.assign(i.actions[t],{value:e})};e.setActionOptionsFor=function(t,e){var n=(void 0===e?{}:e).closeModal,o=void 0===n||n;Object.assign(i.actions[t],{closeModal:o})},e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(3),i=n(0),a=i.default.OVERLAY,s=i.default.SHOW_MODAL,c=i.default.BUTTON,l=i.default.BUTTON_LOADING,u=n(5);e.openModal=function(){o.getNode(a).classList.add(s),u.default.isOpen=!0};var f=function(){o.getNode(a).classList.remove(s),u.default.isOpen=!1};e.onAction=function(t){void 0===t&&(t=r.CANCEL_KEY);var e=u.default.actions[t],n=e.value;if(!1===e.closeModal){var i=c+"--"+t;o.getNode(i).classList.add(l)}else f();u.default.promise.resolve(n)},e.getState=function(){var t=Object.assign({},u.default);return delete t.promise,delete t.timer,t},e.stopLoading=function(){for(var t=document.querySelectorAll("."+c),e=0;e<t.length;e++){t[e].classList.remove(l)}}},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){(function(e){t.exports=e.sweetAlert=n(9)}).call(e,n(7))},function(t,e,n){(function(e){t.exports=e.swal=n(10)}).call(e,n(7))},function(t,e,n){"undefined"!=typeof window&&n(11),n(16);var o=n(23).default;t.exports=o},function(t,e,n){var o=n(12);"string"==typeof o&&(o=[[t.i,o,""]]);var r={insertAt:"top"};r.transform=void 0;n(14)(o,r);o.locals&&(t.exports=o.locals)},function(t,e,n){e=t.exports=n(13)(void 0),e.push([t.i,'.swal-icon--error{border-color:#f27474;-webkit-animation:animateErrorIcon .5s;animation:animateErrorIcon .5s}.swal-icon--error__x-mark{position:relative;display:block;-webkit-animation:animateXMark .5s;animation:animateXMark .5s}.swal-icon--error__line{position:absolute;height:5px;width:47px;background-color:#f27474;display:block;top:37px;border-radius:2px}.swal-icon--error__line--left{-webkit-transform:rotate(45deg);transform:rotate(45deg);left:17px}.swal-icon--error__line--right{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);right:16px}@-webkit-keyframes animateErrorIcon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg);opacity:1}}@keyframes animateErrorIcon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg);opacity:1}}@-webkit-keyframes animateXMark{0%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}50%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}80%{-webkit-transform:scale(1.15);transform:scale(1.15);margin-top:-6px}to{-webkit-transform:scale(1);transform:scale(1);margin-top:0;opacity:1}}@keyframes animateXMark{0%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}50%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}80%{-webkit-transform:scale(1.15);transform:scale(1.15);margin-top:-6px}to{-webkit-transform:scale(1);transform:scale(1);margin-top:0;opacity:1}}.swal-icon--warning{border-color:#f8bb86;-webkit-animation:pulseWarning .75s infinite alternate;animation:pulseWarning .75s infinite alternate}.swal-icon--warning__body{width:5px;height:47px;top:10px;border-radius:2px;margin-left:-2px}.swal-icon--warning__body,.swal-icon--warning__dot{position:absolute;left:50%;background-color:#f8bb86}.swal-icon--warning__dot{width:7px;height:7px;border-radius:50%;margin-left:-4px;bottom:-11px}@-webkit-keyframes pulseWarning{0%{border-color:#f8d486}to{border-color:#f8bb86}}@keyframes pulseWarning{0%{border-color:#f8d486}to{border-color:#f8bb86}}.swal-icon--success{border-color:#a5dc86}.swal-icon--success:after,.swal-icon--success:before{content:"";border-radius:50%;position:absolute;width:60px;height:120px;background:#fff;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.swal-icon--success:before{border-radius:120px 0 0 120px;top:-7px;left:-33px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:60px 60px;transform-origin:60px 60px}.swal-icon--success:after{border-radius:0 120px 120px 0;top:-11px;left:30px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:0 60px;transform-origin:0 60px;-webkit-animation:rotatePlaceholder 4.25s ease-in;animation:rotatePlaceholder 4.25s ease-in}.swal-icon--success__ring{width:80px;height:80px;border:4px solid hsla(98,55%,69%,.2);border-radius:50%;box-sizing:content-box;position:absolute;left:-4px;top:-4px;z-index:2}.swal-icon--success__hide-corners{width:5px;height:90px;background-color:#fff;padding:1px;position:absolute;left:28px;top:8px;z-index:1;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.swal-icon--success__line{height:5px;background-color:#a5dc86;display:block;border-radius:2px;position:absolute;z-index:2}.swal-icon--success__line--tip{width:25px;left:14px;top:46px;-webkit-transform:rotate(45deg);transform:rotate(45deg);-webkit-animation:animateSuccessTip .75s;animation:animateSuccessTip .75s}.swal-icon--success__line--long{width:47px;right:8px;top:38px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-animation:animateSuccessLong .75s;animation:animateSuccessLong .75s}@-webkit-keyframes rotatePlaceholder{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}to{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@keyframes rotatePlaceholder{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}to{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@-webkit-keyframes animateSuccessTip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@keyframes animateSuccessTip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@-webkit-keyframes animateSuccessLong{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0;top:35px}to{width:47px;right:8px;top:38px}}@keyframes animateSuccessLong{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0;top:35px}to{width:47px;right:8px;top:38px}}.swal-icon--info{border-color:#c9dae1}.swal-icon--info:before{width:5px;height:29px;bottom:17px;border-radius:2px;margin-left:-2px}.swal-icon--info:after,.swal-icon--info:before{content:"";position:absolute;left:50%;background-color:#c9dae1}.swal-icon--info:after{width:7px;height:7px;border-radius:50%;margin-left:-3px;top:19px}.swal-icon{width:80px;height:80px;border-width:4px;border-style:solid;border-radius:50%;padding:0;position:relative;box-sizing:content-box;margin:20px auto}.swal-icon:first-child{margin-top:32px}.swal-icon--custom{width:auto;height:auto;max-width:100%;border:none;border-radius:0}.swal-icon img{max-width:100%;max-height:100%}.swal-title{color:rgba(0,0,0,.65);font-weight:600;text-transform:none;position:relative;display:block;padding:13px 16px;font-size:27px;line-height:normal;text-align:center;margin-bottom:0}.swal-title:first-child{margin-top:26px}.swal-title:not(:first-child){padding-bottom:0}.swal-title:not(:last-child){margin-bottom:13px}.swal-text{font-size:16px;position:relative;float:none;line-height:normal;vertical-align:top;text-align:left;display:inline-block;margin:0;padding:0 10px;font-weight:400;color:rgba(0,0,0,.64);max-width:calc(100% - 20px);overflow-wrap:break-word;box-sizing:border-box}.swal-text:first-child{margin-top:45px}.swal-text:last-child{margin-bottom:45px}.swal-footer{text-align:right;padding-top:13px;margin-top:13px;padding:13px 16px;border-radius:inherit;border-top-left-radius:0;border-top-right-radius:0}.swal-button-container{margin:5px;display:inline-block;position:relative}.swal-button{background-color:#7cd1f9;color:#fff;border:none;box-shadow:none;border-radius:5px;font-weight:600;font-size:14px;padding:10px 24px;margin:0;cursor:pointer}.swal-button:not([disabled]):hover{background-color:#78cbf2}.swal-button:active{background-color:#70bce0}.swal-button:focus{outline:none;box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(43,114,165,.29)}.swal-button[disabled]{opacity:.5;cursor:default}.swal-button::-moz-focus-inner{border:0}.swal-button--cancel{color:#555;background-color:#efefef}.swal-button--cancel:not([disabled]):hover{background-color:#e8e8e8}.swal-button--cancel:active{background-color:#d7d7d7}.swal-button--cancel:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(116,136,150,.29)}.swal-button--danger{background-color:#e64942}.swal-button--danger:not([disabled]):hover{background-color:#df4740}.swal-button--danger:active{background-color:#cf423b}.swal-button--danger:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(165,43,43,.29)}.swal-content{padding:0 20px;margin-top:20px;font-size:medium}.swal-content:last-child{margin-bottom:20px}.swal-content__input,.swal-content__textarea{-webkit-appearance:none;background-color:#fff;border:none;font-size:14px;display:block;box-sizing:border-box;width:100%;border:1px solid rgba(0,0,0,.14);padding:10px 13px;border-radius:2px;transition:border-color .2s}.swal-content__input:focus,.swal-content__textarea:focus{outline:none;border-color:#6db8ff}.swal-content__textarea{resize:vertical}.swal-button--loading{color:transparent}.swal-button--loading~.swal-button__loader{opacity:1}.swal-button__loader{position:absolute;height:auto;width:43px;z-index:2;left:50%;top:50%;-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);text-align:center;pointer-events:none;opacity:0}.swal-button__loader div{display:inline-block;float:none;vertical-align:baseline;width:9px;height:9px;padding:0;border:none;margin:2px;opacity:.4;border-radius:7px;background-color:hsla(0,0%,100%,.9);transition:background .2s;-webkit-animation:swal-loading-anim 1s infinite;animation:swal-loading-anim 1s infinite}.swal-button__loader div:nth-child(3n+2){-webkit-animation-delay:.15s;animation-delay:.15s}.swal-button__loader div:nth-child(3n+3){-webkit-animation-delay:.3s;animation-delay:.3s}@-webkit-keyframes swal-loading-anim{0%{opacity:.4}20%{opacity:.4}50%{opacity:1}to{opacity:.4}}@keyframes swal-loading-anim{0%{opacity:.4}20%{opacity:.4}50%{opacity:1}to{opacity:.4}}.swal-overlay{position:fixed;top:0;bottom:0;left:0;right:0;text-align:center;font-size:0;overflow-y:auto;background-color:rgba(0,0,0,.4);z-index:10000;pointer-events:none;opacity:0;transition:opacity .3s}.swal-overlay:before{content:" ";display:inline-block;vertical-align:middle;height:100%}.swal-overlay--show-modal{opacity:1;pointer-events:auto}.swal-overlay--show-modal .swal-modal{opacity:1;pointer-events:auto;box-sizing:border-box;-webkit-animation:showSweetAlert .3s;animation:showSweetAlert .3s;will-change:transform}.swal-modal{width:478px;opacity:0;pointer-events:none;background-color:#fff;text-align:center;border-radius:5px;position:static;margin:20px auto;display:inline-block;vertical-align:middle;-webkit-transform:scale(1);transform:scale(1);-webkit-transform-origin:50% 50%;transform-origin:50% 50%;z-index:10001;transition:opacity .2s,-webkit-transform .3s;transition:transform .3s,opacity .2s;transition:transform .3s,opacity .2s,-webkit-transform .3s}@media (max-width:500px){.swal-modal{width:calc(100% - 20px)}}@-webkit-keyframes showSweetAlert{0%{-webkit-transform:scale(1);transform:scale(1)}1%{-webkit-transform:scale(.5);transform:scale(.5)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes showSweetAlert{0%{-webkit-transform:scale(1);transform:scale(1)}1%{-webkit-transform:scale(.5);transform:scale(.5)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}to{-webkit-transform:scale(1);transform:scale(1)}}',""])},function(t,e){function n(t,e){var n=t[1]||"",r=t[3];if(!r)return n;if(e&&"function"==typeof btoa){var i=o(r);return[n].concat(r.sources.map(function(t){return"/*# sourceURL="+r.sourceRoot+t+" */"})).concat([i]).join("\n")}return[n].join("\n")}function o(t){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(t))))+" */"}t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var o=n(e,t);return e[2]?"@media "+e[2]+"{"+o+"}":o}).join("")},e.i=function(t,n){"string"==typeof t&&(t=[[null,t,""]]);for(var o={},r=0;r<this.length;r++){var i=this[r][0];"number"==typeof i&&(o[i]=!0)}for(r=0;r<t.length;r++){var a=t[r];"number"==typeof a[0]&&o[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),e.push(a))}},e}},function(t,e,n){function o(t,e){for(var n=0;n<t.length;n++){var o=t[n],r=m[o.id];if(r){r.refs++;for(var i=0;i<r.parts.length;i++)r.parts[i](o.parts[i]);for(;i<o.parts.length;i++)r.parts.push(u(o.parts[i],e))}else{for(var a=[],i=0;i<o.parts.length;i++)a.push(u(o.parts[i],e));m[o.id]={id:o.id,refs:1,parts:a}}}}function r(t,e){for(var n=[],o={},r=0;r<t.length;r++){var i=t[r],a=e.base?i[0]+e.base:i[0],s=i[1],c=i[2],l=i[3],u={css:s,media:c,sourceMap:l};o[a]?o[a].parts.push(u):n.push(o[a]={id:a,parts:[u]})}return n}function i(t,e){var n=v(t.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var o=w[w.length-1];if("top"===t.insertAt)o?o.nextSibling?n.insertBefore(e,o.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),w.push(e);else{if("bottom"!==t.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");n.appendChild(e)}}function a(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=w.indexOf(t);e>=0&&w.splice(e,1)}function s(t){var e=document.createElement("style");return t.attrs.type="text/css",l(e,t.attrs),i(t,e),e}function c(t){var e=document.createElement("link");return t.attrs.type="text/css",t.attrs.rel="stylesheet",l(e,t.attrs),i(t,e),e}function l(t,e){Object.keys(e).forEach(function(n){t.setAttribute(n,e[n])})}function u(t,e){var n,o,r,i;if(e.transform&&t.css){if(!(i=e.transform(t.css)))return function(){};t.css=i}if(e.singleton){var l=h++;n=g||(g=s(e)),o=f.bind(null,n,l,!1),r=f.bind(null,n,l,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=c(e),o=p.bind(null,n,e),r=function(){a(n),n.href&&URL.revokeObjectURL(n.href)}):(n=s(e),o=d.bind(null,n),r=function(){a(n)});return o(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;o(t=e)}else r()}}function f(t,e,n,o){var r=n?"":o.css;if(t.styleSheet)t.styleSheet.cssText=x(e,r);else{var i=document.createTextNode(r),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}function d(t,e){var n=e.css,o=e.media;if(o&&t.setAttribute("media",o),t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}function p(t,e,n){var o=n.css,r=n.sourceMap,i=void 0===e.convertToAbsoluteUrls&&r;(e.convertToAbsoluteUrls||i)&&(o=y(o)),r&&(o+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var a=new Blob([o],{type:"text/css"}),s=t.href;t.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}var m={},b=function(t){var e;return function(){return void 0===e&&(e=t.apply(this,arguments)),e}}(function(){return window&&document&&document.all&&!window.atob}),v=function(t){var e={};return function(n){return void 0===e[n]&&(e[n]=t.call(this,n)),e[n]}}(function(t){return document.querySelector(t)}),g=null,h=0,w=[],y=n(15);t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");e=e||{},e.attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||(e.singleton=b()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var n=r(t,e);return o(n,e),function(t){for(var i=[],a=0;a<n.length;a++){var s=n[a],c=m[s.id];c.refs--,i.push(c)}if(t){o(r(t,e),e)}for(var a=0;a<i.length;a++){var c=i[a];if(0===c.refs){for(var l=0;l<c.parts.length;l++)c.parts[l]();delete m[c.id]}}}};var x=function(){var t=[];return function(e,n){return t[e]=n,t.filter(Boolean).join("\n")}}()},function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var n=e.protocol+"//"+e.host,o=n+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(t,e){var r=e.trim().replace(/^"(.*)"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});if(/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(r))return t;var i;return i=0===r.indexOf("//")?r:0===r.indexOf("/")?n+r:o+r.replace(/^\.\//,""),"url("+JSON.stringify(i)+")"})}},function(t,e,n){var o=n(17);"undefined"==typeof window||window.Promise||(window.Promise=o),n(21),String.prototype.includes||(String.prototype.includes=function(t,e){"use strict";return"number"!=typeof e&&(e=0),!(e+t.length>this.length)&&-1!==this.indexOf(t,e)}),Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(t,e){if(null==this)throw new TypeError('"this" is null or not defined');var n=Object(this),o=n.length>>>0;if(0===o)return!1;for(var r=0|e,i=Math.max(r>=0?r:o-Math.abs(r),0);i<o;){if(function(t,e){return t===e||"number"==typeof t&&"number"==typeof e&&isNaN(t)&&isNaN(e)}(n[i],t))return!0;i++}return!1}}),"undefined"!=typeof window&&function(t){t.forEach(function(t){t.hasOwnProperty("remove")||Object.defineProperty(t,"remove",{configurable:!0,enumerable:!0,writable:!0,value:function(){this.parentNode.removeChild(this)}})})}([Element.prototype,CharacterData.prototype,DocumentType.prototype])},function(t,e,n){(function(e){!function(n){function o(){}function r(t,e){return function(){t.apply(e,arguments)}}function i(t){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof t)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],f(t,this)}function a(t,e){for(;3===t._state;)t=t._value;if(0===t._state)return void t._deferreds.push(e);t._handled=!0,i._immediateFn(function(){var n=1===t._state?e.onFulfilled:e.onRejected;if(null===n)return void(1===t._state?s:c)(e.promise,t._value);var o;try{o=n(t._value)}catch(t){return void c(e.promise,t)}s(e.promise,o)})}function s(t,e){try{if(e===t)throw new TypeError("A promise cannot be resolved with itself.");if(e&&("object"==typeof e||"function"==typeof e)){var n=e.then;if(e instanceof i)return t._state=3,t._value=e,void l(t);if("function"==typeof n)return void f(r(n,e),t)}t._state=1,t._value=e,l(t)}catch(e){c(t,e)}}function c(t,e){t._state=2,t._value=e,l(t)}function l(t){2===t._state&&0===t._deferreds.length&&i._immediateFn(function(){t._handled||i._unhandledRejectionFn(t._value)});for(var e=0,n=t._deferreds.length;e<n;e++)a(t,t._deferreds[e]);t._deferreds=null}function u(t,e,n){this.onFulfilled="function"==typeof t?t:null,this.onRejected="function"==typeof e?e:null,this.promise=n}function f(t,e){var n=!1;try{t(function(t){n||(n=!0,s(e,t))},function(t){n||(n=!0,c(e,t))})}catch(t){if(n)return;n=!0,c(e,t)}}var d=setTimeout;i.prototype.catch=function(t){return this.then(null,t)},i.prototype.then=function(t,e){var n=new this.constructor(o);return a(this,new u(t,e,n)),n},i.all=function(t){var e=Array.prototype.slice.call(t);return new i(function(t,n){function o(i,a){try{if(a&&("object"==typeof a||"function"==typeof a)){var s=a.then;if("function"==typeof s)return void s.call(a,function(t){o(i,t)},n)}e[i]=a,0==--r&&t(e)}catch(t){n(t)}}if(0===e.length)return t([]);for(var r=e.length,i=0;i<e.length;i++)o(i,e[i])})},i.resolve=function(t){return t&&"object"==typeof t&&t.constructor===i?t:new i(function(e){e(t)})},i.reject=function(t){return new i(function(e,n){n(t)})},i.race=function(t){return new i(function(e,n){for(var o=0,r=t.length;o<r;o++)t[o].then(e,n)})},i._immediateFn="function"==typeof e&&function(t){e(t)}||function(t){d(t,0)},i._unhandledRejectionFn=function(t){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",t)},i._setImmediateFn=function(t){i._immediateFn=t},i._setUnhandledRejectionFn=function(t){i._unhandledRejectionFn=t},void 0!==t&&t.exports?t.exports=i:n.Promise||(n.Promise=i)}(this)}).call(e,n(18).setImmediate)},function(t,e,n){function o(t,e){this._id=t,this._clearFn=e}var r=Function.prototype.apply;e.setTimeout=function(){return new o(r.call(setTimeout,window,arguments),clearTimeout)},e.setInterval=function(){return new o(r.call(setInterval,window,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(window,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},n(19),e.setImmediate=setImmediate,e.clearImmediate=clearImmediate},function(t,e,n){(function(t,e){!function(t,n){"use strict";function o(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var o={callback:t,args:e};return l[c]=o,s(c),c++}function r(t){delete l[t]}function i(t){var e=t.callback,o=t.args;switch(o.length){case 0:e();break;case 1:e(o[0]);break;case 2:e(o[0],o[1]);break;case 3:e(o[0],o[1],o[2]);break;default:e.apply(n,o)}}function a(t){if(u)setTimeout(a,0,t);else{var e=l[t];if(e){u=!0;try{i(e)}finally{r(t),u=!1}}}}if(!t.setImmediate){var s,c=1,l={},u=!1,f=t.document,d=Object.getPrototypeOf&&Object.getPrototypeOf(t);d=d&&d.setTimeout?d:t,"[object process]"==={}.toString.call(t.process)?function(){s=function(t){e.nextTick(function(){a(t)})}}():function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=n,e}}()?function(){var e="setImmediate$"+Math.random()+"$",n=function(n){n.source===t&&"string"==typeof n.data&&0===n.data.indexOf(e)&&a(+n.data.slice(e.length))};t.addEventListener?t.addEventListener("message",n,!1):t.attachEvent("onmessage",n),s=function(n){t.postMessage(e+n,"*")}}():t.MessageChannel?function(){var t=new MessageChannel;t.port1.onmessage=function(t){a(t.data)},s=function(e){t.port2.postMessage(e)}}():f&&"onreadystatechange"in f.createElement("script")?function(){var t=f.documentElement;s=function(e){var n=f.createElement("script");n.onreadystatechange=function(){a(e),n.onreadystatechange=null,t.removeChild(n),n=null},t.appendChild(n)}}():function(){s=function(t){setTimeout(a,0,t)}}(),d.setImmediate=o,d.clearImmediate=r}}("undefined"==typeof self?void 0===t?this:t:self)}).call(e,n(7),n(20))},function(t,e){function n(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function r(t){if(u===setTimeout)return setTimeout(t,0);if((u===n||!u)&&setTimeout)return u=setTimeout,setTimeout(t,0);try{return u(t,0)}catch(e){try{return u.call(null,t,0)}catch(e){return u.call(this,t,0)}}}function i(t){if(f===clearTimeout)return clearTimeout(t);if((f===o||!f)&&clearTimeout)return f=clearTimeout,clearTimeout(t);try{return f(t)}catch(e){try{return f.call(null,t)}catch(e){return f.call(this,t)}}}function a(){b&&p&&(b=!1,p.length?m=p.concat(m):v=-1,m.length&&s())}function s(){if(!b){var t=r(a);b=!0;for(var e=m.length;e;){for(p=m,m=[];++v<e;)p&&p[v].run();v=-1,e=m.length}p=null,b=!1,i(t)}}function c(t,e){this.fun=t,this.array=e}function l(){}var u,f,d=t.exports={};!function(){try{u="function"==typeof setTimeout?setTimeout:n}catch(t){u=n}try{f="function"==typeof clearTimeout?clearTimeout:o}catch(t){f=o}}();var p,m=[],b=!1,v=-1;d.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];m.push(new c(t,e)),1!==m.length||b||r(s)},c.prototype.run=function(){this.fun.apply(null,this.array)},d.title="browser",d.browser=!0,d.env={},d.argv=[],d.version="",d.versions={},d.on=l,d.addListener=l,d.once=l,d.off=l,d.removeListener=l,d.removeAllListeners=l,d.emit=l,d.prependListener=l,d.prependOnceListener=l,d.listeners=function(t){return[]},d.binding=function(t){throw new Error("process.binding is not supported")},d.cwd=function(){return"/"},d.chdir=function(t){throw new Error("process.chdir is not supported")},d.umask=function(){return 0}},function(t,e,n){"use strict";n(22).polyfill()},function(t,e,n){"use strict";function o(t,e){if(void 0===t||null===t)throw new TypeError("Cannot convert first argument to object");for(var n=Object(t),o=1;o<arguments.length;o++){var r=arguments[o];if(void 0!==r&&null!==r)for(var i=Object.keys(Object(r)),a=0,s=i.length;a<s;a++){var c=i[a],l=Object.getOwnPropertyDescriptor(r,c);void 0!==l&&l.enumerable&&(n[c]=r[c])}}return n}function r(){Object.assign||Object.defineProperty(Object,"assign",{enumerable:!1,configurable:!0,writable:!0,value:o})}t.exports={assign:o,polyfill:r}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(24),r=n(6),i=n(5),a=n(36),s=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if("undefined"!=typeof window){var n=a.getOpts.apply(void 0,t);return new Promise(function(t,e){i.default.promise={resolve:t,reject:e},o.default(n),setTimeout(function(){r.openModal()})})}};s.close=r.onAction,s.getState=r.getState,s.setActionValue=i.setActionValue,s.stopLoading=r.stopLoading,s.setDefaults=a.setDefaults,e.default=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(0),i=r.default.MODAL,a=n(4),s=n(34),c=n(35),l=n(1);e.init=function(t){o.getNode(i)||(document.body||l.throwErr("You can only use SweetAlert AFTER the DOM has loaded!"),s.default(),a.default()),a.initModalContent(t),c.default(t)},e.default=e.init},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.MODAL;e.modalMarkup='\n  <div class="'+r+'" role="dialog" aria-modal="true"></div>',e.default=e.modalMarkup},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.OVERLAY,i='<div \n    class="'+r+'"\n    tabIndex="-1">\n  </div>';e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.ICON;e.errorIconMarkup=function(){var t=r+"--error",e=t+"__line";return'\n    <div class="'+t+'__x-mark">\n      <span class="'+e+" "+e+'--left"></span>\n      <span class="'+e+" "+e+'--right"></span>\n    </div>\n  '},e.warningIconMarkup=function(){var t=r+"--warning";return'\n    <span class="'+t+'__body">\n      <span class="'+t+'__dot"></span>\n    </span>\n  '},e.successIconMarkup=function(){var t=r+"--success";return'\n    <span class="'+t+"__line "+t+'__line--long"></span>\n    <span class="'+t+"__line "+t+'__line--tip"></span>\n\n    <div class="'+t+'__ring"></div>\n    <div class="'+t+'__hide-corners"></div>\n  '}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.CONTENT;e.contentMarkup='\n  <div class="'+r+'">\n\n  </div>\n'},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(0),r=o.default.BUTTON_CONTAINER,i=o.default.BUTTON,a=o.default.BUTTON_LOADER;e.buttonMarkup='\n  <div class="'+r+'">\n\n    <button\n      class="'+i+'"\n    ></button>\n\n    <div class="'+a+'">\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n\n  </div>\n'},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(4),r=n(2),i=n(0),a=i.default.ICON,s=i.default.ICON_CUSTOM,c=["error","warning","success","info"],l={error:r.errorIconMarkup(),warning:r.warningIconMarkup(),success:r.successIconMarkup()},u=function(t,e){var n=a+"--"+t;e.classList.add(n);var o=l[t];o&&(e.innerHTML=o)},f=function(t,e){e.classList.add(s);var n=document.createElement("img");n.src=t,e.appendChild(n)},d=function(t){if(t){var e=o.injectElIntoModal(r.iconMarkup);c.includes(t)?u(t,e):f(t,e)}};e.default=d},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(2),r=n(4),i=function(t){navigator.userAgent.includes("AppleWebKit")&&(t.style.display="none",t.offsetHeight,t.style.display="")};e.initTitle=function(t){if(t){var e=r.injectElIntoModal(o.titleMarkup);e.textContent=t,i(e)}},e.initText=function(t){if(t){var e=document.createDocumentFragment();t.split("\n").forEach(function(t,n,o){e.appendChild(document.createTextNode(t)),n<o.length-1&&e.appendChild(document.createElement("br"))});var n=r.injectElIntoModal(o.textMarkup);n.appendChild(e),i(n)}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(4),i=n(0),a=i.default.BUTTON,s=i.default.DANGER_BUTTON,c=n(3),l=n(2),u=n(6),f=n(5),d=function(t,e,n){var r=e.text,i=e.value,d=e.className,p=e.closeModal,m=o.stringToNode(l.buttonMarkup),b=m.querySelector("."+a),v=a+"--"+t;if(b.classList.add(v),d){(Array.isArray(d)?d:d.split(" ")).filter(function(t){return t.length>0}).forEach(function(t){b.classList.add(t)})}n&&t===c.CONFIRM_KEY&&b.classList.add(s),b.textContent=r;var g={};return g[t]=i,f.setActionValue(g),f.setActionOptionsFor(t,{closeModal:p}),b.addEventListener("click",function(){return u.onAction(t)}),m},p=function(t,e){var n=r.injectElIntoModal(l.footerMarkup);for(var o in t){var i=t[o],a=d(o,i,e);i.visible&&n.appendChild(a)}0===n.children.length&&n.remove()};e.default=p},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),r=n(4),i=n(2),a=n(5),s=n(6),c=n(0),l=c.default.CONTENT,u=function(t){t.addEventListener("input",function(t){var e=t.target,n=e.value;a.setActionValue(n)}),t.addEventListener("keyup",function(t){if("Enter"===t.key)return s.onAction(o.CONFIRM_KEY)}),setTimeout(function(){t.focus(),a.setActionValue("")},0)},f=function(t,e,n){var o=document.createElement(e),r=l+"__"+e;o.classList.add(r);for(var i in n){var a=n[i];o[i]=a}"input"===e&&u(o),t.appendChild(o)},d=function(t){if(t){var e=r.injectElIntoModal(i.contentMarkup),n=t.element,o=t.attributes;"string"==typeof n?f(e,n,o):e.appendChild(n)}};e.default=d},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(2),i=function(){var t=o.stringToNode(r.overlayMarkup);document.body.appendChild(t)};e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(5),r=n(6),i=n(1),a=n(3),s=n(0),c=s.default.MODAL,l=s.default.BUTTON,u=s.default.OVERLAY,f=function(t){t.preventDefault(),v()},d=function(t){t.preventDefault(),g()},p=function(t){if(o.default.isOpen)switch(t.key){case"Escape":return r.onAction(a.CANCEL_KEY)}},m=function(t){if(o.default.isOpen)switch(t.key){case"Tab":return f(t)}},b=function(t){if(o.default.isOpen)return"Tab"===t.key&&t.shiftKey?d(t):void 0},v=function(){var t=i.getNode(l);t&&(t.tabIndex=0,t.focus())},g=function(){var t=i.getNode(c),e=t.querySelectorAll("."+l),n=e.length-1,o=e[n];o&&o.focus()},h=function(t){t[t.length-1].addEventListener("keydown",m)},w=function(t){t[0].addEventListener("keydown",b)},y=function(){var t=i.getNode(c),e=t.querySelectorAll("."+l);e.length&&(h(e),w(e))},x=function(t){if(i.getNode(u)===t.target)return r.onAction(a.CANCEL_KEY)},_=function(t){var e=i.getNode(u);e.removeEventListener("click",x),t&&e.addEventListener("click",x)},k=function(t){o.default.timer&&clearTimeout(o.default.timer),t&&(o.default.timer=window.setTimeout(function(){return r.onAction(a.CANCEL_KEY)},t))},O=function(t){t.closeOnEsc?document.addEventListener("keyup",p):document.removeEventListener("keyup",p),t.dangerMode?v():g(),y(),_(t.closeOnClickOutside),k(t.timer)};e.default=O},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(3),i=n(37),a=n(38),s={title:null,text:null,icon:null,buttons:r.defaultButtonList,content:null,className:null,closeOnClickOutside:!0,closeOnEsc:!0,dangerMode:!1,timer:null},c=Object.assign({},s);e.setDefaults=function(t){c=Object.assign({},s,t)};var l=function(t){var e=t&&t.button,n=t&&t.buttons;return void 0!==e&&void 0!==n&&o.throwErr("Cannot set both 'button' and 'buttons' options!"),void 0!==e?{confirm:e}:n},u=function(t){return o.ordinalSuffixOf(t+1)},f=function(t,e){o.throwErr(u(e)+" argument ('"+t+"') is invalid")},d=function(t,e){var n=t+1,r=e[n];o.isPlainObject(r)||void 0===r||o.throwErr("Expected "+u(n)+" argument ('"+r+"') to be a plain object")},p=function(t,e){var n=t+1,r=e[n];void 0!==r&&o.throwErr("Unexpected "+u(n)+" argument ("+r+")")},m=function(t,e,n,r){var i=typeof e,a="string"===i,s=e instanceof Element;if(a){if(0===n)return{text:e};if(1===n)return{text:e,title:r[0]};if(2===n)return d(n,r),{icon:e};f(e,n)}else{if(s&&0===n)return d(n,r),{content:e};if(o.isPlainObject(e))return p(n,r),e;f(e,n)}};e.getOpts=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n={};t.forEach(function(e,o){var r=m(0,e,o,t);Object.assign(n,r)});var o=l(n);n.buttons=r.getButtonListOpts(o),delete n.button,n.content=i.getContentOpts(n.content);var u=Object.assign({},s,c,n);return Object.keys(u).forEach(function(t){a.DEPRECATED_OPTS[t]&&a.logDeprecation(t)}),u}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r={element:"input",attributes:{placeholder:""}};e.getContentOpts=function(t){var e={};return o.isPlainObject(t)?Object.assign(e,t):t instanceof Element?{element:t}:"input"===t?r:null}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.logDeprecation=function(t){var n=e.DEPRECATED_OPTS[t],o=n.onlyRename,r=n.replacement,i=n.subOption,a=n.link,s=o?"renamed":"deprecated",c='SweetAlert warning: "'+t+'" option has been '+s+".";if(r){c+=" Please use"+(i?' "'+i+'" in ':" ")+'"'+r+'" instead.'}var l="https://sweetalert.js.org";c+=a?" More details: "+l+a:" More details: "+l+"/guides/#upgrading-from-1x",console.warn(c)},e.DEPRECATED_OPTS={type:{replacement:"icon",link:"/docs/#icon"},imageUrl:{replacement:"icon",link:"/docs/#icon"},customClass:{replacement:"className",onlyRename:!0,link:"/docs/#classname"},imageSize:{},showCancelButton:{replacement:"buttons",link:"/docs/#buttons"},showConfirmButton:{replacement:"button",link:"/docs/#button"},confirmButtonText:{replacement:"button",link:"/docs/#button"},confirmButtonColor:{},cancelButtonText:{replacement:"buttons",link:"/docs/#buttons"},closeOnConfirm:{replacement:"button",subOption:"closeModal",link:"/docs/#button"},closeOnCancel:{replacement:"buttons",subOption:"closeModal",link:"/docs/#buttons"},showLoaderOnConfirm:{replacement:"buttons"},animation:{},inputType:{replacement:"content",link:"/docs/#content"},inputValue:{replacement:"content",link:"/docs/#content"},inputPlaceholder:{replacement:"content",link:"/docs/#content"},html:{replacement:"content",link:"/docs/#content"},allowEscapeKey:{replacement:"closeOnEsc",onlyRename:!0,link:"/docs/#closeonesc"},allowClickOutside:{replacement:"closeOnClickOutside",onlyRename:!0,link:"/docs/#closeonclickoutside"}}}])});

/***/ }),

/***/ 280:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(108);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__global__ = __webpack_require__(60);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnswersService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AnswersService = (function () {
    function AnswersService(_http) {
        this._http = _http;
        this.url = __WEBPACK_IMPORTED_MODULE_3__global__["a" /* GLOBAL */].url;
    }
    AnswersService.prototype.getToken = function () {
        var token = localStorage.getItem('token');
        if (token != undefined) {
            this.token = token;
        }
        else {
            this.token = null;
        }
        return this.token;
    };
    AnswersService.prototype.getAnswers = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json' });
        console.log("222222");
        return this._http.get(this.url + 'answers/getAnswers', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    AnswersService.prototype.addNewAnswer = function (identity) {
        var params = JSON.stringify(identity);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'answers/addNewAnswer', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    AnswersService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["c" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["c" /* Http */]) === 'function' && _a) || Object])
    ], AnswersService);
    return AnswersService;
    var _a;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/answers.service.js.map

/***/ }),

/***/ 419:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_global__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_answers_service__ = __webpack_require__(280);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnswerComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var swal = __webpack_require__(20);
var AnswerComponent = (function () {
    function AnswerComponent(_userService, _answersService) {
        this._userService = _userService;
        this._answersService = _answersService;
        this.title = 'Preguntas y respuestas';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.url = __WEBPACK_IMPORTED_MODULE_2__services_global__["a" /* GLOBAL */].url;
        this.text = '';
    }
    AnswerComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._answersService.getAnswers().subscribe(function (response) {
            _this.allAnswers = response;
            console.log(_this.allAnswers);
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
            }
        });
    };
    AnswerComponent.prototype.getIssue = function (issue) {
        this.issue = issue;
        console.log(this.issue);
    };
    AnswerComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'answer',
            template: __webpack_require__(1045),
            providers: [__WEBPACK_IMPORTED_MODULE_3__services_answers_service__["a" /* AnswersService */], __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]],
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_3__services_answers_service__["a" /* AnswersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__services_answers_service__["a" /* AnswersService */]) === 'function' && _b) || Object])
    ], AnswerComponent);
    return AnswerComponent;
    var _a, _b;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/answer.component.js.map

/***/ }),

/***/ 420:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__ = __webpack_require__(134);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_answers_service__ = __webpack_require__(280);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_global__ = __webpack_require__(60);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AnswerNewComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var async = __webpack_require__(281);
var swal = __webpack_require__(20);
var AnswerNewComponent = (function () {
    function AnswerNewComponent(_userService, _answersService, _requestNewService) {
        this._userService = _userService;
        this._answersService = _answersService;
        this._requestNewService = _requestNewService;
        this.coma = ',';
        this.allSubService1 = [];
        this.allSubService2 = [];
        this.allSubService3 = [];
        this.allSubService4 = [];
        this.allSubService5 = [];
        this.allSubService6 = [];
        this.allSubService7 = [];
        this.allSubService8 = [];
        this.url = __WEBPACK_IMPORTED_MODULE_4__services_global__["a" /* GLOBAL */].url;
        this.title = 'Crear Preguntas y respuestas';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.load = false;
        this.newIssue = {
            departments: '',
            issue: '',
            descIssue: '',
            info: [],
        };
        this.allService1 = undefined;
        this.allSubService1 = [];
        this.selectService = '';
        this.campo1 = undefined;
        this.campo2 = undefined;
        this.campo3 = undefined;
        this.campo4 = undefined;
        this.campo5 = undefined;
        this.campo6 = undefined;
        this.campo7 = undefined;
        this.campo8 = undefined;
        this.text = {
            text1: undefined,
            text2: undefined,
            text3: undefined,
            text4: undefined,
            text5: undefined,
            text6: undefined,
            text7: undefined,
            text8: undefined,
        };
        this.category = {
            category1: undefined,
            category2: undefined,
            category3: undefined,
            category4: undefined,
            category5: undefined,
            category6: undefined,
            category7: undefined,
            category8: undefined,
        };
        this.serviceH = {
            service1: undefined,
            service2: undefined,
            service3: undefined,
            service4: undefined,
            service5: undefined,
            service6: undefined,
            service7: undefined,
            service8: undefined,
        };
        this.subService = {
            subService1: undefined,
            subService2: undefined,
            subService3: undefined,
            subService4: undefined,
            subService5: undefined,
            subService6: undefined,
            subService7: undefined,
            subService8: undefined,
        };
        this.hipervinculo = {
            hip1: undefined,
            hip2: '',
            hip3: '',
            hip4: '',
            hip5: '',
            hip6: '',
            hip7: '',
            hip8: '',
        };
    }
    AnswerNewComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._userService.getDepartments(this.identity).subscribe(function (response) {
            _this.departments = response;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
        this._requestNewService.getIssues(this.identity).subscribe(function (response) {
            _this.allCategory = response;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
            }
        });
    };
    AnswerNewComponent.prototype.searchCategory1 = function (service) {
        var _this = this;
        this.allService1 = [];
        this.allSubService1 = [];
        this.allCategory.forEach(function (element) {
            if (service == element.name) {
                _this.allService1 = element.service;
            }
        });
    };
    AnswerNewComponent.prototype.searchService1 = function (service) {
        var _this = this;
        this.allService1.forEach(function (element) {
            if (service == element.issue) {
                _this.allSubService1.push(element);
            }
        });
    };
    AnswerNewComponent.prototype.searchCategory2 = function (service) {
        var _this = this;
        this.allService2 = [];
        this.allSubService2 = [];
        this.allCategory.forEach(function (element) {
            if (service == element.name) {
                _this.allService2 = element.service;
            }
        });
    };
    AnswerNewComponent.prototype.searchService2 = function (service) {
        var _this = this;
        this.allService2.forEach(function (element) {
            if (service == element.issue) {
                _this.allSubService2.push(element);
            }
        });
    };
    AnswerNewComponent.prototype.searchCategory3 = function (service) {
        var _this = this;
        this.allService3 = [];
        this.allSubService3 = [];
        this.allCategory.forEach(function (element) {
            if (service == element.name) {
                _this.allService3 = element.service;
            }
        });
    };
    AnswerNewComponent.prototype.searchService3 = function (service) {
        var _this = this;
        this.allService3.forEach(function (element) {
            if (service == element.issue) {
                _this.allSubService3.push(element);
            }
        });
    };
    AnswerNewComponent.prototype.searchCategory4 = function (service) {
        var _this = this;
        this.allService4 = [];
        this.allSubService4 = [];
        this.allCategory.forEach(function (element) {
            if (service == element.name) {
                _this.allService4 = element.service;
            }
        });
    };
    AnswerNewComponent.prototype.searchService4 = function (service) {
        var _this = this;
        this.allService4.forEach(function (element) {
            if (service == element.issue) {
                _this.allSubService4.push(element);
            }
        });
    };
    AnswerNewComponent.prototype.searchCategory5 = function (service) {
        var _this = this;
        this.allService5 = [];
        this.allSubService5 = [];
        this.allCategory.forEach(function (element) {
            if (service == element.name) {
                _this.allService5 = element.service;
            }
        });
    };
    AnswerNewComponent.prototype.searchService5 = function (service) {
        var _this = this;
        this.allService5.forEach(function (element) {
            if (service == element.issue) {
                _this.allSubService5.push(element);
            }
        });
    };
    AnswerNewComponent.prototype.searchCategory6 = function (service) {
        var _this = this;
        this.allService6 = [];
        this.allSubService6 = [];
        this.allCategory.forEach(function (element) {
            if (service == element.name) {
                _this.allService6 = element.service;
            }
        });
    };
    AnswerNewComponent.prototype.searchService6 = function (service) {
        var _this = this;
        this.allService6.forEach(function (element) {
            if (service == element.issue) {
                _this.allSubService6.push(element);
            }
        });
    };
    AnswerNewComponent.prototype.searchCategory7 = function (service) {
        var _this = this;
        this.allService7 = [];
        this.allSubService7 = [];
        this.allCategory.forEach(function (element) {
            if (service == element.name) {
                _this.allService7 = element.service;
            }
        });
    };
    AnswerNewComponent.prototype.searchService7 = function (service) {
        var _this = this;
        this.allService7.forEach(function (element) {
            if (service == element.issue) {
                _this.allSubService7.push(element);
            }
        });
    };
    AnswerNewComponent.prototype.searchCategory8 = function (service) {
        var _this = this;
        this.allService8 = [];
        this.allSubService8 = [];
        this.allCategory.forEach(function (element) {
            if (service == element.name) {
                _this.allService8 = element.service;
            }
        });
    };
    AnswerNewComponent.prototype.searchService8 = function (service) {
        var _this = this;
        this.allService8.forEach(function (element) {
            if (service == element.issue) {
                _this.allSubService8.push(element);
            }
        });
    };
    AnswerNewComponent.prototype.addCampo1 = function (campo1) {
        this.campo1 = campo1;
    };
    AnswerNewComponent.prototype.cancelCampo1 = function (campo1) {
        this.campo1 = undefined;
        this.campo2 = undefined;
        this.campo3 = undefined;
        this.campo4 = undefined;
        this.campo5 = undefined;
        this.campo6 = undefined;
        this.campo7 = undefined;
        this.campo8 = undefined;
    };
    AnswerNewComponent.prototype.addCampo2 = function (campo2) {
        this.campo2 = campo2;
    };
    AnswerNewComponent.prototype.cancelCampo2 = function (campo2) {
        this.campo2 = undefined;
        this.campo3 = undefined;
        this.campo4 = undefined;
        this.campo5 = undefined;
        this.campo6 = undefined;
        this.campo7 = undefined;
        this.campo8 = undefined;
    };
    AnswerNewComponent.prototype.addCampo3 = function (campo3) {
        this.campo3 = campo3;
    };
    AnswerNewComponent.prototype.cancelCampo3 = function (campo3) {
        this.campo3 = undefined;
        this.campo4 = undefined;
        this.campo5 = undefined;
        this.campo6 = undefined;
        this.campo7 = undefined;
        this.campo8 = undefined;
    };
    AnswerNewComponent.prototype.addCampo4 = function (campo4) {
        this.campo4 = campo4;
    };
    AnswerNewComponent.prototype.cancelCampo4 = function (campo4) {
        this.campo4 = undefined;
        this.campo5 = undefined;
        this.campo6 = undefined;
        this.campo7 = undefined;
        this.campo8 = undefined;
    };
    AnswerNewComponent.prototype.addCampo5 = function (campo5) {
        this.campo5 = campo5;
    };
    AnswerNewComponent.prototype.cancelCampo5 = function (campo5) {
        this.campo5 = undefined;
        this.campo6 = undefined;
        this.campo7 = undefined;
        this.campo8 = undefined;
    };
    AnswerNewComponent.prototype.addCampo6 = function (campo6) {
        this.campo6 = campo6;
    };
    AnswerNewComponent.prototype.cancelCampo6 = function (campo6) {
        this.campo6 = undefined;
        this.campo7 = undefined;
        this.campo8 = undefined;
    };
    AnswerNewComponent.prototype.addCampo7 = function (campo7) {
        this.campo7 = campo7;
    };
    AnswerNewComponent.prototype.cancelCampo7 = function (campo7) {
        this.campo7 = undefined;
        this.campo8 = undefined;
    };
    AnswerNewComponent.prototype.addCampo8 = function (campo8) {
        this.campo8 = campo8;
    };
    AnswerNewComponent.prototype.cancelCampo8 = function (campo8) {
        this.campo8 = undefined;
    };
    AnswerNewComponent.prototype.fileChangeEvent1 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            this.fileToUpload1 = fileInput.target.files;
            this.newName1 = this.fileToUpload1[0].name;
            if (this.newName1.charAt(this.newName1.length - 24)) {
                this.newName1 = ('...' + this.newName1.charAt(this.newName1.length - 21) + this.newName1.charAt(this.newName1.length - 20) + this.newName1.charAt(this.newName1.length - 19) + this.newName1.charAt(this.newName1.length - 18) + this.newName1.charAt(this.newName1.length - 17) + this.newName1.charAt(this.newName1.length - 16) + this.newName1.charAt(this.newName1.length - 15) + this.newName1.charAt(this.newName1.length - 14) + this.newName1.charAt(this.newName1.length - 13) + this.newName1.charAt(this.newName1.length - 12) + this.newName1.charAt(this.newName1.length - 11) + this.newName1.charAt(this.newName1.length - 10) + this.newName1.charAt(this.newName1.length - 9) + this.newName1.charAt(this.newName1.length - 8) + this.newName1.charAt(this.newName1.length - 7) + this.newName1.charAt(this.newName1.length - 6) + this.newName1.charAt(this.newName1.length - 5) + this.newName1.charAt(this.newName1.length - 4) + this.newName1.charAt(this.newName1.length - 3) + this.newName1.charAt(this.newName1.length - 2) + this.newName1.charAt(this.newName1.length - 1));
            }
            else {
                this.newName1 = (this.newName1.charAt(this.newName1.length - 23) + this.newName1.charAt(this.newName1.length - 22) + this.newName1.charAt(this.newName1.length - 21) + this.newName1.charAt(this.newName1.length - 20) + this.newName1.charAt(this.newName1.length - 19) + this.newName1.charAt(this.newName1.length - 18) + this.newName1.charAt(this.newName1.length - 17) + this.newName1.charAt(this.newName1.length - 16) + this.newName1.charAt(this.newName1.length - 15) + this.newName1.charAt(this.newName1.length - 14) + this.newName1.charAt(this.newName1.length - 13) + this.newName1.charAt(this.newName1.length - 12) + this.newName1.charAt(this.newName1.length - 11) + this.newName1.charAt(this.newName1.length - 10) + this.newName1.charAt(this.newName1.length - 9) + this.newName1.charAt(this.newName1.length - 8) + this.newName1.charAt(this.newName1.length - 7) + this.newName1.charAt(this.newName1.length - 6) + this.newName1.charAt(this.newName1.length - 5) + this.newName1.charAt(this.newName1.length - 4) + this.newName1.charAt(this.newName1.length - 3) + this.newName1.charAt(this.newName1.length - 2) + this.newName1.charAt(this.newName1.length - 1));
            }
        }
        else {
            this.fileToUpload1 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    AnswerNewComponent.prototype.fileChangeEvent2 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            this.fileToUpload2 = fileInput.target.files;
            this.newName2 = this.fileToUpload2[0].name;
            if (this.newName2.charAt(this.newName2.length - 24)) {
                this.newName2 = ('...' + this.newName2.charAt(this.newName2.length - 21) + this.newName2.charAt(this.newName2.length - 20) + this.newName2.charAt(this.newName2.length - 19) + this.newName2.charAt(this.newName2.length - 18) + this.newName2.charAt(this.newName2.length - 17) + this.newName2.charAt(this.newName2.length - 16) + this.newName2.charAt(this.newName2.length - 15) + this.newName2.charAt(this.newName2.length - 14) + this.newName2.charAt(this.newName2.length - 13) + this.newName2.charAt(this.newName2.length - 12) + this.newName2.charAt(this.newName2.length - 11) + this.newName2.charAt(this.newName2.length - 10) + this.newName2.charAt(this.newName2.length - 9) + this.newName2.charAt(this.newName2.length - 8) + this.newName2.charAt(this.newName2.length - 7) + this.newName2.charAt(this.newName2.length - 6) + this.newName2.charAt(this.newName2.length - 5) + this.newName2.charAt(this.newName2.length - 4) + this.newName2.charAt(this.newName2.length - 3) + this.newName2.charAt(this.newName2.length - 2) + this.newName2.charAt(this.newName2.length - 1));
            }
            else {
                this.newName2 = (this.newName2.charAt(this.newName2.length - 23) + this.newName2.charAt(this.newName2.length - 22) + this.newName2.charAt(this.newName2.length - 21) + this.newName2.charAt(this.newName2.length - 20) + this.newName2.charAt(this.newName2.length - 19) + this.newName2.charAt(this.newName2.length - 18) + this.newName2.charAt(this.newName2.length - 17) + this.newName2.charAt(this.newName2.length - 16) + this.newName2.charAt(this.newName2.length - 15) + this.newName2.charAt(this.newName2.length - 14) + this.newName2.charAt(this.newName2.length - 13) + this.newName2.charAt(this.newName2.length - 12) + this.newName2.charAt(this.newName2.length - 11) + this.newName2.charAt(this.newName2.length - 10) + this.newName2.charAt(this.newName2.length - 9) + this.newName2.charAt(this.newName2.length - 8) + this.newName2.charAt(this.newName2.length - 7) + this.newName2.charAt(this.newName2.length - 6) + this.newName2.charAt(this.newName2.length - 5) + this.newName2.charAt(this.newName2.length - 4) + this.newName2.charAt(this.newName2.length - 3) + this.newName2.charAt(this.newName2.length - 2) + this.newName2.charAt(this.newName2.length - 1));
            }
        }
        else {
            this.fileToUpload2 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    AnswerNewComponent.prototype.fileChangeEvent3 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            this.fileToUpload3 = fileInput.target.files;
            this.newName3 = this.fileToUpload3[0].name;
            if (this.newName3.charAt(this.newName3.length - 24)) {
                this.newName3 = ('...' + this.newName3.charAt(this.newName3.length - 21) + this.newName3.charAt(this.newName3.length - 20) + this.newName3.charAt(this.newName3.length - 19) + this.newName3.charAt(this.newName3.length - 18) + this.newName3.charAt(this.newName3.length - 17) + this.newName3.charAt(this.newName3.length - 16) + this.newName3.charAt(this.newName3.length - 15) + this.newName3.charAt(this.newName3.length - 14) + this.newName3.charAt(this.newName3.length - 13) + this.newName3.charAt(this.newName3.length - 12) + this.newName3.charAt(this.newName3.length - 11) + this.newName3.charAt(this.newName3.length - 10) + this.newName3.charAt(this.newName3.length - 9) + this.newName3.charAt(this.newName3.length - 8) + this.newName3.charAt(this.newName3.length - 7) + this.newName3.charAt(this.newName3.length - 6) + this.newName3.charAt(this.newName3.length - 5) + this.newName3.charAt(this.newName3.length - 4) + this.newName3.charAt(this.newName3.length - 3) + this.newName3.charAt(this.newName3.length - 2) + this.newName3.charAt(this.newName3.length - 1));
            }
            else {
                this.newName3 = (this.newName3.charAt(this.newName3.length - 23) + this.newName3.charAt(this.newName3.length - 22) + this.newName3.charAt(this.newName3.length - 21) + this.newName3.charAt(this.newName3.length - 20) + this.newName3.charAt(this.newName3.length - 19) + this.newName3.charAt(this.newName3.length - 18) + this.newName3.charAt(this.newName3.length - 17) + this.newName3.charAt(this.newName3.length - 16) + this.newName3.charAt(this.newName3.length - 15) + this.newName3.charAt(this.newName3.length - 14) + this.newName3.charAt(this.newName3.length - 13) + this.newName3.charAt(this.newName3.length - 12) + this.newName3.charAt(this.newName3.length - 11) + this.newName3.charAt(this.newName3.length - 10) + this.newName3.charAt(this.newName3.length - 9) + this.newName3.charAt(this.newName3.length - 8) + this.newName3.charAt(this.newName3.length - 7) + this.newName3.charAt(this.newName3.length - 6) + this.newName3.charAt(this.newName3.length - 5) + this.newName3.charAt(this.newName3.length - 4) + this.newName3.charAt(this.newName3.length - 3) + this.newName3.charAt(this.newName3.length - 2) + this.newName3.charAt(this.newName3.length - 1));
            }
        }
        else {
            this.fileToUpload3 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    AnswerNewComponent.prototype.fileChangeEvent4 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            this.fileToUpload4 = fileInput.target.files;
            this.newName4 = this.fileToUpload4[0].name;
            if (this.newName4.charAt(this.newName4.length - 24)) {
                this.newName4 = ('...' + this.newName4.charAt(this.newName4.length - 21) + this.newName4.charAt(this.newName4.length - 20) + this.newName4.charAt(this.newName4.length - 19) + this.newName4.charAt(this.newName4.length - 18) + this.newName4.charAt(this.newName4.length - 17) + this.newName4.charAt(this.newName4.length - 16) + this.newName4.charAt(this.newName4.length - 15) + this.newName4.charAt(this.newName4.length - 14) + this.newName4.charAt(this.newName4.length - 13) + this.newName4.charAt(this.newName4.length - 12) + this.newName4.charAt(this.newName4.length - 11) + this.newName4.charAt(this.newName4.length - 10) + this.newName4.charAt(this.newName4.length - 9) + this.newName4.charAt(this.newName4.length - 8) + this.newName4.charAt(this.newName4.length - 7) + this.newName4.charAt(this.newName4.length - 6) + this.newName4.charAt(this.newName4.length - 5) + this.newName4.charAt(this.newName4.length - 4) + this.newName4.charAt(this.newName4.length - 3) + this.newName4.charAt(this.newName4.length - 2) + this.newName4.charAt(this.newName4.length - 1));
            }
            else {
                this.newName4 = (this.newName4.charAt(this.newName4.length - 23) + this.newName4.charAt(this.newName4.length - 22) + this.newName4.charAt(this.newName4.length - 21) + this.newName4.charAt(this.newName4.length - 20) + this.newName4.charAt(this.newName4.length - 19) + this.newName4.charAt(this.newName4.length - 18) + this.newName4.charAt(this.newName4.length - 17) + this.newName4.charAt(this.newName4.length - 16) + this.newName4.charAt(this.newName4.length - 15) + this.newName4.charAt(this.newName4.length - 14) + this.newName4.charAt(this.newName4.length - 13) + this.newName4.charAt(this.newName4.length - 12) + this.newName4.charAt(this.newName4.length - 11) + this.newName4.charAt(this.newName4.length - 10) + this.newName4.charAt(this.newName4.length - 9) + this.newName4.charAt(this.newName4.length - 8) + this.newName4.charAt(this.newName4.length - 7) + this.newName4.charAt(this.newName4.length - 6) + this.newName4.charAt(this.newName4.length - 5) + this.newName4.charAt(this.newName4.length - 4) + this.newName4.charAt(this.newName4.length - 3) + this.newName4.charAt(this.newName4.length - 2) + this.newName4.charAt(this.newName4.length - 1));
            }
        }
        else {
            this.fileToUpload4 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    AnswerNewComponent.prototype.fileChangeEvent5 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            this.fileToUpload5 = fileInput.target.files;
            this.newName5 = this.fileToUpload5[0].name;
            if (this.newName5.charAt(this.newName5.length - 24)) {
                this.newName5 = ('...' + this.newName5.charAt(this.newName5.length - 21) + this.newName5.charAt(this.newName5.length - 20) + this.newName5.charAt(this.newName5.length - 19) + this.newName5.charAt(this.newName5.length - 18) + this.newName5.charAt(this.newName5.length - 17) + this.newName5.charAt(this.newName5.length - 16) + this.newName5.charAt(this.newName5.length - 15) + this.newName5.charAt(this.newName5.length - 14) + this.newName5.charAt(this.newName5.length - 13) + this.newName5.charAt(this.newName5.length - 12) + this.newName5.charAt(this.newName5.length - 11) + this.newName5.charAt(this.newName5.length - 10) + this.newName5.charAt(this.newName5.length - 9) + this.newName5.charAt(this.newName5.length - 8) + this.newName5.charAt(this.newName5.length - 7) + this.newName5.charAt(this.newName5.length - 6) + this.newName5.charAt(this.newName5.length - 5) + this.newName5.charAt(this.newName5.length - 4) + this.newName5.charAt(this.newName5.length - 3) + this.newName5.charAt(this.newName5.length - 2) + this.newName5.charAt(this.newName5.length - 1));
            }
            else {
                this.newName5 = (this.newName5.charAt(this.newName5.length - 23) + this.newName5.charAt(this.newName5.length - 22) + this.newName5.charAt(this.newName5.length - 21) + this.newName5.charAt(this.newName5.length - 20) + this.newName5.charAt(this.newName5.length - 19) + this.newName5.charAt(this.newName5.length - 18) + this.newName5.charAt(this.newName5.length - 17) + this.newName5.charAt(this.newName5.length - 16) + this.newName5.charAt(this.newName5.length - 15) + this.newName5.charAt(this.newName5.length - 14) + this.newName5.charAt(this.newName5.length - 13) + this.newName5.charAt(this.newName5.length - 12) + this.newName5.charAt(this.newName5.length - 11) + this.newName5.charAt(this.newName5.length - 10) + this.newName5.charAt(this.newName5.length - 9) + this.newName5.charAt(this.newName5.length - 8) + this.newName5.charAt(this.newName5.length - 7) + this.newName5.charAt(this.newName5.length - 6) + this.newName5.charAt(this.newName5.length - 5) + this.newName5.charAt(this.newName5.length - 4) + this.newName5.charAt(this.newName5.length - 3) + this.newName5.charAt(this.newName5.length - 2) + this.newName5.charAt(this.newName5.length - 1));
            }
        }
        else {
            this.fileToUpload5 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    AnswerNewComponent.prototype.fileChangeEvent6 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            this.fileToUpload6 = fileInput.target.files;
            this.newName6 = this.fileToUpload6[0].name;
            if (this.newName6.charAt(this.newName6.length - 24)) {
                this.newName6 = ('...' + this.newName6.charAt(this.newName6.length - 21) + this.newName6.charAt(this.newName6.length - 20) + this.newName6.charAt(this.newName6.length - 19) + this.newName6.charAt(this.newName6.length - 18) + this.newName6.charAt(this.newName6.length - 17) + this.newName6.charAt(this.newName6.length - 16) + this.newName6.charAt(this.newName6.length - 15) + this.newName6.charAt(this.newName6.length - 14) + this.newName6.charAt(this.newName6.length - 13) + this.newName6.charAt(this.newName6.length - 12) + this.newName6.charAt(this.newName6.length - 11) + this.newName6.charAt(this.newName6.length - 10) + this.newName6.charAt(this.newName6.length - 9) + this.newName6.charAt(this.newName6.length - 8) + this.newName6.charAt(this.newName6.length - 7) + this.newName6.charAt(this.newName6.length - 6) + this.newName6.charAt(this.newName6.length - 5) + this.newName6.charAt(this.newName6.length - 4) + this.newName6.charAt(this.newName6.length - 3) + this.newName6.charAt(this.newName6.length - 2) + this.newName6.charAt(this.newName6.length - 1));
            }
            else {
                this.newName6 = (this.newName6.charAt(this.newName6.length - 23) + this.newName6.charAt(this.newName6.length - 22) + this.newName6.charAt(this.newName6.length - 21) + this.newName6.charAt(this.newName6.length - 20) + this.newName6.charAt(this.newName6.length - 19) + this.newName6.charAt(this.newName6.length - 18) + this.newName6.charAt(this.newName6.length - 17) + this.newName6.charAt(this.newName6.length - 16) + this.newName6.charAt(this.newName6.length - 15) + this.newName6.charAt(this.newName6.length - 14) + this.newName6.charAt(this.newName6.length - 13) + this.newName6.charAt(this.newName6.length - 12) + this.newName6.charAt(this.newName6.length - 11) + this.newName6.charAt(this.newName6.length - 10) + this.newName6.charAt(this.newName6.length - 9) + this.newName6.charAt(this.newName6.length - 8) + this.newName6.charAt(this.newName6.length - 7) + this.newName6.charAt(this.newName6.length - 6) + this.newName6.charAt(this.newName6.length - 5) + this.newName6.charAt(this.newName6.length - 4) + this.newName6.charAt(this.newName6.length - 3) + this.newName6.charAt(this.newName6.length - 2) + this.newName6.charAt(this.newName6.length - 1));
            }
        }
        else {
            this.fileToUpload6 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    AnswerNewComponent.prototype.fileChangeEvent7 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            this.fileToUpload7 = fileInput.target.files;
            this.newName7 = this.fileToUpload7[0].name;
            if (this.newName7.charAt(this.newName7.length - 24)) {
                this.newName7 = ('...' + this.newName7.charAt(this.newName7.length - 21) + this.newName7.charAt(this.newName7.length - 20) + this.newName7.charAt(this.newName7.length - 19) + this.newName7.charAt(this.newName7.length - 18) + this.newName7.charAt(this.newName7.length - 17) + this.newName7.charAt(this.newName7.length - 16) + this.newName7.charAt(this.newName7.length - 15) + this.newName7.charAt(this.newName7.length - 14) + this.newName7.charAt(this.newName7.length - 13) + this.newName7.charAt(this.newName7.length - 12) + this.newName7.charAt(this.newName7.length - 11) + this.newName7.charAt(this.newName7.length - 10) + this.newName7.charAt(this.newName7.length - 9) + this.newName7.charAt(this.newName7.length - 8) + this.newName7.charAt(this.newName7.length - 7) + this.newName7.charAt(this.newName7.length - 6) + this.newName7.charAt(this.newName7.length - 5) + this.newName7.charAt(this.newName7.length - 4) + this.newName7.charAt(this.newName7.length - 3) + this.newName7.charAt(this.newName7.length - 2) + this.newName7.charAt(this.newName7.length - 1));
            }
            else {
                this.newName7 = (this.newName7.charAt(this.newName7.length - 23) + this.newName7.charAt(this.newName7.length - 22) + this.newName7.charAt(this.newName7.length - 21) + this.newName7.charAt(this.newName7.length - 20) + this.newName7.charAt(this.newName7.length - 19) + this.newName7.charAt(this.newName7.length - 18) + this.newName7.charAt(this.newName7.length - 17) + this.newName7.charAt(this.newName7.length - 16) + this.newName7.charAt(this.newName7.length - 15) + this.newName7.charAt(this.newName7.length - 14) + this.newName7.charAt(this.newName7.length - 13) + this.newName7.charAt(this.newName7.length - 12) + this.newName7.charAt(this.newName7.length - 11) + this.newName7.charAt(this.newName7.length - 10) + this.newName7.charAt(this.newName7.length - 9) + this.newName7.charAt(this.newName7.length - 8) + this.newName7.charAt(this.newName7.length - 7) + this.newName7.charAt(this.newName7.length - 6) + this.newName7.charAt(this.newName7.length - 5) + this.newName7.charAt(this.newName7.length - 4) + this.newName7.charAt(this.newName7.length - 3) + this.newName7.charAt(this.newName7.length - 2) + this.newName7.charAt(this.newName7.length - 1));
            }
        }
        else {
            this.fileToUpload7 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    AnswerNewComponent.prototype.fileChangeEvent8 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            this.fileToUpload8 = fileInput.target.files;
            this.newName8 = this.fileToUpload8[0].name;
            if (this.newName8.charAt(this.newName8.length - 24)) {
                this.newName8 = ('...' + this.newName8.charAt(this.newName8.length - 21) + this.newName8.charAt(this.newName8.length - 20) + this.newName8.charAt(this.newName8.length - 19) + this.newName8.charAt(this.newName8.length - 18) + this.newName8.charAt(this.newName8.length - 17) + this.newName8.charAt(this.newName8.length - 16) + this.newName8.charAt(this.newName8.length - 15) + this.newName8.charAt(this.newName8.length - 14) + this.newName8.charAt(this.newName8.length - 13) + this.newName8.charAt(this.newName8.length - 12) + this.newName8.charAt(this.newName8.length - 11) + this.newName8.charAt(this.newName8.length - 10) + this.newName8.charAt(this.newName8.length - 9) + this.newName8.charAt(this.newName8.length - 8) + this.newName8.charAt(this.newName8.length - 7) + this.newName8.charAt(this.newName8.length - 6) + this.newName8.charAt(this.newName8.length - 5) + this.newName8.charAt(this.newName8.length - 4) + this.newName8.charAt(this.newName8.length - 3) + this.newName8.charAt(this.newName8.length - 2) + this.newName8.charAt(this.newName8.length - 1));
            }
            else {
                this.newName8 = (this.newName8.charAt(this.newName8.length - 23) + this.newName8.charAt(this.newName8.length - 22) + this.newName8.charAt(this.newName8.length - 21) + this.newName8.charAt(this.newName8.length - 20) + this.newName8.charAt(this.newName8.length - 19) + this.newName8.charAt(this.newName8.length - 18) + this.newName8.charAt(this.newName8.length - 17) + this.newName8.charAt(this.newName8.length - 16) + this.newName8.charAt(this.newName8.length - 15) + this.newName8.charAt(this.newName8.length - 14) + this.newName8.charAt(this.newName8.length - 13) + this.newName8.charAt(this.newName8.length - 12) + this.newName8.charAt(this.newName8.length - 11) + this.newName8.charAt(this.newName8.length - 10) + this.newName8.charAt(this.newName8.length - 9) + this.newName8.charAt(this.newName8.length - 8) + this.newName8.charAt(this.newName8.length - 7) + this.newName8.charAt(this.newName8.length - 6) + this.newName8.charAt(this.newName8.length - 5) + this.newName8.charAt(this.newName8.length - 4) + this.newName8.charAt(this.newName8.length - 3) + this.newName8.charAt(this.newName8.length - 2) + this.newName8.charAt(this.newName8.length - 1));
            }
        }
        else {
            this.fileToUpload8 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    AnswerNewComponent.prototype.imgCancel1 = function () {
        this.fileToUpload1 = undefined;
        this.fileToUpload2 = undefined;
        this.fileToUpload3 = undefined;
        this.fileToUpload4 = undefined;
        this.fileToUpload5 = undefined;
        this.fileToUpload6 = undefined;
        this.fileToUpload7 = undefined;
        this.fileToUpload8 = undefined;
    };
    AnswerNewComponent.prototype.imgCancel2 = function () {
        this.fileToUpload2 = undefined;
        this.fileToUpload3 = undefined;
        this.fileToUpload4 = undefined;
        this.fileToUpload5 = undefined;
        this.fileToUpload6 = undefined;
        this.fileToUpload7 = undefined;
        this.fileToUpload8 = undefined;
    };
    AnswerNewComponent.prototype.imgCancel3 = function () {
        this.fileToUpload3 = undefined;
        this.fileToUpload4 = undefined;
        this.fileToUpload5 = undefined;
        this.fileToUpload6 = undefined;
        this.fileToUpload7 = undefined;
        this.fileToUpload8 = undefined;
    };
    AnswerNewComponent.prototype.imgCancel4 = function () {
        this.fileToUpload4 = undefined;
        this.fileToUpload5 = undefined;
        this.fileToUpload6 = undefined;
        this.fileToUpload7 = undefined;
        this.fileToUpload8 = undefined;
    };
    AnswerNewComponent.prototype.imgCancel5 = function () {
        this.fileToUpload5 = undefined;
        this.fileToUpload6 = undefined;
        this.fileToUpload7 = undefined;
        this.fileToUpload8 = undefined;
    };
    AnswerNewComponent.prototype.imgCancel6 = function () {
        this.fileToUpload6 = undefined;
        this.fileToUpload7 = undefined;
        this.fileToUpload8 = undefined;
    };
    AnswerNewComponent.prototype.imgCancel7 = function () {
        this.fileToUpload7 = undefined;
        this.fileToUpload8 = undefined;
    };
    AnswerNewComponent.prototype.imgCancel8 = function () {
        this.fileToUpload8 = undefined;
    };
    AnswerNewComponent.prototype.makeFileRequest = function (url, params, files) {
        var token = this.token;
        return new Promise(function (resolve, reject) {
            var formData = new FormData();
            var xhr = new XMLHttpRequest();
            for (var i = 0; i < files.length; i++) {
                formData.append("image", files[i], files[i].name);
            }
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4) {
                    if (xhr.status == 200) {
                        resolve(JSON.parse(xhr.response));
                    }
                    else {
                        reject(xhr.response);
                    }
                }
            };
            xhr.open("POST", url, true);
            xhr.setRequestHeader("Authorization", token);
            xhr.send(formData);
        });
    };
    AnswerNewComponent.prototype.addNew = function (newIssue) {
        this.load = true;
        var thisAsync = this;
        async.waterfall([
            function step1(next) {
                if (thisAsync.campo1 && thisAsync.campo1 == 'texto') {
                    newIssue.info.push({ texto: thisAsync.text.text1 });
                }
                if (thisAsync.campo1 && thisAsync.campo1 == 'imagen') {
                    newIssue.info.push({ documento: thisAsync.fileToUpload1 });
                }
                if (thisAsync.campo1 && thisAsync.campo1 == 'hipervinculo') {
                    newIssue.info.push({ hipervinculo: thisAsync.subService.subService1 });
                }
                if (thisAsync.campo2 && thisAsync.campo2 == 'texto') {
                    newIssue.info.push({ texto: thisAsync.text.text2 });
                }
                if (thisAsync.campo2 && thisAsync.campo2 == 'imagen') {
                    newIssue.info.push({ documento: thisAsync.fileToUpload2 });
                }
                if (thisAsync.campo2 && thisAsync.campo2 == 'hipervinculo') {
                    newIssue.info.push({ hipervinculo: thisAsync.subService.subService2 });
                }
                if (thisAsync.campo3 && thisAsync.campo3 == 'texto') {
                    newIssue.info.push({ texto: thisAsync.text.text3 });
                }
                if (thisAsync.campo3 && thisAsync.campo3 == 'imagen') {
                    newIssue.info.push({ documento: thisAsync.fileToUpload3 });
                }
                if (thisAsync.campo3 && thisAsync.campo3 == 'hipervinculo') {
                    newIssue.info.push({ hipervinculo: thisAsync.subService.subService3 });
                }
                if (thisAsync.campo4 && thisAsync.campo4 == 'texto') {
                    newIssue.info.push({ texto: thisAsync.text.text4 });
                }
                if (thisAsync.campo4 && thisAsync.campo4 == 'imagen') {
                    newIssue.info.push({ documento: thisAsync.fileToUpload4 });
                }
                if (thisAsync.campo4 && thisAsync.campo4 == 'hipervinculo') {
                    newIssue.info.push({ hipervinculo: thisAsync.subService.subService4 });
                }
                if (thisAsync.campo5 && thisAsync.campo5 == 'texto') {
                    newIssue.info.push({ texto: thisAsync.text.text5 });
                }
                if (thisAsync.campo5 && thisAsync.campo5 == 'imagen') {
                    newIssue.info.push({ documento: thisAsync.fileToUpload5 });
                }
                if (thisAsync.campo5 && thisAsync.campo5 == 'hipervinculo') {
                    newIssue.info.push({ hipervinculo: thisAsync.subService.subService5 });
                }
                if (thisAsync.campo6 && thisAsync.campo6 == 'texto') {
                    newIssue.info.push({ texto: thisAsync.text.text6 });
                }
                if (thisAsync.campo6 && thisAsync.campo6 == 'imagen') {
                    newIssue.info.push({ documento: thisAsync.fileToUpload6 });
                }
                if (thisAsync.campo6 && thisAsync.campo6 == 'hipervinculo') {
                    newIssue.info.push({ hipervinculo: thisAsync.subService.subService6 });
                }
                if (thisAsync.campo7 && thisAsync.campo7 == 'texto') {
                    newIssue.info.push({ texto: thisAsync.text.text7 });
                }
                if (thisAsync.campo7 && thisAsync.campo7 == 'imagen') {
                    newIssue.info.push({ documento: thisAsync.fileToUpload7 });
                }
                if (thisAsync.campo7 && thisAsync.campo7 == 'hipervinculo') {
                    newIssue.info.push({ hipervinculo: thisAsync.subService.subService7 });
                }
                if (thisAsync.campo8 && thisAsync.campo8 == 'texto') {
                    newIssue.info.push({ texto: thisAsync.text.text8 });
                }
                if (thisAsync.campo8 && thisAsync.campo8 == 'imagen') {
                    newIssue.info.push({ documento: thisAsync.fileToUpload8 });
                }
                if (thisAsync.campo8 && thisAsync.campo8 == 'hipervinculo') {
                    newIssue.info.push({ hipervinculo: thisAsync.subService.subService8 });
                }
                var newIssues = newIssue;
                next(null, newIssues);
            },
            function step2(newIssue, next) {
                var imgNames = [];
                if (newIssue.info.length > 0) {
                    newIssue.info.forEach(function (element, i) {
                        if (element.documento) {
                            thisAsync.makeFileRequest(thisAsync.url + "answers/uploadFile/" + thisAsync.identity._id, [], element.documento).then(function (result) {
                                newIssue.info[i].documento = result;
                                imgNames.push(result);
                            });
                        }
                    });
                    next(null, newIssue, imgNames);
                }
                else {
                    next(null, newIssue, imgNames);
                }
            },
            function step3(newIssue, imgNames, next) {
                var _this = this;
                setTimeout(function () {
                    thisAsync._answersService.addNewAnswer(newIssue).subscribe(function (response) {
                        thisAsync.load = false;
                        window.location.reload();
                    }, function (error) {
                        var errorMessage = error;
                        if (errorMessage != null) {
                            _this.load = false;
                        }
                    });
                }, 2000);
            },
        ], function (err) {
            this.load = false;
            console.log(err);
        });
    };
    AnswerNewComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'answerNew',
            template: __webpack_require__(1046),
            providers: [__WEBPACK_IMPORTED_MODULE_3__services_answers_service__["a" /* AnswersService */], __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */], __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__["a" /* RequestNewService */]],
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_3__services_answers_service__["a" /* AnswersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__services_answers_service__["a" /* AnswersService */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__["a" /* RequestNewService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__["a" /* RequestNewService */]) === 'function' && _c) || Object])
    ], AnswerNewComponent);
    return AnswerNewComponent;
    var _a, _b, _c;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/answerNew.component.js.map

/***/ }),

/***/ 421:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AreasEditComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var swal = __webpack_require__(20);
var AreasEditComponent = (function () {
    function AreasEditComponent(_userService) {
        this._userService = _userService;
        this.title = 'Nueva área';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.responsable = "";
    }
    AreasEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._userService.getAreas().subscribe(function (response) {
            _this.areas = response;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
    };
    AreasEditComponent.prototype.areaClick = function (item) {
        var _this = this;
        this.item = item;
        this.responsable = item.area.responsable._id;
        this.active = item.area.active;
        this._userService.getAdminUsers().subscribe(function (usersAdmin) {
            _this.usersAdmins = usersAdmin;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
        this._userService.getLocals().subscribe(function (getLocals) {
            _this.getLocals = getLocals;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
    };
    AreasEditComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'areasEdit',
            template: __webpack_require__(1047),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object])
    ], AreasEditComponent);
    return AreasEditComponent;
    var _a;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/areasEdit.component.js.map

/***/ }),

/***/ 422:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AreasNewComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var swal = __webpack_require__(20);
var AreasNewComponent = (function () {
    function AreasNewComponent(_userService) {
        this._userService = _userService;
        this.title = 'Nueva área';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.names = "";
        this.shortName = "";
        this.responsable = "";
    }
    AreasNewComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._userService.getAdminUsers().subscribe(function (usersAdmin) {
            _this.usersAdmins = usersAdmin;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
    };
    AreasNewComponent.prototype.onSubmitNew = function () {
        var _this = this;
        var newDate = { name: this.names, responsable: this.responsable };
        this._userService.newArea(newDate).subscribe(function (response) {
            _this.names = '';
            _this.responsable = '';
            swal("¡Éxito!", "Área " + " guardado exitosamente", "success");
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
    };
    AreasNewComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'areasNew',
            template: __webpack_require__(1048),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object])
    ], AreasNewComponent);
    return AreasNewComponent;
    var _a;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/areasNew.component.js.map

/***/ }),

/***/ 423:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DepartmentsEditComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var swal = __webpack_require__(20);
var DepartmentsEditComponent = (function () {
    function DepartmentsEditComponent(_userService) {
        this._userService = _userService;
        this.title = 'Nuevos Departamentos';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.names = "";
        this.shortName = "";
        this.responsable = "";
        this.active = "";
    }
    DepartmentsEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.identity.remitente = "todos";
        this._userService.getDepartments(this.identity).subscribe(function (response) {
            _this.departments = response;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
        this._userService.getAdminUsers().subscribe(function (usersAdmin) {
            _this.usersAdmins = usersAdmin;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
    };
    DepartmentsEditComponent.prototype.clickEdit = function (item) {
        this.id = item._id;
        this.names = item.name;
        this.shortName = item.shortName;
        if (item.responsable)
            this.responsable = item.responsable._id;
        this.active = item.active;
    };
    DepartmentsEditComponent.prototype.editDepartment = function () {
        if (this.active == "false") {
            this.active = false;
        }
        if (this.active == "true") {
            this.active = true;
        }
        var editDepartment = {
            _id: this.id,
            name: this.names,
            shortName: this.shortName,
            responsable: this.responsable,
            active: this.active
        };
        this._userService.editDepartments(this).subscribe(function (response) {
            swal("¡Éxito!", "servicio creado", "success")
                .then(function (res) {
                window.location.reload();
            });
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                console.log(errorMessage);
                swal("Error!", "errorMessage", "error");
            }
        });
    };
    DepartmentsEditComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'departmentsEdit',
            template: __webpack_require__(1049),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object])
    ], DepartmentsEditComponent);
    return DepartmentsEditComponent;
    var _a;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/departmentsEdit.component.js.map

/***/ }),

/***/ 424:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DepartmentsNewComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var swal = __webpack_require__(20);
var DepartmentsNewComponent = (function () {
    function DepartmentsNewComponent(_userService) {
        this._userService = _userService;
        this.title = 'Nuevos Departamentos';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.names = "";
        this.shortName = "";
        this.responsable = "";
    }
    DepartmentsNewComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._userService.getAdminUsers().subscribe(function (usersAdmin) {
            _this.usersAdmins = usersAdmin;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
        this._userService.getDepartments(this.identity).subscribe(function (response) {
            _this.departments = response;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
    };
    DepartmentsNewComponent.prototype.onSubmitNew = function () {
        var _this = this;
        var newDate = { name: this.names, shortName: this.shortName, responsable: this.responsable };
        this._userService.newDepartments(newDate).subscribe(function (response) {
            _this.names = '';
            _this.shortName = '';
            _this.responsable = '';
            swal("¡Éxito!", "Departamento " + response.users.name + " guardado exitosamente", "success");
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
    };
    DepartmentsNewComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'departmentsNew',
            template: __webpack_require__(1050),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object])
    ], DepartmentsNewComponent);
    return DepartmentsNewComponent;
    var _a;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/departmentsNew.component.js.map

/***/ }),

/***/ 425:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EncuestaComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var swal = __webpack_require__(20);
var EncuestaComponent = (function () {
    function EncuestaComponent(_userService, _requestProcesService) {
        this._userService = _userService;
        this._requestProcesService = _requestProcesService;
        this.sortBy = "dateOfReport";
        this.search = [];
        this.title = 'Encuestas pendientes';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.load = false;
    }
    EncuestaComponent.prototype.momentTime = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('YYYY-MM-DD / HH:mm');
        else
            return '';
    };
    EncuestaComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.load = true;
        this._requestProcesService.getEncuestas(this.identity).subscribe(function (response) {
            if (response.length > 0) {
                _this.dataEncuesta = response;
                _this.inProcessTable = response;
                _this.oldData = response;
                _this.oldDataTable = response;
                response.forEach(function (element, indice) {
                    if (!element.reportBy.name)
                        element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                    if ((element.solutionTime[0].day * 24) + element.solutionTime[0].hours > element.issue.sla) {
                        response[indice].pasado = "red";
                    }
                    else {
                        response[indice].pasado = "green";
                    }
                    if (element.status == 'Solucionado') {
                        response[indice].solutionTimeNew = element.solutionTime[0].day + " d " + element.solutionTime[0].hours + " h " + element.solutionTime[0].minutes + " m";
                    }
                    if (element.analyst) {
                        response[indice].analyst.fnames = element.analyst.fname + element.analyst.lname;
                    }
                    if (element.encuesta == "") {
                        response[indice].encuesta = "No";
                    }
                    else {
                        if (!element.encuesta) {
                            response[indice].encuesta = '';
                        }
                    }
                });
                _this.load = false;
            }
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
            }
        });
    };
    EncuestaComponent.prototype.searchFolio = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    EncuestaComponent.prototype.searchSubcategoria = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    EncuestaComponent.prototype.searchServicio = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    EncuestaComponent.prototype.searchArea = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    EncuestaComponent.prototype.searchEstatus = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                element.status2 = element.status.toUpperCase();
                if (element.status2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    EncuestaComponent.prototype.searchEncuestaComents = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                if (element.encuestaComents) {
                    element.encuestaComents2 = element.encuestaComents.toUpperCase();
                    if (element.encuestaComents2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    EncuestaComponent.prototype.searchReportBy = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    EncuestaComponent.prototype.searchAnalista = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    EncuestaComponent.prototype.searchVencido = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                if (element.pasado == "red") {
                    var pasado = "Si";
                }
                else {
                    var pasado = "No";
                }
                var pasado2 = pasado.toUpperCase();
                if (pasado2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    EncuestaComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'answer',
            template: __webpack_require__(1051),
            providers: [__WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */], __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]],
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */]) === 'function' && _b) || Object])
    ], EncuestaComponent);
    return EncuestaComponent;
    var _a, _b;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/encuesta.component.js.map

/***/ }),

/***/ 426:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_xlsx__ = __webpack_require__(332);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_file_saver__ = __webpack_require__(302);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_file_saver___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_file_saver__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HistoryComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var swal = __webpack_require__(20);
var momentTimezone = __webpack_require__(303);
var HistoryComponent = (function () {
    function HistoryComponent(_userService, _requestProcesService) {
        this._userService = _userService;
        this._requestProcesService = _requestProcesService;
        this.sortBy = "dateOfReport";
        this.search = [];
        this.title = 'HISTORIAL';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.inProcess = [];
        this.inSolution = [];
        this.issue = '';
        this.table = 1;
        this.load = false;
        this.loadSolucionado = false;
        this.oldDataProcess = [];
        this.oldDataSolution = [];
    }
    HistoryComponent.prototype.momentTime = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('YYYY-MM-DD / HH:mm');
        else
            return '';
    };
    HistoryComponent.prototype.momentTimeDate = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('YYYY-MM-DD');
        else
            return '';
    };
    HistoryComponent.prototype.momentTimeHour = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('HH:mm');
        else
            return '';
    };
    HistoryComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.load = true;
        this.loadSolucionado = true;
        this._requestProcesService.getHistory(this.identity).subscribe(function (response) {
            response.forEach(function (element, indice) {
                response[indice].dateOfReport1 = response[indice].dateOfReport;
                element.dateOfReport = response[indice].dateOfReport;
                if (element.dateAssignmentCallCenter && element.dateAssignmentCallCenter != null) {
                    response[indice].dateOfReport = element.dateAssignmentCallCenter;
                    element.dateOfReport = element.dateAssignmentCallCenter;
                }
                if (element.notes && element.notes.length > 0) {
                    // los que tienen mensajes en bitacora
                    var ars = 0;
                    element.notes.forEach(function (elementNote, indiceNote) {
                        if (elementNote.esperaRespuesta && elementNote.esperaRespuesta == true) {
                            // los que tienen minimo un "en espera de respuesta" 
                            if (elementNote.noteBy.indexOf("Call") >= 0) {
                                ffinal = momentTimezone().tz('America/Monterrey');
                                ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                                momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                                var momentDia2 = parseInt(momentDia);
                            }
                            else {
                                if (element.notes[indiceNote + 1]) {
                                    // los que tienen mas mensajes
                                    var start = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey');
                                    var end = momentTimezone(element.notes[indiceNote + 1].dateOfNote).tz('America/Monterrey');
                                    var minutos = end.diff(start, 'minutes');
                                    ars = ars + minutos;
                                }
                                else {
                                    // --- este es el ultimo mensaje urgente
                                    ffinal = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey');
                                    ahora = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey').format('HH');
                                    momentDia = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey').format('DD');
                                    var momentDia2 = parseInt(momentDia);
                                }
                            }
                        }
                        else {
                            // ---- cuando tienen mensajes pero el ultimo es el que no urge
                            ffinal = momentTimezone().tz('America/Monterrey');
                            ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                            momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                            var momentDia2 = parseInt(momentDia);
                        }
                    });
                }
                else {
                    // ---- los que no tienen ningun mensaje
                    var ffinal = momentTimezone().tz('America/Monterrey');
                    var ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                    var ars = 0;
                    var momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                    var momentDia2 = parseInt(momentDia);
                }
                var fechaFinal = momentTimezone(element.dateOfReport).tz('America/Monterrey').add(ars, 'minutes');
                element.dateOfReport = fechaFinal;
                var totalHorasRestadas = 0;
                var totalMinRestadas = 0;
                var finicial = momentTimezone(element.dateOfReport).tz('America/Monterrey');
                var minutos = ffinal.diff(finicial, 'minutes');
                var arr = (minutos / 60).toString().split(".");
                var ar = parseInt(arr[0]);
                var astring = (ar / 24).toString();
                var totalDias = parseInt(astring, 10);
                var puraHora = momentTimezone(element.dateOfReport).tz('America/Monterrey').format('HH');
                var horario1 = momentTimezone('2023-04-26T14:00:00.000+00:00').tz('America/Monterrey').format('HH');
                var horario2 = momentTimezone('2023-04-27T02:00:00.000+00:00').tz('America/Monterrey').format('HH');
                if (totalDias >= 1) {
                    // todos los que son mayores a dos dias
                    totalDias = totalDias;
                    for (var i = 0; i < totalDias; i++) {
                        totalHorasRestadas = totalHorasRestadas + 12;
                    }
                    if (totalHorasRestadas == 12 && ar < 48) {
                        if (puraHora >= horario1 && puraHora <= horario2) {
                            totalHorasTrabajadas = (ar - (6 * (ar / 12)));
                        }
                        else {
                            if (puraHora < horario1) {
                                if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                    totalHorasTrabajadas = (parseInt(ahora) - parseInt(horario1));
                                }
                                else {
                                    totalHorasTrabajadas = totalHorasRestadas + (parseInt(ahora) - parseInt(horario1));
                                }
                            }
                            else {
                                if (puraHora > horario2) {
                                    if (ahora < "08") {
                                        totalHorasTrabajadas = totalHorasRestadas;
                                    }
                                    else {
                                        if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == ((momentDia2) - 1).toString()) {
                                            totalHorasTrabajadas = totalHorasRestadas;
                                        }
                                        else {
                                            totalHorasTrabajadas = totalHorasRestadas + (parseInt(ahora) - parseInt(horario1));
                                        }
                                    }
                                }
                            }
                        }
                    }
                    else {
                        var cosaRara = (((ar / totalHorasRestadas).toFixed(2)).toString()).split(".");
                        if (puraHora < horario1) {
                            totalHorasRestadas = totalHorasRestadas + ((parseInt(horario1) - parseInt(puraHora)));
                        }
                        else {
                            if (puraHora > horario2) {
                                var newss = parseFloat(0 + "." + cosaRara[1]);
                                totalHorasRestadas = (totalHorasRestadas) + (parseInt(ahora) - parseInt(horario1));
                            }
                        }
                        if (puraHora >= horario1 && puraHora <= horario2) {
                            if (puraHora > ahora) {
                                totalHorasRestadas = totalHorasRestadas + ((parseInt(horario2) - parseInt(puraHora)) + parseInt(ahora) - parseInt(horario1));
                            }
                        }
                    }
                }
                else {
                    if (puraHora >= horario1 && puraHora <= horario2) {
                        if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                        }
                        else {
                            if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                var totalHorasTrabajadas = ((parseInt(horario2) - parseInt(puraHora)));
                            }
                            else {
                                var totalHorasTrabajadas = ((parseInt(ahora) - parseInt(horario1)) + (parseInt(horario2) - parseInt(puraHora)));
                            }
                        }
                    }
                    else {
                        // fuera de hora
                        if (puraHora < horario1) {
                            totalHorasRestadas = parseInt(horario1) - parseInt(puraHora);
                        }
                        else {
                            totalHorasRestadas = ((parseInt(momentTimezone('2023-04-26T04:00:00.000+00:00').tz('America/Monterrey').format('HH'))) - (parseInt(puraHora) - (parseInt(momentTimezone('2023-04-26T06:00:00.000+00:00').tz('America/Monterrey').format('HH')))));
                            totalHorasRestadas = totalHorasRestadas + 8;
                        }
                    }
                }
                if (totalHorasTrabajadas) {
                    totalMinRestadas = totalHorasTrabajadas * 60;
                    var newMinutos = totalMinRestadas;
                }
                else {
                    totalMinRestadas = totalHorasRestadas * 60;
                    var newMinutos = minutos - totalMinRestadas;
                }
                var arr = (newMinutos / 60).toString().split(".");
                var ar = parseInt(arr[0]);
                var astring = (ar / 24).toString();
                var totalDias = parseInt(astring, 10);
                var sums = 0;
                for (var i = 0; i < parseInt(arr[0]); i++) {
                    var sums = sums + 60;
                }
                ;
                if (element.issue.sla && (element.status == 'Nuevo' || element.status == 'Pendiente' || element.status == 'Asignado' || element.status == 'Solucionado')) {
                    var menos = element.issue.sla - parseInt(arr[0]);
                    if (menos < 0) {
                        element.pasado = "red";
                    }
                    else {
                        element.pasado = "green";
                    }
                    element.restantes = menos + " h";
                }
                else {
                    if (element.issue.slaCallCenter) {
                        var menos = element.issue.slaCallCenter - parseInt(arr[0]);
                        if (menos < 0) {
                            element.pasadoCallCenter = "red";
                            element.pasado = "red";
                        }
                        else {
                            element.pasadoCallCenter = "green";
                            element.pasado = "green";
                        }
                        element.restantes = menos + " h";
                    }
                }
                if (element.dateAssignmentCallCenter && element.dateAssignmentCallCenter != null) {
                    response[indice].dateOfReport = element.dateAssignmentCallCenter;
                    var menos = element.issue.sla - parseInt(arr[0]);
                    response[indice].restantes = menos + " h";
                }
                if (!element.reportBy.name)
                    element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                if (element.analyst) {
                    element.analyst.fnames = element.analyst.fname + element.analyst.lname;
                }
                if (element.issue.emailToSendAnalist && element.issue.emailToSendAnalist[0]) {
                    element.analist1 = element.issue.emailToSendAnalist[0].fname + " " + element.issue.emailToSendAnalist[0].lname;
                }
                if (element.issue.emailToSendAnalist && element.issue.emailToSendAnalist[1]) {
                    element.analist2 = element.issue.emailToSendAnalist[1].fname + " " + element.issue.emailToSendAnalist[1].lname;
                }
                if (element.issue.emailToSendAnalist && element.issue.emailToSendAnalist[2]) {
                    element.analist3 = element.issue.emailToSendAnalist[2].fname + " " + element.issue.emailToSendAnalist[2].lname;
                }
                if (element.issue.emailToSendAnalist && element.issue.emailToSendAnalist[3]) {
                    element.analist4 = element.issue.emailToSendAnalist[3].fname + " " + element.issue.emailToSendAnalist[3].lname;
                }
                if (element.encuesta == "") {
                    element.encuesta = "No";
                }
                else {
                    if (!element.encuesta) {
                        element.encuesta = '';
                    }
                }
                setTimeout(function () {
                    _this.inProcess.push(element);
                    _this.oldDataProcess.push(element);
                }, 2000);
            });
            _this.load = false;
        }, function (error) {
            _this.load = false;
            var errorMessage = error;
            if (errorMessage != null) {
            }
        });
        this._requestProcesService.getHistorySolucionado(this.identity).subscribe(function (response2) {
            response2.forEach(function (element, indice) {
                response2[indice].dateOfReport1 = response2[indice].dateOfReport;
                element.dateOfReport = response2[indice].dateOfReport;
                if (element.dateAssignmentCallCenter) {
                    response2[indice].dateOfReport = element.dateAssignmentCallCenter;
                    element.dateOfReport = element.dateAssignmentCallCenter;
                }
                var totalHorasRestadas = 0;
                var totalMinRestadas = 0;
                var finicial = __WEBPACK_IMPORTED_MODULE_3_moment__(element.dateOfReport);
                var ffinal = __WEBPACK_IMPORTED_MODULE_3_moment__();
                var minutos = ffinal.diff(finicial, 'minutes');
                var arr = (minutos / 60).toString().split(".");
                var sums = 0;
                for (var i = 0; i < parseInt(arr[0]); i++) {
                    var sums = sums + 60;
                }
                ;
                if (element.issue.sla) {
                    var menos = element.issue.sla - parseInt(arr[0]);
                    if (element.status && (element.status == "Solucionado" || element.status == "SolucionadoPreventivo")) {
                        if ((element.solutionTime[0].day * 24) + element.solutionTime[0].hours > element.issue.sla) {
                            element.pasado = "red";
                        }
                        else {
                            element.pasado = "green";
                        }
                    }
                    if (element.status && (element.status == "SolucionadoCallCenter" || element.status == "SolucionadoPreventivoCallCenter")) {
                        if ((element.solutionTime[0].day * 24) + element.solutionTime[0].hours > element.issue.slaCallCenter) {
                            element.pasadoCallCenter = "red";
                        }
                        else {
                            element.pasadoCallCenter = "green";
                        }
                    }
                    element.restantes = menos + " h";
                }
                if (!element.reportBy.name)
                    element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                if (element.analyst) {
                    element.analyst.fnames = element.analyst.fname + element.analyst.lname;
                }
                if (element.issue.emailToSendAnalist && element.issue.emailToSendAnalist[0]) {
                    element.analist1 = element.issue.emailToSendAnalist[0].fname + " " + element.issue.emailToSendAnalist[0].lname;
                }
                if (element.issue.emailToSendAnalist && element.issue.emailToSendAnalist[1]) {
                    element.analist2 = element.issue.emailToSendAnalist[1].fname + " " + element.issue.emailToSendAnalist[1].lname;
                }
                if (element.issue.emailToSendAnalist && element.issue.emailToSendAnalist[2]) {
                    element.analist3 = element.issue.emailToSendAnalist[2].fname + " " + element.issue.emailToSendAnalist[2].lname;
                }
                if (element.issue.emailToSendAnalist && element.issue.emailToSendAnalist[3]) {
                    element.analist4 = element.issue.emailToSendAnalist[3].fname + " " + element.issue.emailToSendAnalist[3].lname;
                }
                element.solutionTimeNew = element.solutionTime[0].day + " d " + element.solutionTime[0].hours + " h " + element.solutionTime[0].minutes + " m";
                if (element.encuesta == "") {
                    element.encuesta = "No";
                }
                else {
                    if (!element.encuesta) {
                        element.encuesta = '';
                    }
                }
                _this.inSolution.push(element);
                _this.oldDataSolution.push(element);
            });
            _this.loadSolucionado = false;
        }, function (error) {
            _this.loadSolucionado = false;
            var errorMessage = error;
            if (errorMessage != null) {
            }
        });
    };
    HistoryComponent.prototype.onSubmit = function () {
    };
    HistoryComponent.prototype.goToSearch = function (toSearch) {
        var _this = this;
        this.load = true;
        this.inSolution = [];
        this.inProcess = [];
        if (toSearch) {
            var go = toSearch.toUpperCase();
            var go2 = go.trim();
            this._requestProcesService.getOnlyOne({ ruta: go2 }).subscribe(function (response) {
                if (response[0]) {
                    _this.inProcess = [];
                    for (var i = 0; i < response.length; i++) {
                        if (response[i].status == "Solucionado") {
                            _this.inSolution.push(response[i]);
                        }
                        else {
                            _this.inProcess.push(response[i]);
                        }
                    }
                    ;
                    response.forEach(function (element, indice) {
                        var finicial = __WEBPACK_IMPORTED_MODULE_3_moment__(element.dateOfReport);
                        var ffinal = __WEBPACK_IMPORTED_MODULE_3_moment__();
                        var minutos = ffinal.diff(finicial, 'minutes');
                        var arr = (minutos / 60).toString().split(".");
                        var sums = 0;
                        for (var i = 0; i < parseInt(arr[0]); i++) {
                            var sums = sums + 60;
                        }
                        ;
                        response[indice].tiempos = arr[0] + ' h ' + (minutos - sums).toString() + ' m';
                        if (element.issue.sla) {
                            var menos = element.issue.sla - parseInt(arr[0]);
                            response[indice].restantes = menos + " h";
                        }
                        if (!element.reportBy.name)
                            element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                    });
                    _this.load = false;
                }
                else {
                    swal("Error!", "No se encontraron datos", "error");
                    _this.load = false;
                }
            });
        }
        else {
            this._requestProcesService.getHistory(this.identity).subscribe(function (response) {
                for (var i = 0; i < response.length; i++) {
                    if (response[i].status == "Solucionado") {
                        _this.inSolution.push(response[i]);
                    }
                    else {
                        _this.inProcess.push(response[i]);
                    }
                }
                ;
                response.forEach(function (element, indice) {
                    var finicial = __WEBPACK_IMPORTED_MODULE_3_moment__(element.dateOfReport);
                    var ffinal = __WEBPACK_IMPORTED_MODULE_3_moment__();
                    var minutos = ffinal.diff(finicial, 'minutes');
                    var arr = (minutos / 60).toString().split(".");
                    var sums = 0;
                    for (var i = 0; i < parseInt(arr[0]); i++) {
                        var sums = sums + 60;
                    }
                    ;
                    response[indice].tiempos = arr[0] + ' h ' + (minutos - sums).toString() + ' m';
                    if (element.issue.sla) {
                        var menos = element.issue.sla - parseInt(arr[0]);
                        response[indice].restantes = menos + " h";
                    }
                    if (!element.reportBy.name)
                        element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                });
                _this.load = false;
            }, function (error) {
                _this.load = false;
                var errorMessage = error;
                if (errorMessage != null) {
                }
            });
        }
    };
    HistoryComponent.prototype.onClickIssue = function (item) {
        this.issue = item;
    };
    HistoryComponent.prototype.sendNotes = function (issue) {
        if (issue.reportBy.name == undefined)
            issue.reportBy.name = issue.reportBy.fname + " " + issue.reportBy.lname;
        issue.typeNote = "public";
        this._requestProcesService.addNote(issue).subscribe(function (response) {
            swal("¡Éxito!", "mensaje  " + "  enviado", "success")
                .then(function (res) {
                window.location.reload();
            });
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                swal("Error!", "errorMessage", "error");
            }
        });
    };
    HistoryComponent.prototype.searchFolio = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldDataProcess.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    HistoryComponent.prototype.searchSubcategoria = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    HistoryComponent.prototype.searchServicio = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    HistoryComponent.prototype.searchArea = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    HistoryComponent.prototype.searchEstatusCallCenter = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                if (element.statusCallCenter) {
                    element.status2 = element.statusCallCenter.toUpperCase();
                    if (element.status2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    HistoryComponent.prototype.searchEstatusCallCenter2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataSolution.forEach(function (element) {
                if (element.statusCallCenter) {
                    element.status2 = element.statusCallCenter.toUpperCase();
                    if (element.status2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchEstatus = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                if (element.status) {
                    element.status2 = element.status.toUpperCase();
                    if (element.status2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    HistoryComponent.prototype.searchSucursal = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    HistoryComponent.prototype.searchAreaSucursal = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                element.reportBy.area.name2 = element.reportBy.area.name.toString();
                if (element.reportBy.area.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    HistoryComponent.prototype.searchReportBy = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                element.manager2 = element.manager.toUpperCase();
                if (element.manager2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    HistoryComponent.prototype.searchAnalista = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    HistoryComponent.prototype.searchResponsable1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                element.analist12 = element.analist1.toUpperCase();
                if (element.analist12.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    HistoryComponent.prototype.searchResponsable2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                if (element.analist2) {
                    element.analist22 = element.analist2.toUpperCase();
                    if (element.analist22.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    HistoryComponent.prototype.searchMotivoPendiente = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                if (element.pending) {
                    element.pending2 = element.pending.toUpperCase();
                    if (element.pending2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    HistoryComponent.prototype.searchVencido = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                if (element.pasado == "red") {
                    var pasado = "Si";
                }
                else {
                    var pasado = "No";
                }
                var pasado2 = pasado.toUpperCase();
                if (pasado2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    HistoryComponent.prototype.searchFolio2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldDataSolution.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchSubcategoria2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataSolution.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchServicio2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataSolution.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchNumSerie = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldDataProcess.forEach(function (element) {
                if (element.numSerie) {
                    element.numSerie2 = element.numSerie.toUpperCase();
                    if (element.numSerie2.indexOf(go) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    HistoryComponent.prototype.searchNumSerie2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldDataSolution.forEach(function (element) {
                if (element.numSerie) {
                    element.numSerie2 = element.numSerie.toUpperCase();
                    if (element.numSerie2.indexOf(go) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchArea2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataSolution.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchEstatus2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataSolution.forEach(function (element) {
                if (element && element.status) {
                    element.status2 = element.status.toUpperCase();
                    if (element.status2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchSucursal2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataSolution.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchAreaSucursal2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataSolution.forEach(function (element) {
                element.reportBy.area.name2 = element.reportBy.area.name.toString();
                if (element.reportBy.area.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchReportBy2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataSolution.forEach(function (element) {
                element.manager2 = element.manager.toUpperCase();
                if (element.manager2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchAnalista2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataSolution.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchResponsable12 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataSolution.forEach(function (element) {
                element.analist12 = element.analist1.toUpperCase();
                if (element.analist12.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchResponsable22 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataSolution.forEach(function (element) {
                if (element.analist2) {
                    element.analist22 = element.analist2.toUpperCase();
                    if (element.analist22.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchMotivoPendiente2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataSolution.forEach(function (element) {
                if (element.pending) {
                    element.pending2 = element.pending.toUpperCase();
                    if (element.pending2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchMotivoSolucion2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataSolution.forEach(function (element) {
                if (element.solution) {
                    element.solution2 = element.solution.toUpperCase();
                    if (element.solution2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchEncuestaComents = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataSolution.forEach(function (element) {
                if (element.encuestaComents) {
                    element.encuestaComents2 = element.encuestaComents.toUpperCase();
                    if (element.encuestaComents2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.searchVencido2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataSolution.forEach(function (element) {
                if (element.pasado == "red") {
                    var pasado = "Si";
                }
                else {
                    var pasado = "No";
                }
                var pasado2 = pasado.toUpperCase();
                if (pasado2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldDataSolution;
        }
    };
    HistoryComponent.prototype.exportFunction = function (inSolution) {
        var _this = this;
        this.load = true;
        var EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';
        var EXCEL_EXTENSION = '.xlsx';
        if (this.table == 1) {
            var data = [];
            var name = 'timcketsAbiertos';
            inSolution.forEach(function (element, index) {
                data.push({ '#': index + 1, 'nombreComun': element.codeRequest, 'fechaInicio': _this.momentTimeDate(element.dateOfReport1), 'hora': _this.momentTimeHour(element.dateOfReport1), 'subcategoria': ((element.subCategory) ? element.subCategory : ''), 'servicio': ((element.service) ? element.service : ''), 'numSerie': ((element.numSerie) ? element.numSerie : ''), 'departamento': ((element.issue.category) ? element.issue.category : ''), 'sla': ((element.issue.sla) ? element.issue.sla : ''), 'slaCallCenter': ((element.issue.slaCallCenter) ? element.issue.slaCallCenter : ''), 'restante': ((element.restantes) ? element.restantes : ''), 'EstatusCallCenter': ((element.statusCallCenter) ? element.statusCallCenter : ''), 'EstatusAnalista': ((element.status) ? element.status : '') + ' ' + ((element.solutionBySucursal && element.solutionBySucursal == 'si') ? 'Por: Sucursal' : '') + ' ' + ((element.reaperturado && element.reaperturado[0]) ? 'Reaperturado' : ''), 'reportadoPor': ((element.reportBy.name) ? element.reportBy.name : '') + ((element.reportByAm) ? ' - ' + element.manager : ''), 'area': ((element.reportBy.area.name) ? element.reportBy.area.name : ''), 'reporta': ((element.manager) ? element.manager : ''), 'analista': ((element.analyst) ? element.analyst.fnames : ''), 'responsable1': ((element.analist1) ? element.analist1 : ''), 'responsable2': ((element.analist2) ? element.analist2 : ''), 'responsable3': ((element.analist3) ? element.analist3 : ''), 'responsable4': ((element.analist4) ? element.analist4 : ''), 'fechaEscalada': ((element.dateAssignmentCallCenter) ? _this.momentTime(element.dateAssignmentCallCenter) : ''), 'fechaAsignada': ((element.dateAssignment) ? _this.momentTime(element.dateAssignment) : ''), 'fechaPendiente': ((element.datePendieng) ? _this.momentTime(element.datePendieng) : ''), 'motivoEscalado': ((element.motivoAsignadoCallCenter) ? element.motivoAsignadoCallCenter : ''), 'motivoPendiente': ((element.pending) ? element.pending : ''), 'vencido': (element.vencidoH && element.vencidoH == 'si') ? 'Si' : (element.pasado && element.pasado == 'red') ? 'Si' : '' });
            });
        }
        else if (this.table == 2) {
            var data = [];
            var name = 'timcketsSolucionados';
            inSolution.forEach(function (element, index) {
                data.push({ '#': index + 1, 'nombreComun': element.codeRequest, 'fechaInicio': _this.momentTimeDate(element.dateOfReport1), 'hora': _this.momentTimeHour(element.dateOfReport1), 'subcategoria': ((element.subCategory) ? element.subCategory : ''), 'servicio': ((element.service) ? element.service : ''), 'numSerie': ((element.numSerie) ? element.numSerie : ''), 'departamento': ((element.issue.category) ? element.issue.category : ''), 'sla': ((element.issue.sla) ? element.issue.sla : ''), 'slaCallCenter': ((element.issue.slaCallCenter) ? element.issue.slaCallCenter : ''), 'tiempoSolucion': ((element.solutionTimeNew) ? element.solutionTimeNew : ''), 'tiempoH': ((element.solutionTimeHours) ? element.solutionTimeHours : ''), 'EstatusCallCenter': ((element.statusCallCenter) ? element.statusCallCenter : ''), 'EstatusAnalista': ((element.status) ? element.status : '') + ' ' + ((element.solutionBySucursal && element.solutionBySucursal == 'si') ? 'Por: Sucursal' : '') + ' ' + ((element.reaperturado && element.reaperturado[0]) ? 'Reaperturado' : ''), 'reportadoPor': ((element.reportBy.name) ? element.reportBy.name : '') + ((element.reportByAm) ? ' - ' + element.manager : ''), 'area': ((element.reportBy.area.name) ? element.reportBy.area.name : ''), 'reporta': ((element.manager) ? element.manager : ''), 'analista': ((element.analyst) ? element.analyst.fnames : ''), 'responsable1': ((element.analist1) ? element.analist1 : ''), 'responsable2': ((element.analist2) ? element.analist2 : ''), 'responsable3': ((element.analist3) ? element.analist3 : ''), 'responsable4': ((element.analist4) ? element.analist4 : ''), 'fechaEscalada': ((element.dateAssignmentCallCenter) ? _this.momentTime(element.dateAssignmentCallCenter) : ''), 'fechaAsignada': ((element.dateAssignment) ? _this.momentTime(element.dateAssignment) : ''), 'fechaPendiente': ((element.datePendieng) ? _this.momentTime(element.datePendieng) : ''), 'motivoEscalado': ((element.motivoAsignadoCallCenter) ? element.motivoAsignadoCallCenter : ''), 'motivoPendiente': ((element.pending) ? element.pending : ''), 'fechaSolucion': ((element.dateSolution) ? _this.momentTimeDate(element.dateSolution) : (element.dateSolutionCallCenter) ? _this.momentTimeDate(element.dateSolutionCallCenter) : ''), 'hora2': ((element.dateSolution) ? _this.momentTimeHour(element.dateSolution) : (element.dateSolutionCallCenter) ? _this.momentTimeHour(element.dateSolutionCallCenter) : ''), 'motivoSolucion': ((element.solution) ? element.solution : ''), 'vencido': (element.vencidoH && element.vencidoH == 'si') ? 'Si' : (element.pasado && element.pasado == 'red') ? 'Si' : '', 'encuesta': ((element.encuesta) ? element.encuesta : ''), 'comentarioEncuesta': ((element.encuestaComents) ? element.encuestaComents : '') });
            });
        }
        setTimeout(function () {
            if (data) {
                var worksheet = __WEBPACK_IMPORTED_MODULE_4_xlsx__["a" /* utils */].json_to_sheet(data);
                var workbook = {
                    Sheets: {
                        'timckets': worksheet
                    },
                    SheetNames: ['timckets']
                };
                var excelBuffer = __WEBPACK_IMPORTED_MODULE_4_xlsx__["b" /* write */](workbook, { bookType: 'xlsx', type: 'array' });
                var blobData = new Blob([excelBuffer], { type: EXCEL_TYPE });
                __WEBPACK_IMPORTED_MODULE_5_file_saver__["saveAs"](blobData, name);
                _this.load = false;
            }
            _this.load = false;
        }, 2000);
    };
    HistoryComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'history',
            template: __webpack_require__(1052),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */], __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */]) === 'function' && _b) || Object])
    ], HistoryComponent);
    return HistoryComponent;
    var _a, _b;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/history.component.js.map

/***/ }),

/***/ 427:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__ = __webpack_require__(61);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HomeComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var swal = __webpack_require__(20);
var HomeComponent = (function () {
    function HomeComponent(_userService, _requestProcesService) {
        this._userService = _userService;
        this._requestProcesService = _requestProcesService;
        this.title = 'INICIO';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.medida = "grande";
    }
    HomeComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (screen.width >= 1200) {
            this.medida = "grande";
        }
        else {
            this.medida = "chica";
        }
        if (this.identity.type != 'local') {
            // window.location.assign("https://soporte.timhortonsmx.com/homeAdmin");
            // window.location.assign("https://timckets.timhortonsmx.com/homeAdmin");
            window.location.assign("http://localhost:4200/homeAdmin");
        }
        else {
            this._requestProcesService.getEncuestas(this.identity).subscribe(function (response) {
                if (response.length > 0) {
                    _this.dataEncuesta = response;
                }
            }, function (error) {
                var errorMessage = error;
                if (errorMessage != null) {
                }
            });
            this._requestProcesService.getMessages(this.identity).subscribe(function (response) {
                _this.message = response;
            }, function (error) {
                var errorMessage = error;
                if (errorMessage != null) {
                }
            });
        }
    };
    HomeComponent.prototype.onSubmit = function () {
    };
    HomeComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'home',
            template: __webpack_require__(1053),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */], __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */]) === 'function' && _b) || Object])
    ], HomeComponent);
    return HomeComponent;
    var _a, _b;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/home.component.js.map

/***/ }),

/***/ 428:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HomeAdminComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var swal = __webpack_require__(20);
var momentTimezone = __webpack_require__(303);
var HomeAdminComponent = (function () {
    function HomeAdminComponent(_userService, _requestProcesService) {
        this._userService = _userService;
        this._requestProcesService = _requestProcesService;
        this.sortBy = "dateOfReport";
        this.search = [];
        this.mes1Num = 0;
        this.mes2Num = 0;
        this.mes3Num = 0;
        this.mes4Num = 0;
        this.reportDiario = 0;
        this.reportMes = 0;
        this.reportAnual = 0;
        this.cerradoDiario = 0;
        this.cerradoMes = 0;
        this.cerradoAnual = 0;
        this.cerradoTot = 0;
        this.fecha3 = new Date();
        this.fecha2 = new Date();
        this.fecha1 = new Date();
        this.title = 'Home Admin';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.issue = '';
        this.load = false;
        this.medida = "grande";
    }
    HomeAdminComponent.prototype.momentTime = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('YYYY-MM-DD / HH:mm');
        else
            return '';
    };
    HomeAdminComponent.prototype.momentTimeAnual = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('YYYY');
        else
            return '';
    };
    HomeAdminComponent.prototype.momentTimeMensual = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('YYYY-MM');
        else
            return '';
    };
    HomeAdminComponent.prototype.momentTimeDate = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('YYYY-MM-DD');
        else
            return '';
    };
    HomeAdminComponent.prototype.momentTimeHour = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('HH:mm');
        else
            return '';
    };
    HomeAdminComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (screen.width >= 1200) {
            this.medida = "grande";
        }
        else {
            this.medida = "chica";
            // window.location.assign("https://soporte.timhortonsmx.com/requestProces");
            // window.location.assign("https://timckets.timhortonsmx.com/requestProces");
            window.location.assign("http://localhost:4200/requestProces");
            return;
        }
        this.load = true;
        this._requestProcesService.allSolucionadosNum(this.identity).subscribe(function (response) {
            var numeroMes = new Date().getMonth() + 1;
            var meses = [
                { numero: -2, nombre: "Octubre" },
                { numero: -1, nombre: "Noviembre" },
                { numero: 0, nombre: "Diciembre" },
                { numero: 1, nombre: "Enero" },
                { numero: 2, nombre: "Febrero" },
                { numero: 3, nombre: "Marzo" },
                { numero: 4, nombre: "Abril" },
                { numero: 5, nombre: "Mayo" },
                { numero: 6, nombre: "Junio" },
                { numero: 7, nombre: "Julio" },
                { numero: 8, nombre: "Agosto" },
                { numero: 9, nombre: "Septiembre" },
                { numero: 10, nombre: "Octubre" },
                { numero: 11, nombre: "Noviembre" },
                { numero: 12, nombre: "Diciembre" },
            ];
            meses.forEach(function (element) {
                if (element.numero == numeroMes) {
                    _this.mes4 = element.nombre;
                }
                if (element.numero == numeroMes - 1) {
                    _this.mes3 = element.nombre;
                }
                if (element.numero == numeroMes - 2) {
                    _this.mes2 = element.nombre;
                }
                if (element.numero == numeroMes - 3) {
                    _this.mes1 = element.nombre;
                }
            });
            if (response) {
                _this.cerradoTot = response.length;
                _this.fecha3.setMonth(_this.fecha3.getMonth() - 1);
                _this.fecha2.setMonth(_this.fecha2.getMonth() - 2);
                _this.fecha1.setMonth(_this.fecha1.getMonth() - 3);
                response.forEach(function (element) {
                    if (_this.identity.type != "callCenter") {
                        if (_this.momentTimeDate(new Date()) == _this.momentTimeDate(element.dateSolution)) {
                            _this.cerradoDiario = _this.cerradoDiario + 1;
                        }
                        if (element.status == "SolucionadoPreventivo" && !element.dateSolution) {
                            if (_this.momentTimeDate(new Date()) == _this.momentTimeDate(element.dateSolutionCallCenter)) {
                                _this.cerradoDiario = _this.cerradoDiario + 1;
                            }
                        }
                        if (_this.momentTimeMensual(new Date()) == _this.momentTimeMensual(element.dateSolution)) {
                            _this.cerradoMes = _this.cerradoMes + 1;
                        }
                        if (element.status == "SolucionadoPreventivo" && !element.dateSolution) {
                            if (_this.momentTimeMensual(new Date()) == _this.momentTimeMensual(element.dateSolutionCallCenter)) {
                                _this.cerradoMes = _this.cerradoMes + 1;
                            }
                        }
                        if (element.status == "SolucionadoPreventivo" && !element.dateSolution) {
                            if (_this.momentTimeAnual(new Date()) == _this.momentTimeAnual(element.dateSolutionCallCenter)) {
                                _this.cerradoAnual = _this.cerradoAnual + 1;
                            }
                        }
                        else {
                            if (_this.momentTimeAnual(new Date()) == _this.momentTimeAnual(element.dateSolution)) {
                                _this.cerradoAnual = _this.cerradoAnual + 1;
                            }
                        }
                    }
                    else {
                        if (_this.momentTimeDate(new Date()) == _this.momentTimeDate(element.dateSolutionCallCenter)) {
                            _this.cerradoDiario = _this.cerradoDiario + 1;
                        }
                        if (_this.momentTimeMensual(new Date()) == _this.momentTimeMensual(element.dateSolutionCallCenter)) {
                            _this.cerradoMes = _this.cerradoMes + 1;
                        }
                        if (_this.momentTimeAnual(new Date()) == _this.momentTimeAnual(element.dateSolutionCallCenter)) {
                            _this.cerradoAnual = _this.cerradoAnual + 1;
                        }
                    }
                    if (_this.momentTimeDate(new Date()) == _this.momentTimeDate(element.dateOfReport)) {
                        _this.reportDiario = _this.reportDiario + 1;
                    }
                    if (_this.momentTimeMensual(new Date()) == _this.momentTimeMensual(element.dateOfReport)) {
                        _this.reportMes = _this.reportMes + 1;
                    }
                    if (_this.momentTimeAnual(new Date()) == _this.momentTimeAnual(element.dateOfReport)) {
                        _this.reportAnual = _this.reportAnual + 1;
                    }
                    if (_this.momentTimeMensual(new Date()) == _this.momentTimeMensual(element.dateOfReport)) {
                        _this.mes4Num = _this.mes4Num + 1;
                    }
                    if (_this.momentTimeMensual(_this.fecha3) == _this.momentTimeMensual(element.dateOfReport)) {
                        _this.mes3Num = _this.mes3Num + 1;
                    }
                    if (_this.momentTimeMensual(_this.fecha2) == _this.momentTimeMensual(element.dateOfReport)) {
                        _this.mes2Num = _this.mes2Num + 1;
                    }
                    if (_this.momentTimeMensual(_this.fecha1) == _this.momentTimeMensual(element.dateOfReport)) {
                        _this.mes1Num = _this.mes1Num + 1;
                    }
                });
            }
        }, function (error) {
            _this.load = false;
            var errorMessage = error;
            if (errorMessage != null) {
            }
        });
        this._requestProcesService.getAnswers(this.identity).subscribe(function (response) {
            _this.inNew = [];
            _this.oldData = [];
            if (response.length > 0) {
                var nuevo = 0;
                var asignado = 0;
                var pendiente = 0;
                var solucionado = 0;
                var num1 = 0;
                var num2 = 0;
                var num3 = 0;
                response.forEach(function (element, indice) {
                    if (element.notes && element.notes.length > 0) {
                        // los que tienen mensajes en bitacora
                        var ars = 0;
                        element.notes.forEach(function (elementNote, indiceNote) {
                            if (elementNote.esperaRespuesta && elementNote.esperaRespuesta == true) {
                                // los que tienen minimo un "en espera de respuesta" 
                                if (elementNote.noteBy.indexOf("Call") >= 0) {
                                    ffinal = momentTimezone().tz('America/Monterrey');
                                    ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                                    momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                                    var momentDia2 = parseInt(momentDia);
                                }
                                else {
                                    if (element.notes[indiceNote + 1]) {
                                        // los que tienen mas mensajes
                                        var start = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey');
                                        var end = momentTimezone(element.notes[indiceNote + 1].dateOfNote).tz('America/Monterrey');
                                        var minutos = end.diff(start, 'minutes');
                                        ars = ars + minutos;
                                    }
                                    else {
                                        // --- este es el ultimo mensaje urgente
                                        ffinal = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey');
                                        ahora = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey').format('HH');
                                        momentDia = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey').format('DD');
                                        var momentDia2 = parseInt(momentDia);
                                    }
                                }
                            }
                            else {
                                // ---- cuando tienen mensajes pero el ultimo es el que no urge
                                ffinal = momentTimezone().tz('America/Monterrey');
                                ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                                momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                                var momentDia2 = parseInt(momentDia);
                            }
                        });
                    }
                    else {
                        // ---- los que no tienen ningun mensaje
                        var ffinal = momentTimezone().tz('America/Monterrey');
                        var ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                        var ars = 0;
                        var momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                        var momentDia2 = parseInt(momentDia);
                    }
                    var fechaFinal = momentTimezone(element.dateOfReport).tz('America/Monterrey').add(ars, 'minutes');
                    element.dateOfReport = fechaFinal;
                    var totalHorasRestadas = 0;
                    var totalMinRestadas = 0;
                    var finicial = momentTimezone(element.dateOfReport).tz('America/Monterrey');
                    var minutos = ffinal.diff(finicial, 'minutes');
                    var arr = (minutos / 60).toString().split(".");
                    response[indice].dateOfReport1 = response[indice].dateOfReport;
                    element.dateOfReport = response[indice].dateOfReport;
                    if (element.dateAssignmentCallCenter && element.dateAssignmentCallCenter != null) {
                        var fechaFinalCall = momentTimezone(element.dateAssignmentCallCenter).tz('America/Monterrey').add(ars, 'minutes');
                        response[indice].dateOfReport = fechaFinalCall;
                        element.dateOfReport = fechaFinalCall;
                        var finicial = fechaFinalCall;
                        var minutos = ffinal.diff(finicial, 'minutes');
                        var arr = (minutos / 60).toString().split(".");
                        var menos = element.issue.sla - parseInt(arr[0]);
                        response[indice].restantes = menos + " h";
                    }
                    var ar = parseInt(arr[0]);
                    var astring = (ar / 24).toString();
                    var totalDias = parseInt(astring, 10);
                    var puraHora = momentTimezone(element.dateOfReport).tz('America/Monterrey').format('HH');
                    var horario1 = momentTimezone('2023-04-26T14:00:00.000+00:00').tz('America/Monterrey').format('HH');
                    var horario2 = momentTimezone('2023-04-27T02:00:00.000+00:00').tz('America/Monterrey').format('HH');
                    if (totalDias >= 1) {
                        // todos los que son mayores a dos dias
                        totalDias = totalDias;
                        for (var i = 0; i < totalDias; i++) {
                            totalHorasRestadas = totalHorasRestadas + 12;
                        }
                        if (totalHorasRestadas == 12 && ar < 48) {
                            if (puraHora >= horario1 && puraHora <= horario2) {
                                totalHorasTrabajadas = (ar - (6 * (ar / 12)));
                            }
                            else {
                                if (puraHora < horario1) {
                                    if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                        totalHorasTrabajadas = (parseInt(ahora) - parseInt(horario1));
                                    }
                                    else {
                                        totalHorasTrabajadas = totalHorasRestadas + (parseInt(ahora) - parseInt(horario1));
                                    }
                                }
                                else {
                                    if (puraHora > horario2) {
                                        if (ahora < "08") {
                                            totalHorasTrabajadas = totalHorasRestadas;
                                        }
                                        else {
                                            if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == ((momentDia2) - 1).toString()) {
                                                totalHorasTrabajadas = totalHorasRestadas;
                                            }
                                            else {
                                                totalHorasTrabajadas = totalHorasRestadas + (parseInt(ahora) - parseInt(horario1));
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            var cosaRara = (((ar / totalHorasRestadas).toFixed(2)).toString()).split(".");
                            if (puraHora < horario1) {
                                totalHorasRestadas = totalHorasRestadas + ((parseInt(horario1) - parseInt(puraHora)));
                            }
                            else {
                                if (puraHora > horario2) {
                                    var newss = parseFloat(0 + "." + cosaRara[1]);
                                    totalHorasRestadas = (totalHorasRestadas) + (parseInt(ahora) - parseInt(horario1));
                                }
                            }
                            if (puraHora >= horario1 && puraHora <= horario2) {
                                if (puraHora > ahora) {
                                    totalHorasRestadas = totalHorasRestadas + ((parseInt(horario2) - parseInt(puraHora)) + parseInt(ahora) - parseInt(horario1));
                                }
                            }
                        }
                    }
                    else {
                        if (puraHora >= horario1 && puraHora <= horario2) {
                            if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                            }
                            else {
                                if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                    var totalHorasTrabajadas = ((parseInt(horario2) - parseInt(puraHora)));
                                }
                                else {
                                    var totalHorasTrabajadas = ((parseInt(ahora) - parseInt(horario1)) + (parseInt(horario2) - parseInt(puraHora)));
                                }
                            }
                        }
                        else {
                            // fuera de hora
                            if (puraHora < horario1) {
                                totalHorasRestadas = parseInt(horario1) - parseInt(puraHora);
                            }
                            else {
                                totalHorasRestadas = ((parseInt(momentTimezone('2023-04-26T04:00:00.000+00:00').tz('America/Monterrey').format('HH'))) - (parseInt(puraHora) - (parseInt(momentTimezone('2023-04-26T06:00:00.000+00:00').tz('America/Monterrey').format('HH')))));
                                totalHorasRestadas = totalHorasRestadas + 8;
                            }
                        }
                    }
                    if (totalHorasTrabajadas) {
                        totalMinRestadas = totalHorasTrabajadas * 60;
                        var newMinutos = totalMinRestadas;
                    }
                    else {
                        totalMinRestadas = totalHorasRestadas * 60;
                        var newMinutos = minutos - totalMinRestadas;
                    }
                    var arr = (newMinutos / 60).toString().split(".");
                    var ar = parseInt(arr[0]);
                    var astring = (ar / 24).toString();
                    var totalDias = parseInt(astring, 10);
                    var sums = 0;
                    for (var i = 0; i < parseInt(arr[0]); i++) {
                        var sums = sums + 60;
                    }
                    ;
                    if (_this.identity.type == "callCenter") {
                        if (parseInt(arr[0]) > element.issue.slaCallCenter) {
                            response[indice].pasado = "red";
                        }
                        else {
                            response[indice].pasado = "green";
                        }
                    }
                    else {
                        if (parseInt(arr[0]) > element.issue.sla) {
                            response[indice].pasado = "red";
                        }
                        else {
                            response[indice].pasado = "green";
                        }
                    }
                    if (element.analyst) {
                        response[indice].analyst.fnames = element.analyst.fname + element.analyst.lname;
                    }
                    response[indice].tiempos = arr[0] + ' h ' + (newMinutos - sums).toString() + ' m';
                    if (_this.identity.type == "callCenter") {
                        if (element.issue.slaCallCenter) {
                            var menos = element.issue.slaCallCenter - parseInt(arr[0]);
                            response[indice].restantes = menos + " h";
                        }
                    }
                    else {
                        if (element.issue.sla) {
                            var menos = element.issue.sla - parseInt(arr[0]);
                            response[indice].restantes = menos + " h";
                        }
                    }
                    if (element.reportBy.name == undefined)
                        element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                    if (element.status == "Solucionado" || element.status == "SolucionadoPreventivo" || element.status == "AutoSolucionado") {
                        solucionado = solucionado + 1;
                    }
                    else {
                        if (_this.identity.type == "callCenter") {
                            if (element.statusCallCenter != "SolucionadoCallCenter" && element.statusCallCenter != "SolucionadoPreventivoCallCenter" && element.statusCallCenter != "AutoSolucionado") {
                                if (element.statusCallCenter == "NuevoCallCenter") {
                                    nuevo = nuevo + 1;
                                }
                                if (element.statusCallCenter == "AsignadoCallCenter") {
                                    asignado = asignado + 1;
                                }
                                if (element.statusCallCenter == "PendienteCallCenter") {
                                    pendiente = pendiente + 1;
                                }
                                _this.inNew.push(response[indice]);
                                _this.oldData.push(response[indice]);
                            }
                        }
                        else {
                            if (element.statusCallCenter) {
                                if ((element.statusCallCenter != "SolucionadoCallCenter" && element.statusCallCenter != "SolucionadoPreventivoCallCenter" && element.statusCallCenter != "AutoSolucionado")) {
                                    if (element.status == "Nuevo") {
                                        nuevo = nuevo + 1;
                                    }
                                    if (element.status == "Asignado") {
                                        asignado = asignado + 1;
                                    }
                                    if (element.status == "Pendiente") {
                                        pendiente = pendiente + 1;
                                    }
                                    _this.inNew.push(response[indice]);
                                    _this.oldData.push(response[indice]);
                                    if (_this.momentTimeDate(new Date()) == _this.momentTimeDate(element.dateOfReport)) {
                                        _this.reportDiario = _this.reportDiario + 1;
                                    }
                                    if (_this.momentTimeMensual(new Date()) == _this.momentTimeMensual(element.dateOfReport)) {
                                        _this.reportMes = _this.reportMes + 1;
                                    }
                                    if (_this.momentTimeAnual(new Date()) == _this.momentTimeAnual(element.dateOfReport)) {
                                        _this.reportAnual = _this.reportAnual + 1;
                                    }
                                    if (_this.momentTimeMensual(new Date()) == _this.momentTimeMensual(element.dateOfReport)) {
                                        _this.mes4Num = _this.mes4Num + 1;
                                    }
                                    if (_this.momentTimeMensual(_this.fecha3) == _this.momentTimeMensual(element.dateOfReport)) {
                                        _this.mes3Num = _this.mes3Num + 1;
                                    }
                                    if (_this.momentTimeMensual(_this.fecha2) == _this.momentTimeMensual(element.dateOfReport)) {
                                        _this.mes2Num = _this.mes2Num + 1;
                                    }
                                    if (_this.momentTimeMensual(_this.fecha1) == _this.momentTimeMensual(element.dateOfReport)) {
                                        _this.mes1Num = _this.mes1Num + 1;
                                    }
                                }
                            }
                            else {
                                if (element.status == "Nuevo") {
                                    nuevo = nuevo + 1;
                                }
                                if (element.status == "Asignado") {
                                    asignado = asignado + 1;
                                }
                                if (element.status == "Pendiente") {
                                    pendiente = pendiente + 1;
                                }
                                _this.inNew.push(response[indice]);
                                _this.oldData.push(response[indice]);
                                if (_this.momentTimeDate(new Date()) == _this.momentTimeDate(element.dateOfReport)) {
                                    _this.reportDiario = _this.reportDiario + 1;
                                }
                                if (_this.momentTimeMensual(new Date()) == _this.momentTimeMensual(element.dateOfReport)) {
                                    _this.reportMes = _this.reportMes + 1;
                                }
                                if (_this.momentTimeAnual(new Date()) == _this.momentTimeAnual(element.dateOfReport)) {
                                    _this.reportAnual = _this.reportAnual + 1;
                                }
                                if (_this.momentTimeMensual(new Date()) == _this.momentTimeMensual(element.dateOfReport)) {
                                    _this.mes4Num = _this.mes4Num + 1;
                                }
                                if (_this.momentTimeMensual(_this.fecha3) == _this.momentTimeMensual(element.dateOfReport)) {
                                    _this.mes3Num = _this.mes3Num + 1;
                                }
                                if (_this.momentTimeMensual(_this.fecha2) == _this.momentTimeMensual(element.dateOfReport)) {
                                    _this.mes2Num = _this.mes2Num + 1;
                                }
                                if (_this.momentTimeMensual(_this.fecha1) == _this.momentTimeMensual(element.dateOfReport)) {
                                    _this.mes1Num = _this.mes1Num + 1;
                                }
                            }
                        }
                    }
                    _this.nuevo = nuevo;
                    _this.asignado = asignado;
                    _this.pendiente = pendiente;
                    _this.solucionado = solucionado;
                });
                _this.load = false;
            }
            else {
                _this.load = false;
                _this.nuevo = 0;
                _this.asignado = 0;
                _this.pendiente = 0;
                _this.solucionado = 0;
            }
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                _this.load = false;
            }
        });
    };
    HomeAdminComponent.prototype.searchFolio = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inNew = newData;
        }
        else {
            this.inNew = this.oldData;
        }
    };
    HomeAdminComponent.prototype.searchSubcategoria = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inNew = newData;
        }
        else {
            this.inNew = this.oldData;
        }
    };
    HomeAdminComponent.prototype.searchServicio = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inNew = newData;
        }
        else {
            this.inNew = this.oldData;
        }
    };
    HomeAdminComponent.prototype.searchArea = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inNew = newData;
        }
        else {
            this.inNew = this.oldData;
        }
    };
    HomeAdminComponent.prototype.searchEstatus = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                if (element.status) {
                    element.status2 = element.status.toUpperCase();
                }
                else {
                    element.status2 = element.statusCallCenter.toUpperCase();
                }
                if (element.status2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inNew = newData;
        }
        else {
            this.inNew = this.oldData;
        }
    };
    HomeAdminComponent.prototype.searchReportBy = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inNew = newData;
        }
        else {
            this.inNew = this.oldData;
        }
    };
    HomeAdminComponent.prototype.searchNumSerie = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                if (element.numSerie) {
                    element.numSerie2 = element.numSerie.toUpperCase();
                    if (element.numSerie2.indexOf(go) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inNew = newData;
        }
        else {
            this.inNew = this.oldData;
        }
    };
    HomeAdminComponent.prototype.searchNumSerie2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                if (element.numSerie) {
                    element.numSerie2 = element.numSerie.toUpperCase();
                    if (element.numSerie2.indexOf(go) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inNew = newData;
        }
        else {
            this.inNew = this.oldData;
        }
    };
    HomeAdminComponent.prototype.searchAnalista = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inNew = newData;
        }
        else {
            this.inNew = this.oldData;
        }
    };
    HomeAdminComponent.prototype.searchVencido = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                if (element.pasado == "red") {
                    var pasado = "Si";
                }
                else {
                    var pasado = "No";
                }
                var pasado2 = pasado.toUpperCase();
                if (pasado2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inNew = newData;
        }
        else {
            this.inNew = this.oldData;
        }
    };
    HomeAdminComponent.prototype.goToSearch = function (toSearch) {
        var _this = this;
        if (toSearch) {
            var go = toSearch.toUpperCase();
            var go2 = go.trim();
            this._requestProcesService.getOnlyOne({ ruta: go2 }).subscribe(function (response) {
                if (response.length > 0) {
                    _this.inNew = response;
                    _this.oldData = response;
                    response.forEach(function (element, indice) {
                        if (element.notes && element.notes.length > 0) {
                            // los que tienen mensajes en bitacora
                            var ars = 0;
                            element.notes.forEach(function (elementNote, indiceNote) {
                                if (elementNote.esperaRespuesta && elementNote.esperaRespuesta == true) {
                                    // los que tienen minimo un "en espera de respuesta" 
                                    if (elementNote.noteBy.indexOf("Call") >= 0) {
                                        ffinal = momentTimezone().tz('America/Monterrey');
                                        ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                                        momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                                        var momentDia2 = parseInt(momentDia);
                                    }
                                    else {
                                        if (element.notes[indiceNote + 1]) {
                                            // los que tienen mas mensajes
                                            var start = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey');
                                            var end = momentTimezone(element.notes[indiceNote + 1].dateOfNote).tz('America/Monterrey');
                                            var minutos = end.diff(start, 'minutes');
                                            ars = ars + minutos;
                                        }
                                        else {
                                            // --- este es el ultimo mensaje urgente
                                            ffinal = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey');
                                            ahora = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey').format('HH');
                                            momentDia = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey').format('DD');
                                            var momentDia2 = parseInt(momentDia);
                                        }
                                    }
                                }
                                else {
                                    // ---- cuando tienen mensajes pero el ultimo es el que no urge
                                    ffinal = momentTimezone().tz('America/Monterrey');
                                    ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                                    momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                                    var momentDia2 = parseInt(momentDia);
                                }
                            });
                        }
                        else {
                            // ---- los que no tienen ningun mensaje
                            var ffinal = momentTimezone().tz('America/Monterrey');
                            var ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                            var ars = 0;
                            var momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                            var momentDia2 = parseInt(momentDia);
                        }
                        var fechaFinal = momentTimezone(element.dateOfReport).tz('America/Monterrey').add(ars, 'minutes');
                        response[indice].dateOfReport1 = fechaFinal;
                        element.dateOfReport = fechaFinal;
                        if (element.dateAssignmentCallCenter && element.dateAssignmentCallCenter != null) {
                            var fechaFinalCall = momentTimezone(element.dateAssignmentCallCenter).tz('America/Monterrey').add(ars, 'minutes');
                            response[indice].dateOfReport = fechaFinalCall;
                            element.dateOfReport = fechaFinalCall;
                            var finicial = momentTimezone(element.dateAssignmentCallCenter).tz('America/Monterrey');
                            var minutos = ffinal.diff(finicial, 'minutes');
                            var arr = (minutos / 60).toString().split(".");
                            var menos = element.issue.sla - parseInt(arr[0]);
                            response[indice].restantes = menos + " h";
                        }
                        var totalHorasRestadas = 0;
                        var totalMinRestadas = 0;
                        var finicial = momentTimezone(element.dateOfReport).tz('America/Monterrey');
                        var minutos = ffinal.diff(finicial, 'minutes');
                        var arr = (minutos / 60).toString().split(".");
                        var ar = parseInt(arr[0]);
                        var astring = (ar / 24).toString();
                        var totalDias = parseInt(astring, 10);
                        var puraHora = momentTimezone(element.dateOfReport).tz('America/Monterrey').format('HH');
                        var horario1 = momentTimezone('2023-04-26T14:00:00.000+00:00').tz('America/Monterrey').format('HH');
                        var horario2 = momentTimezone('2023-04-27T02:00:00.000+00:00').tz('America/Monterrey').format('HH');
                        if (totalDias >= 1) {
                            // todos los que son mayores a dos dias
                            totalDias = totalDias;
                            for (var i = 0; i < totalDias; i++) {
                                totalHorasRestadas = totalHorasRestadas + 12;
                            }
                            if (totalHorasRestadas == 12 && ar < 48) {
                                if (puraHora >= horario1 && puraHora <= horario2) {
                                    totalHorasTrabajadas = (ar - (6 * (ar / 12)));
                                }
                                else {
                                    if (puraHora < horario1) {
                                        if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                            totalHorasTrabajadas = (parseInt(ahora) - parseInt(horario1));
                                        }
                                        else {
                                            totalHorasTrabajadas = totalHorasRestadas + (parseInt(ahora) - parseInt(horario1));
                                        }
                                    }
                                    else {
                                        if (puraHora > horario2) {
                                            if (ahora < "08") {
                                                totalHorasTrabajadas = totalHorasRestadas;
                                            }
                                            else {
                                                if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == ((momentDia2) - 1).toString()) {
                                                    totalHorasTrabajadas = totalHorasRestadas;
                                                }
                                                else {
                                                    totalHorasTrabajadas = totalHorasRestadas + (parseInt(ahora) - parseInt(horario1));
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            else {
                                var cosaRara = (((ar / totalHorasRestadas).toFixed(2)).toString()).split(".");
                                if (puraHora < horario1) {
                                    totalHorasRestadas = totalHorasRestadas + ((parseInt(horario1) - parseInt(puraHora)));
                                }
                                else {
                                    if (puraHora > horario2) {
                                        var newss = parseFloat(0 + "." + cosaRara[1]);
                                        totalHorasRestadas = (totalHorasRestadas) + (parseInt(ahora) - parseInt(horario1));
                                    }
                                }
                                if (puraHora >= horario1 && puraHora <= horario2) {
                                    if (puraHora > ahora) {
                                        totalHorasRestadas = totalHorasRestadas + ((parseInt(horario2) - parseInt(puraHora)) + parseInt(ahora) - parseInt(horario1));
                                    }
                                }
                            }
                        }
                        else {
                            if (puraHora >= horario1 && puraHora <= horario2) {
                                if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                }
                                else {
                                    if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                        var totalHorasTrabajadas = ((parseInt(horario2) - parseInt(puraHora)));
                                    }
                                    else {
                                        var totalHorasTrabajadas = ((parseInt(ahora) - parseInt(horario1)) + (parseInt(horario2) - parseInt(puraHora)));
                                    }
                                }
                            }
                            else {
                                // fuera de hora
                                if (puraHora < horario1) {
                                    totalHorasRestadas = parseInt(horario1) - parseInt(puraHora);
                                }
                                else {
                                    totalHorasRestadas = ((parseInt(momentTimezone('2023-04-26T04:00:00.000+00:00').tz('America/Monterrey').format('HH'))) - (parseInt(puraHora) - (parseInt(momentTimezone('2023-04-26T06:00:00.000+00:00').tz('America/Monterrey').format('HH')))));
                                    totalHorasRestadas = totalHorasRestadas + 8;
                                }
                            }
                        }
                        if (totalHorasTrabajadas) {
                            totalMinRestadas = totalHorasTrabajadas * 60;
                            var newMinutos = totalMinRestadas;
                        }
                        else {
                            totalMinRestadas = totalHorasRestadas * 60;
                            var newMinutos = minutos - totalMinRestadas;
                        }
                        var arr = (newMinutos / 60).toString().split(".");
                        var ar = parseInt(arr[0]);
                        var astring = (ar / 24).toString();
                        var totalDias = parseInt(astring, 10);
                        var sums = 0;
                        for (var i = 0; i < parseInt(arr[0]); i++) {
                            var sums = sums + 60;
                        }
                        ;
                        response[indice].tiempos = arr[0] + ' h ' + (newMinutos - sums).toString() + ' m';
                        if (_this.identity.type == "callCenter") {
                            if (element.issue.slaCallCenter) {
                                var menos = element.issue.slaCallCenter - parseInt(arr[0]);
                                response[indice].restantes = menos + " h";
                            }
                        }
                        else {
                            if (element.issue.sla) {
                                var menos = element.issue.sla - parseInt(arr[0]);
                                response[indice].restantes = menos + " h";
                            }
                        }
                        if (element.reportBy.name == undefined)
                            element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                    });
                }
                else {
                    swal("Error!", "No se encontraron datos", "error");
                }
            });
        }
        else {
            this._requestProcesService.getAnswers(this.identity).subscribe(function (response) {
                if (response.length > 0) {
                    var nuevo = 0;
                    var asignado = 0;
                    var pendiente = 0;
                    var solucionado = 0;
                    response.forEach(function (element, indice) {
                        if (element.notes && element.notes.length > 0) {
                            // los que tienen mensajes en bitacora
                            var ars = 0;
                            element.notes.forEach(function (elementNote, indiceNote) {
                                if (elementNote.esperaRespuesta && elementNote.esperaRespuesta == true) {
                                    // los que tienen minimo un "en espera de respuesta" 
                                    if (elementNote.noteBy.indexOf("Call") >= 0) {
                                        ffinal = momentTimezone().tz('America/Monterrey');
                                        ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                                        momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                                        var momentDia2 = parseInt(momentDia);
                                    }
                                    else {
                                        if (element.notes[indiceNote + 1]) {
                                            // los que tienen mas mensajes
                                            var start = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey');
                                            var end = momentTimezone(element.notes[indiceNote + 1].dateOfNote).tz('America/Monterrey');
                                            var minutos = end.diff(start, 'minutes');
                                            ars = ars + minutos;
                                        }
                                        else {
                                            // --- este es el ultimo mensaje urgente
                                            ffinal = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey');
                                            ahora = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey').format('HH');
                                            momentDia = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey').format('DD');
                                            var momentDia2 = parseInt(momentDia);
                                        }
                                    }
                                }
                                else {
                                    // ---- cuando tienen mensajes pero el ultimo es el que no urge
                                    ffinal = momentTimezone().tz('America/Monterrey');
                                    ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                                    momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                                    var momentDia2 = parseInt(momentDia);
                                }
                            });
                        }
                        else {
                            // ---- los que no tienen ningun mensaje
                            var ffinal = momentTimezone().tz('America/Monterrey');
                            var ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                            var ars = 0;
                            var momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                            var momentDia2 = parseInt(momentDia);
                        }
                        var fechaFinal = momentTimezone(element.dateOfReport).tz('America/Monterrey').add(ars, 'minutes');
                        response[indice].dateOfReport1 = fechaFinal;
                        element.dateOfReport = fechaFinal;
                        if (element.dateAssignmentCallCenter && element.dateAssignmentCallCenter != null) {
                            var fechaFinalCall = momentTimezone(element.dateAssignmentCallCenter).tz('America/Monterrey').add(ars, 'minutes');
                            response[indice].dateOfReport = fechaFinalCall;
                            element.dateOfReport = fechaFinalCall;
                            var finicial = momentTimezone(element.dateAssignmentCallCenter).tz('America/Monterrey');
                            var minutos = ffinal.diff(finicial, 'minutes');
                            var arr = (minutos / 60).toString().split(".");
                            var menos = element.issue.sla - parseInt(arr[0]);
                            response[indice].restantes = menos + " h";
                        }
                        var totalHorasRestadas = 0;
                        var totalMinRestadas = 0;
                        var finicial = momentTimezone(element.dateOfReport).tz('America/Monterrey');
                        var minutos = ffinal.diff(finicial, 'minutes');
                        var arr = (minutos / 60).toString().split(".");
                        var ar = parseInt(arr[0]);
                        var astring = (ar / 24).toString();
                        var totalDias = parseInt(astring, 10);
                        var puraHora = momentTimezone(element.dateOfReport).tz('America/Monterrey').format('HH');
                        var horario1 = momentTimezone('2023-04-26T14:00:00.000+00:00').tz('America/Monterrey').format('HH');
                        var horario2 = momentTimezone('2023-04-27T02:00:00.000+00:00').tz('America/Monterrey').format('HH');
                        if (totalDias >= 1) {
                            // todos los que son mayores a dos dias
                            totalDias = totalDias;
                            for (var i = 0; i < totalDias; i++) {
                                totalHorasRestadas = totalHorasRestadas + 12;
                            }
                            if (totalHorasRestadas == 12 && ar < 48) {
                                if (puraHora >= horario1 && puraHora <= horario2) {
                                    totalHorasTrabajadas = (ar - (6 * (ar / 12)));
                                }
                                else {
                                    if (puraHora < horario1) {
                                        if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                            totalHorasTrabajadas = (parseInt(ahora) - parseInt(horario1));
                                        }
                                        else {
                                            totalHorasTrabajadas = totalHorasRestadas + (parseInt(ahora) - parseInt(horario1));
                                        }
                                    }
                                    else {
                                        if (puraHora > horario2) {
                                            if (ahora < "08") {
                                                totalHorasTrabajadas = totalHorasRestadas;
                                            }
                                            else {
                                                if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == ((momentDia2) - 1).toString()) {
                                                    totalHorasTrabajadas = totalHorasRestadas;
                                                }
                                                else {
                                                    totalHorasTrabajadas = totalHorasRestadas + (parseInt(ahora) - parseInt(horario1));
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            else {
                                var cosaRara = (((ar / totalHorasRestadas).toFixed(2)).toString()).split(".");
                                if (puraHora < horario1) {
                                    totalHorasRestadas = totalHorasRestadas + ((parseInt(horario1) - parseInt(puraHora)));
                                }
                                else {
                                    if (puraHora > horario2) {
                                        var newss = parseFloat(0 + "." + cosaRara[1]);
                                        totalHorasRestadas = (totalHorasRestadas) + (parseInt(ahora) - parseInt(horario1));
                                    }
                                }
                                if (puraHora >= horario1 && puraHora <= horario2) {
                                    if (puraHora > ahora) {
                                        totalHorasRestadas = totalHorasRestadas + ((parseInt(horario2) - parseInt(puraHora)) + parseInt(ahora) - parseInt(horario1));
                                    }
                                }
                            }
                        }
                        else {
                            if (puraHora >= horario1 && puraHora <= horario2) {
                                if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                }
                                else {
                                    if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                        var totalHorasTrabajadas = ((parseInt(horario2) - parseInt(puraHora)));
                                    }
                                    else {
                                        var totalHorasTrabajadas = ((parseInt(ahora) - parseInt(horario1)) + (parseInt(horario2) - parseInt(puraHora)));
                                    }
                                }
                            }
                            else {
                                // fuera de hora
                                if (puraHora < horario1) {
                                    totalHorasRestadas = parseInt(horario1) - parseInt(puraHora);
                                }
                                else {
                                    totalHorasRestadas = ((parseInt(momentTimezone('2023-04-26T04:00:00.000+00:00').tz('America/Monterrey').format('HH'))) - (parseInt(puraHora) - (parseInt(momentTimezone('2023-04-26T06:00:00.000+00:00').tz('America/Monterrey').format('HH')))));
                                    totalHorasRestadas = totalHorasRestadas + 8;
                                }
                            }
                        }
                        if (totalHorasTrabajadas) {
                            totalMinRestadas = totalHorasTrabajadas * 60;
                            var newMinutos = totalMinRestadas;
                        }
                        else {
                            totalMinRestadas = totalHorasRestadas * 60;
                            var newMinutos = minutos - totalMinRestadas;
                        }
                        var arr = (newMinutos / 60).toString().split(".");
                        var ar = parseInt(arr[0]);
                        var astring = (ar / 24).toString();
                        var totalDias = parseInt(astring, 10);
                        var sums = 0;
                        for (var i = 0; i < parseInt(arr[0]); i++) {
                            var sums = sums + 60;
                        }
                        ;
                        response[indice].tiempos = arr[0] + ' h ' + (newMinutos - sums).toString() + ' m';
                        if (_this.identity.type == "callCenter") {
                            if (element.issue.slaCallCenter) {
                                var menos = element.issue.slaCallCenter - parseInt(arr[0]);
                                response[indice].restantes = menos + " h";
                            }
                        }
                        else {
                            if (element.issue.sla) {
                                var menos = element.issue.sla - parseInt(arr[0]);
                                response[indice].restantes = menos + " h";
                            }
                        }
                        if (element.reportBy.name == undefined)
                            element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                        if (element.status == "Nuevo") {
                            nuevo = nuevo + 1;
                        }
                        if (element.status == "Asignado") {
                            asignado = asignado + 1;
                        }
                        if (element.status == "Pendiente") {
                            pendiente = pendiente + 1;
                        }
                        if (element.status == "Solucionado") {
                            solucionado = solucionado + 1;
                        }
                        _this.nuevo = nuevo;
                        _this.asignado = asignado;
                        _this.pendiente = pendiente;
                        _this.solucionado = solucionado;
                    });
                }
                else {
                    _this.nuevo = 0;
                    _this.asignado = 0;
                    _this.pendiente = 0;
                    _this.solucionado = 0;
                }
            }, function (error) {
                var errorMessage = error;
                if (errorMessage != null) {
                    // var body = JSON.parse(error._body)
                    swal("Error!", "errrrrrr", "error");
                }
            });
        }
    };
    HomeAdminComponent.prototype.onSubmit = function () {
    };
    HomeAdminComponent.prototype.onClickIssue = function (item) {
        this.issue = item;
    };
    HomeAdminComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'homeAdmin',
            template: __webpack_require__(1054),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */], __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */]) === 'function' && _b) || Object])
    ], HomeAdminComponent);
    return HomeAdminComponent;
    var _a, _b;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/homeAdmin.component.js.map

/***/ }),

/***/ 429:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__ = __webpack_require__(134);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return IssuesEditComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var swal = __webpack_require__(20);
var IssuesEditComponent = (function () {
    function IssuesEditComponent(_userService, _requestNewService) {
        this._userService = _userService;
        this._requestNewService = _requestNewService;
        this.sortBy = "category";
        this.search = [];
        this.title = 'Agregar Servicios';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.analyst = {
            analyst1: '',
            analyst2: '',
            analyst3: '',
            analyst4: ''
        },
            this.copiados = {
                copiados1: '',
                copiados2: '',
                copiados3: '',
                copiados4: '',
                copiados5: '',
                copiados6: '',
                copiados7: '',
                copiados8: '',
            },
            this.zonesNLAnalyst = {
                analyst1: '',
                analyst2: '',
                analyst3: '',
                analyst4: ''
            },
            this.zonesNLCopiados = {
                copiados1: '',
                copiados2: '',
                copiados3: '',
                copiados4: '',
                copiados5: '',
                copiados6: '',
                copiados7: '',
                copiados8: '',
            },
            this.zonesCoahilaAnalyst = {
                analyst1: '',
                analyst2: '',
                analyst3: '',
                analyst4: ''
            },
            this.zonesCoahilaCopiados = {
                copiados1: '',
                copiados2: '',
                copiados3: '',
                copiados4: '',
                copiados5: '',
                copiados6: '',
                copiados7: '',
                copiados8: '',
            },
            this.zonesQueretaroAnalyst = {
                analyst1: '',
                analyst2: '',
                analyst3: '',
                analyst4: ''
            },
            this.zonesQueretaroCopiados = {
                copiados1: '',
                copiados2: '',
                copiados3: '',
                copiados4: '',
                copiados5: '',
                copiados6: '',
                copiados7: '',
                copiados8: '',
            },
            this.load = false;
        this.campo = {
            foto: false,
            numReport: false,
            nombreTimMember: false,
            numNomina: false,
            cantBolsasComprobantes: false,
            numOrden: false,
            producto: false,
            lote: false,
            cantidad: false,
            numSerie: false,
            marca: false,
            menuboards: false,
            dt: false,
            kds: false,
            email: false,
            pos: false,
            medidas: false,
            video: false,
        };
        this.zonesToAnalyst = {
            general: false,
            porEstado: false
        };
    }
    IssuesEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._requestNewService.getAllIssuesNormal(this.identity).subscribe(function (response) {
            _this.allIsues = response;
            _this.oldData = response;
            response.forEach(function (element, indice) {
                if (element.active == true) {
                    response[indice].activo = "Si";
                }
                else {
                    response[indice].activo = "No";
                }
            });
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
        this._userService.getDepartments(this.identity).subscribe(function (response) {
            _this.departments = response;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
        this._userService.getAdminUsers().subscribe(function (usersAdmin) {
            _this.usersAdmins = usersAdmin;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
            }
        });
    };
    IssuesEditComponent.prototype.issueClick = function (issue) {
        if (issue.campo) {
            this.campo = issue.campo;
        }
        else {
            this.campo = {
                foto: false,
                numReport: false,
                nombreTimMember: false,
                numNomina: false,
                cantBolsasComprobantes: false,
                numOrden: false,
                producto: false,
                lote: false,
                cantidad: false,
                numSerie: false,
                marca: false,
                menuboards: false,
                dt: false,
                kds: false,
                email: false,
                pos: false,
                medidas: false,
                video: false,
            };
        }
        this.issue = issue;
        this.newIssue = issue;
        if (issue.departments && issue.departments._id) {
            this.newIssue.departments = issue.departments._id;
        }
        else {
            this.newIssue.departments = '';
        }
        if (this.issue.emailToSendAnalist) {
            if (this.issue.emailToSendAnalist[0]) {
                this.analyst.analyst1 = this.issue.emailToSendAnalist[0];
            }
            else {
                this.analyst.analyst1 = '';
            }
            if (this.issue.emailToSendAnalist[1]) {
                this.analyst.analyst2 = this.issue.emailToSendAnalist[1];
            }
            else {
                this.analyst.analyst2 = '';
            }
            if (this.issue.emailToSendAnalist[2]) {
                this.analyst.analyst3 = this.issue.emailToSendAnalist[2];
            }
            else {
                this.analyst.analyst3 = '';
            }
            if (this.issue.emailToSendAnalist[3]) {
                this.analyst.analyst4 = this.issue.emailToSendAnalist[3];
            }
            else {
                this.analyst.analyst4 = '';
            }
        }
        else {
            this.analyst.analyst1 = '';
            this.analyst.analyst2 = '';
            this.analyst.analyst3 = '';
            this.analyst.analyst4 = '';
        }
        if (this.issue.emailToSendCopy) {
            if (this.issue.emailToSendCopy[0]) {
                this.copiados.copiados1 = this.issue.emailToSendCopy[0];
            }
            else {
                this.copiados.copiados1 = '';
            }
            if (this.issue.emailToSendCopy[1]) {
                this.copiados.copiados2 = this.issue.emailToSendCopy[1];
            }
            else {
                this.copiados.copiados2 = '';
            }
            if (this.issue.emailToSendCopy[2]) {
                this.copiados.copiados3 = this.issue.emailToSendCopy[2];
            }
            else {
                this.copiados.copiados3 = '';
            }
            if (this.issue.emailToSendCopy[3]) {
                this.copiados.copiados4 = this.issue.emailToSendCopy[3];
            }
            else {
                this.copiados.copiados4 = '';
            }
            if (this.issue.emailToSendCopy[4]) {
                this.copiados.copiados5 = this.issue.emailToSendCopy[4];
            }
            else {
                this.copiados.copiados5 = '';
            }
            if (this.issue.emailToSendCopy[5]) {
                this.copiados.copiados6 = this.issue.emailToSendCopy[5];
            }
            else {
                this.copiados.copiados6 = '';
            }
            if (this.issue.emailToSendCopy[6]) {
                this.copiados.copiados7 = this.issue.emailToSendCopy[6];
            }
            else {
                this.copiados.copiados7 = '';
            }
            if (this.issue.emailToSendCopy[7]) {
                this.copiados.copiados8 = this.issue.emailToSendCopy[7];
            }
            else {
                this.copiados.copiados8 = '';
            }
        }
        else {
            this.copiados.copiados1 = '';
            this.copiados.copiados2 = '';
            this.copiados.copiados3 = '';
            this.copiados.copiados4 = '';
            this.copiados.copiados5 = '';
            this.copiados.copiados6 = '';
            this.copiados.copiados7 = '';
            this.copiados.copiados8 = '';
        }
        if (this.issue.format == 'dia') {
            this.newIssue.dia = true;
        }
        if (this.issue.format == 'hora') {
            this.newIssue.hora = true;
        }
        if (this.issue.zonesToAnalyst && this.issue.zonesToAnalyst.porEstado == true) {
            this.zonesToAnalyst = {
                general: false,
                porEstado: true
            };
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLAnalyst && this.issue.zonesNL.zonesNLAnalyst[0] && this.issue.zonesNL.zonesNLAnalyst[0] != '') {
                this.zonesNLAnalyst.analyst1 = this.issue.zonesNL.zonesNLAnalyst[0];
            }
            else {
                this.zonesNLAnalyst.analyst1 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLAnalyst && this.issue.zonesNL.zonesNLAnalyst[1] && this.issue.zonesNL.zonesNLAnalyst[1] != '') {
                this.zonesNLAnalyst.analyst2 = this.issue.zonesNL.zonesNLAnalyst[1];
            }
            else {
                this.zonesNLAnalyst.analyst2 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLAnalyst && this.issue.zonesNL.zonesNLAnalyst[2] && this.issue.zonesNL.zonesNLAnalyst[2] != '') {
                this.zonesNLAnalyst.analyst3 = this.issue.zonesNL.zonesNLAnalyst[2];
            }
            else {
                this.zonesNLAnalyst.analyst3 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLAnalyst && this.issue.zonesNL.zonesNLAnalyst[3] && this.issue.zonesNL.zonesNLAnalyst[3] != '') {
                this.zonesNLAnalyst.analyst4 = this.issue.zonesNL.zonesNLAnalyst[3];
            }
            else {
                this.zonesNLAnalyst.analyst4 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[0] && this.issue.zonesNL.zonesNLCopiados[0] != '') {
                this.zonesNLCopiados.copiados1 = this.issue.zonesNL.zonesNLCopiados[0];
            }
            else {
                this.zonesNLCopiados.copiados1 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[1] && this.issue.zonesNL.zonesNLCopiados[1] != '') {
                this.zonesNLCopiados.copiados2 = this.issue.zonesNL.zonesNLCopiados[1];
            }
            else {
                this.zonesNLCopiados.copiados2 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[2] && this.issue.zonesNL.zonesNLCopiados[2] != '') {
                this.zonesNLCopiados.copiados3 = this.issue.zonesNL.zonesNLCopiados[2];
            }
            else {
                this.zonesNLCopiados.copiados3 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[3] && this.issue.zonesNL.zonesNLCopiados[3] != '') {
                this.zonesNLCopiados.copiados4 = this.issue.zonesNL.zonesNLCopiados[3];
            }
            else {
                this.zonesNLCopiados.copiados4 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[4] && this.issue.zonesNL.zonesNLCopiados[4] != '') {
                this.zonesNLCopiados.copiados5 = this.issue.zonesNL.zonesNLCopiados[4];
            }
            else {
                this.zonesNLCopiados.copiados5 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[5] && this.issue.zonesNL.zonesNLCopiados[5] != '') {
                this.zonesNLCopiados.copiados6 = this.issue.zonesNL.zonesNLCopiados[5];
            }
            else {
                this.zonesNLCopiados.copiados6 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[6] && this.issue.zonesNL.zonesNLCopiados[6] != '') {
                this.zonesNLCopiados.copiados7 = this.issue.zonesNL.zonesNLCopiados[6];
            }
            else {
                this.zonesNLCopiados.copiados7 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[7] && this.issue.zonesNL.zonesNLCopiados[7] != '') {
                this.zonesNLCopiados.copiados8 = this.issue.zonesNL.zonesNLCopiados[7];
            }
            else {
                this.zonesNLCopiados.copiados8 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaAnalyst && this.issue.zonesCoahila.zonesCoahilaAnalyst[0] && this.issue.zonesCoahila.zonesCoahilaAnalyst[0] != '') {
                this.zonesCoahilaAnalyst.analyst1 = this.issue.zonesCoahila.zonesCoahilaAnalyst[0];
            }
            else {
                this.zonesCoahilaAnalyst.analyst1 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaAnalyst && this.issue.zonesCoahila.zonesCoahilaAnalyst[1] && this.issue.zonesCoahila.zonesCoahilaAnalyst[1] != '') {
                this.zonesCoahilaAnalyst.analyst2 = this.issue.zonesCoahila.zonesCoahilaAnalyst[1];
            }
            else {
                this.zonesCoahilaAnalyst.analyst2 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaAnalyst && this.issue.zonesCoahila.zonesCoahilaAnalyst[2] && this.issue.zonesCoahila.zonesCoahilaAnalyst[2] != '') {
                this.zonesCoahilaAnalyst.analyst3 = this.issue.zonesCoahila.zonesCoahilaAnalyst[2];
            }
            else {
                this.zonesCoahilaAnalyst.analyst3 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaAnalyst && this.issue.zonesCoahila.zonesCoahilaAnalyst[3] && this.issue.zonesCoahila.zonesCoahilaAnalyst[3] != '') {
                this.zonesCoahilaAnalyst.analyst4 = this.issue.zonesCoahila.zonesCoahilaAnalyst[3];
            }
            else {
                this.zonesCoahilaAnalyst.analyst4 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[0] && this.issue.zonesCoahila.zonesCoahilaCopiados[0] != '') {
                this.zonesCoahilaCopiados.copiados1 = this.issue.zonesCoahila.zonesCoahilaCopiados[0];
            }
            else {
                this.zonesCoahilaCopiados.copiados1 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[1] && this.issue.zonesCoahila.zonesCoahilaCopiados[1] != '') {
                this.zonesCoahilaCopiados.copiados2 = this.issue.zonesCoahila.zonesCoahilaCopiados[1];
            }
            else {
                this.zonesCoahilaCopiados.copiados2 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[2] && this.issue.zonesCoahila.zonesCoahilaCopiados[2] != '') {
                this.zonesCoahilaCopiados.copiados3 = this.issue.zonesCoahila.zonesCoahilaCopiados[2];
            }
            else {
                this.zonesCoahilaCopiados.copiados3 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[3] && this.issue.zonesCoahila.zonesCoahilaCopiados[3] != '') {
                this.zonesCoahilaCopiados.copiados4 = this.issue.zonesCoahila.zonesCoahilaCopiados[3];
            }
            else {
                this.zonesCoahilaCopiados.copiados4 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[4] && this.issue.zonesCoahila.zonesCoahilaCopiados[4] != '') {
                this.zonesCoahilaCopiados.copiados5 = this.issue.zonesCoahila.zonesCoahilaCopiados[4];
            }
            else {
                this.zonesCoahilaCopiados.copiados5 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[5] && this.issue.zonesCoahila.zonesCoahilaCopiados[5] != '') {
                this.zonesCoahilaCopiados.copiados6 = this.issue.zonesCoahila.zonesCoahilaCopiados[5];
            }
            else {
                this.zonesCoahilaCopiados.copiados6 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[6] && this.issue.zonesCoahila.zonesCoahilaCopiados[6] != '') {
                this.zonesCoahilaCopiados.copiados7 = this.issue.zonesCoahila.zonesCoahilaCopiados[6];
            }
            else {
                this.zonesCoahilaCopiados.copiados7 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[7] && this.issue.zonesCoahila.zonesCoahilaCopiados[7] != '') {
                this.zonesCoahilaCopiados.copiados8 = this.issue.zonesCoahila.zonesCoahilaCopiados[7];
            }
            else {
                this.zonesCoahilaCopiados.copiados8 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroAnalyst && this.issue.zonesQueretaro.zonesQueretaroAnalyst[0] && this.issue.zonesQueretaro.zonesQueretaroAnalyst[0] != '') {
                this.zonesQueretaroAnalyst.analyst1 = this.issue.zonesQueretaro.zonesQueretaroAnalyst[0];
            }
            else {
                this.zonesQueretaroAnalyst.analyst1 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroAnalyst && this.issue.zonesQueretaro.zonesQueretaroAnalyst[1] && this.issue.zonesQueretaro.zonesQueretaroAnalyst[1] != '') {
                this.zonesQueretaroAnalyst.analyst2 = this.issue.zonesQueretaro.zonesQueretaroAnalyst[1];
            }
            else {
                this.zonesQueretaroAnalyst.analyst2 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroAnalyst && this.issue.zonesQueretaro.zonesQueretaroAnalyst[2] && this.issue.zonesQueretaro.zonesQueretaroAnalyst[2] != '') {
                this.zonesQueretaroAnalyst.analyst3 = this.issue.zonesQueretaro.zonesQueretaroAnalyst[2];
            }
            else {
                this.zonesQueretaroAnalyst.analyst3 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroAnalyst && this.issue.zonesQueretaro.zonesQueretaroAnalyst[3] && this.issue.zonesQueretaro.zonesQueretaroAnalyst[3] != '') {
                this.zonesQueretaroAnalyst.analyst4 = this.issue.zonesQueretaro.zonesQueretaroAnalyst[3];
            }
            else {
                this.zonesQueretaroAnalyst.analyst4 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[0] && this.issue.zonesQueretaro.zonesQueretaroCopiados[0] != '') {
                this.zonesQueretaroCopiados.copiados1 = this.issue.zonesQueretaro.zonesQueretaroCopiados[0];
            }
            else {
                this.zonesQueretaroCopiados.copiados1 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[1] && this.issue.zonesQueretaro.zonesQueretaroCopiados[1] != '') {
                this.zonesQueretaroCopiados.copiados2 = this.issue.zonesQueretaro.zonesQueretaroCopiados[1];
            }
            else {
                this.zonesQueretaroCopiados.copiados2 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[2] && this.issue.zonesQueretaro.zonesQueretaroCopiados[2] != '') {
                this.zonesQueretaroCopiados.copiados3 = this.issue.zonesQueretaro.zonesQueretaroCopiados[2];
            }
            else {
                this.zonesQueretaroCopiados.copiados3 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[3] && this.issue.zonesQueretaro.zonesQueretaroCopiados[3] != '') {
                this.zonesQueretaroCopiados.copiados4 = this.issue.zonesQueretaro.zonesQueretaroCopiados[3];
            }
            else {
                this.zonesQueretaroCopiados.copiados4 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[4] && this.issue.zonesQueretaro.zonesQueretaroCopiados[4] != '') {
                this.zonesQueretaroCopiados.copiados5 = this.issue.zonesQueretaro.zonesQueretaroCopiados[4];
            }
            else {
                this.zonesQueretaroCopiados.copiados5 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[5] && this.issue.zonesQueretaro.zonesQueretaroCopiados[5] != '') {
                this.zonesQueretaroCopiados.copiados6 = this.issue.zonesQueretaro.zonesQueretaroCopiados[5];
            }
            else {
                this.zonesQueretaroCopiados.copiados6 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[6] && this.issue.zonesQueretaro.zonesQueretaroCopiados[6] != '') {
                this.zonesQueretaroCopiados.copiados7 = this.issue.zonesQueretaro.zonesQueretaroCopiados[6];
            }
            else {
                this.zonesQueretaroCopiados.copiados7 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[7] && this.issue.zonesQueretaro.zonesQueretaroCopiados[7] != '') {
                this.zonesQueretaroCopiados.copiados8 = this.issue.zonesQueretaro.zonesQueretaroCopiados[7];
            }
            else {
                this.zonesQueretaroCopiados.copiados8 = '';
            }
        }
        else {
            this.zonesToAnalyst = {
                general: true,
                porEstado: false
            };
            this.zonesNLAnalyst = {
                analyst1: '',
                analyst2: '',
                analyst3: '',
                analyst4: ''
            },
                this.zonesNLCopiados = {
                    copiados1: '',
                    copiados2: '',
                    copiados3: '',
                    copiados4: '',
                    copiados5: '',
                    copiados6: '',
                    copiados7: '',
                    copiados8: '',
                },
                this.zonesCoahilaAnalyst = {
                    analyst1: '',
                    analyst2: '',
                    analyst3: '',
                    analyst4: ''
                },
                this.zonesCoahilaCopiados = {
                    copiados1: '',
                    copiados2: '',
                    copiados3: '',
                    copiados4: '',
                    copiados5: '',
                    copiados6: '',
                    copiados7: '',
                    copiados8: '',
                },
                this.zonesQueretaroAnalyst = {
                    analyst1: '',
                    analyst2: '',
                    analyst3: '',
                    analyst4: ''
                },
                this.zonesQueretaroCopiados = {
                    copiados1: '',
                    copiados2: '',
                    copiados3: '',
                    copiados4: '',
                    copiados5: '',
                    copiados6: '',
                    copiados7: '',
                    copiados8: '',
                };
        }
    };
    IssuesEditComponent.prototype.boxHora = function () {
        this.newIssue.hora = true;
        this.newIssue.dia = false;
    };
    IssuesEditComponent.prototype.boxDia = function () {
        this.newIssue.hora = false;
        this.newIssue.dia = true;
    };
    IssuesEditComponent.prototype.uatdarCambio = function (editIssue) {
        var _this = this;
        editIssue.campo = this.campo;
        editIssue.zonesToAnalyst = this.zonesToAnalyst;
        if (editIssue.departments && editIssue.service && editIssue.subcategory && editIssue.sla && editIssue.slaCallCenter != null && (editIssue.zonesToAnalyst.general == true || editIssue.zonesToAnalyst.porEstado == true)) {
            if (this.zonesToAnalyst.porEstado == false || (this.zonesToAnalyst.porEstado == true && (this.zonesNLAnalyst.analyst1 != '' && this.zonesCoahilaAnalyst.analyst1 != '' && this.zonesQueretaroAnalyst.analyst1 != ''))) {
                this.load = true;
                if (editIssue.dia == true) {
                    editIssue.format = 'dia';
                }
                else if (editIssue.hora == true) {
                    editIssue.format = 'hora';
                }
                if (this.analyst.analyst1 != '') {
                    editIssue.emailToSendAnalist[0] = this.analyst.analyst1;
                }
                else {
                    editIssue.emailToSendAnalist[0] = null;
                    editIssue.emailToSendAnalist[1] = null;
                    editIssue.emailToSendAnalist[2] = null;
                    editIssue.emailToSendAnalist[3] = null;
                    this.analyst.analyst2 = '';
                    this.analyst.analyst3 = '';
                    this.analyst.analyst4 = '';
                }
                if (this.analyst.analyst2 != '') {
                    editIssue.emailToSendAnalist[1] = this.analyst.analyst2;
                }
                else {
                    editIssue.emailToSendAnalist[1] = null;
                    editIssue.emailToSendAnalist[2] = null;
                    editIssue.emailToSendAnalist[3] = null;
                    this.analyst.analyst3 = '';
                    this.analyst.analyst4 = '';
                }
                if (this.analyst.analyst3 != '') {
                    editIssue.emailToSendAnalist[2] = this.analyst.analyst3;
                }
                else {
                    editIssue.emailToSendAnalist[2] = null;
                    editIssue.emailToSendAnalist[3] = null;
                    this.analyst.analyst4 = '';
                }
                if (this.analyst.analyst4 != '') {
                    editIssue.emailToSendAnalist[3] = this.analyst.analyst4;
                }
                else {
                    editIssue.emailToSendAnalist[3] = null;
                }
                if (this.copiados.copiados1 != '') {
                    editIssue.emailToSendCopy[0] = this.copiados.copiados1;
                }
                else {
                    editIssue.emailToSendCopy[0] = null;
                    this.copiados.copiados2 = null;
                    this.copiados.copiados3 = null;
                    this.copiados.copiados4 = null;
                    this.copiados.copiados5 = null;
                    this.copiados.copiados6 = null;
                    this.copiados.copiados7 = null;
                    this.copiados.copiados8 = null;
                }
                if (this.copiados.copiados2 != '') {
                    editIssue.emailToSendCopy[1] = this.copiados.copiados2;
                }
                else {
                    editIssue.emailToSendCopy[1] = null;
                    this.copiados.copiados3 = null;
                    this.copiados.copiados4 = null;
                    this.copiados.copiados5 = null;
                    this.copiados.copiados6 = null;
                    this.copiados.copiados7 = null;
                    this.copiados.copiados8 = null;
                }
                if (this.copiados.copiados3 != '') {
                    editIssue.emailToSendCopy[2] = this.copiados.copiados3;
                }
                else {
                    editIssue.emailToSendCopy[2] = null;
                    this.copiados.copiados4 = null;
                    this.copiados.copiados5 = null;
                    this.copiados.copiados6 = null;
                    this.copiados.copiados7 = null;
                    this.copiados.copiados8 = null;
                }
                if (this.copiados.copiados4 != '') {
                    editIssue.emailToSendCopy[3] = this.copiados.copiados4;
                }
                else {
                    editIssue.emailToSendCopy[3] = null;
                    this.copiados.copiados5 = null;
                    this.copiados.copiados6 = null;
                    this.copiados.copiados7 = null;
                    this.copiados.copiados8 = null;
                }
                if (this.copiados.copiados5 != '') {
                    editIssue.emailToSendCopy[4] = this.copiados.copiados5;
                }
                else {
                    editIssue.emailToSendCopy[4] = null;
                    this.copiados.copiados6 = null;
                    this.copiados.copiados7 = null;
                    this.copiados.copiados8 = null;
                }
                if (this.copiados.copiados6 != '') {
                    editIssue.emailToSendCopy[5] = this.copiados.copiados6;
                }
                else {
                    editIssue.emailToSendCopy[5] = null;
                    this.copiados.copiados7 = null;
                    this.copiados.copiados8 = null;
                }
                if (this.copiados.copiados7 != '') {
                    editIssue.emailToSendCopy[6] = this.copiados.copiados7;
                }
                else {
                    editIssue.emailToSendCopy[6] = null;
                    this.copiados.copiados8 = null;
                }
                if (this.copiados.copiados8 != '') {
                    editIssue.emailToSendCopy[7] = this.copiados.copiados8;
                }
                else {
                    editIssue.emailToSendCopy[7] = null;
                }
                if (editIssue.active == "false") {
                    editIssue.active = false;
                }
                if (editIssue.active == "true") {
                    editIssue.active = true;
                }
                if (editIssue.zonesToAnalyst.porEstado == true) {
                    editIssue.zonesNL = {
                        zonesNLAnalyst: [this.zonesNLAnalyst.analyst1, this.zonesNLAnalyst.analyst2, this.zonesNLAnalyst.analyst3, this.zonesNLAnalyst.analyst4],
                        zonesNLCopiados: [this.zonesNLCopiados.copiados1, this.zonesNLCopiados.copiados2, this.zonesNLCopiados.copiados3, this.zonesNLCopiados.copiados4, this.zonesNLCopiados.copiados5, this.zonesNLCopiados.copiados6, this.zonesNLCopiados.copiados7, this.zonesNLCopiados.copiados8]
                    };
                    editIssue.zonesCoahila = {
                        zonesCoahilaAnalyst: [this.zonesCoahilaAnalyst.analyst1, this.zonesCoahilaAnalyst.analyst2, this.zonesCoahilaAnalyst.analyst3, this.zonesCoahilaAnalyst.analyst4],
                        zonesCoahilaCopiados: [this.zonesCoahilaCopiados.copiados1, this.zonesCoahilaCopiados.copiados2, this.zonesCoahilaCopiados.copiados3, this.zonesCoahilaCopiados.copiados4, this.zonesCoahilaCopiados.copiados5, this.zonesCoahilaCopiados.copiados6, this.zonesCoahilaCopiados.copiados7, this.zonesCoahilaCopiados.copiados8]
                    };
                    editIssue.zonesQueretaro = {
                        zonesQueretaroAnalyst: [this.zonesQueretaroAnalyst.analyst1, this.zonesQueretaroAnalyst.analyst2, this.zonesQueretaroAnalyst.analyst3, this.zonesQueretaroAnalyst.analyst4],
                        zonesQueretaroCopiados: [this.zonesQueretaroCopiados.copiados1, this.zonesQueretaroCopiados.copiados2, this.zonesQueretaroCopiados.copiados3, this.zonesQueretaroCopiados.copiados4, this.zonesQueretaroCopiados.copiados5, this.zonesQueretaroCopiados.copiados6, this.zonesQueretaroCopiados.copiados7, this.zonesQueretaroCopiados.copiados8]
                    };
                }
                else {
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLAnalyst.analyst1 != '') {
                    editIssue.zonesNL.zonesNLAnalyst[0] = this.zonesNLAnalyst.analyst1;
                }
                else {
                    editIssue.zonesNL.zonesNLAnalyst[0] = null;
                    editIssue.zonesNL.zonesNLAnalyst[1] = null;
                    editIssue.zonesNL.zonesNLAnalyst[2] = null;
                    editIssue.zonesNL.zonesNLAnalyst[3] = null;
                    this.zonesNLAnalyst.analyst1 = '';
                    this.zonesNLAnalyst.analyst2 = '';
                    this.zonesNLAnalyst.analyst3 = '';
                    this.zonesNLAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLAnalyst.analyst2 != '') {
                    editIssue.zonesNL.zonesNLAnalyst[1] = this.zonesNLAnalyst.analyst2;
                }
                else {
                    editIssue.zonesNL.zonesNLAnalyst[1] = null;
                    editIssue.zonesNL.zonesNLAnalyst[2] = null;
                    editIssue.zonesNL.zonesNLAnalyst[3] = null;
                    this.zonesNLAnalyst.analyst2 = '';
                    this.zonesNLAnalyst.analyst3 = '';
                    this.zonesNLAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLAnalyst.analyst3 != '') {
                    editIssue.zonesNL.zonesNLAnalyst[2] = this.zonesNLAnalyst.analyst3;
                }
                else {
                    editIssue.zonesNL.zonesNLAnalyst[2] = null;
                    editIssue.zonesNL.zonesNLAnalyst[3] = null;
                    this.zonesNLAnalyst.analyst3 = '';
                    this.zonesNLAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLAnalyst.analyst4 != '') {
                    editIssue.zonesNL.zonesNLAnalyst[3] = this.zonesNLAnalyst.analyst4;
                }
                else {
                    editIssue.zonesNL.zonesNLAnalyst[3] = null;
                    this.zonesNLAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados1 != '') {
                    editIssue.zonesNL.zonesNLCopiados[0] = this.zonesNLCopiados.copiados1;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[0] = null;
                    this.zonesNLCopiados.copiados1 = '';
                    this.zonesNLCopiados.copiados2 = '';
                    this.zonesNLCopiados.copiados3 = '';
                    this.zonesNLCopiados.copiados4 = '';
                    this.zonesNLCopiados.copiados5 = '';
                    this.zonesNLCopiados.copiados6 = '';
                    this.zonesNLCopiados.copiados7 = '';
                    this.zonesNLCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados2 != '') {
                    editIssue.zonesNL.zonesNLCopiados[1] = this.zonesNLCopiados.copiados2;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[1] = null;
                    this.zonesNLCopiados.copiados2 = '';
                    this.zonesNLCopiados.copiados3 = '';
                    this.zonesNLCopiados.copiados4 = '';
                    this.zonesNLCopiados.copiados5 = '';
                    this.zonesNLCopiados.copiados6 = '';
                    this.zonesNLCopiados.copiados7 = '';
                    this.zonesNLCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados3 != '') {
                    editIssue.zonesNL.zonesNLCopiados[2] = this.zonesNLCopiados.copiados3;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[2] = null;
                    this.zonesNLCopiados.copiados3 = '';
                    this.zonesNLCopiados.copiados4 = '';
                    this.zonesNLCopiados.copiados5 = '';
                    this.zonesNLCopiados.copiados6 = '';
                    this.zonesNLCopiados.copiados7 = '';
                    this.zonesNLCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados4 != '') {
                    editIssue.zonesNL.zonesNLCopiados[3] = this.zonesNLCopiados.copiados4;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[3] = null;
                    this.zonesNLCopiados.copiados4 = '';
                    this.zonesNLCopiados.copiados5 = '';
                    this.zonesNLCopiados.copiados6 = '';
                    this.zonesNLCopiados.copiados7 = '';
                    this.zonesNLCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados5 != '') {
                    editIssue.zonesNL.zonesNLCopiados[4] = this.zonesNLCopiados.copiados5;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[4] = null;
                    this.zonesNLCopiados.copiados5 = '';
                    this.zonesNLCopiados.copiados6 = '';
                    this.zonesNLCopiados.copiados7 = '';
                    this.zonesNLCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados6 != '') {
                    editIssue.zonesNL.zonesNLCopiados[5] = this.zonesNLCopiados.copiados6;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[5] = null;
                    this.zonesNLCopiados.copiados6 = '';
                    this.zonesNLCopiados.copiados7 = '';
                    this.zonesNLCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados7 != '') {
                    editIssue.zonesNL.zonesNLCopiados[6] = this.zonesNLCopiados.copiados7;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[6] = null;
                    this.zonesNLCopiados.copiados7 = '';
                    this.zonesNLCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados8 != '') {
                    editIssue.zonesNL.zonesNLCopiados[7] = this.zonesNLCopiados.copiados8;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[7] = null;
                    this.zonesNLCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaAnalyst.analyst1 != '') {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[0] = this.zonesCoahilaAnalyst.analyst1;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[0] = null;
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[1] = null;
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[2] = null;
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[3] = null;
                    this.zonesCoahilaAnalyst.analyst1 = '';
                    this.zonesCoahilaAnalyst.analyst2 = '';
                    this.zonesCoahilaAnalyst.analyst3 = '';
                    this.zonesCoahilaAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaAnalyst.analyst2 != '') {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[1] = this.zonesCoahilaAnalyst.analyst2;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[1] = null;
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[2] = null;
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[3] = null;
                    this.zonesCoahilaAnalyst.analyst2 = '';
                    this.zonesCoahilaAnalyst.analyst3 = '';
                    this.zonesCoahilaAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaAnalyst.analyst3 != '') {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[2] = this.zonesCoahilaAnalyst.analyst3;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[2] = null;
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[3] = null;
                    this.zonesCoahilaAnalyst.analyst3 = '';
                    this.zonesCoahilaAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaAnalyst.analyst4 != '') {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[3] = this.zonesCoahilaAnalyst.analyst4;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[3] = null;
                    this.zonesCoahilaAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados1 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[0] = this.zonesCoahilaCopiados.copiados1;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[0] = null;
                    this.zonesCoahilaCopiados.copiados1 = '';
                    this.zonesCoahilaCopiados.copiados2 = '';
                    this.zonesCoahilaCopiados.copiados3 = '';
                    this.zonesCoahilaCopiados.copiados4 = '';
                    this.zonesCoahilaCopiados.copiados5 = '';
                    this.zonesCoahilaCopiados.copiados6 = '';
                    this.zonesCoahilaCopiados.copiados7 = '';
                    this.zonesCoahilaCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados2 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[1] = this.zonesCoahilaCopiados.copiados2;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[1] = null;
                    this.zonesCoahilaCopiados.copiados2 = '';
                    this.zonesCoahilaCopiados.copiados3 = '';
                    this.zonesCoahilaCopiados.copiados4 = '';
                    this.zonesCoahilaCopiados.copiados5 = '';
                    this.zonesCoahilaCopiados.copiados6 = '';
                    this.zonesCoahilaCopiados.copiados7 = '';
                    this.zonesCoahilaCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados3 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[2] = this.zonesCoahilaCopiados.copiados3;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[2] = null;
                    this.zonesCoahilaCopiados.copiados3 = '';
                    this.zonesCoahilaCopiados.copiados4 = '';
                    this.zonesCoahilaCopiados.copiados5 = '';
                    this.zonesCoahilaCopiados.copiados6 = '';
                    this.zonesCoahilaCopiados.copiados7 = '';
                    this.zonesCoahilaCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados4 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[3] = this.zonesCoahilaCopiados.copiados4;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[3] = null;
                    this.zonesCoahilaCopiados.copiados4 = '';
                    this.zonesCoahilaCopiados.copiados5 = '';
                    this.zonesCoahilaCopiados.copiados6 = '';
                    this.zonesCoahilaCopiados.copiados7 = '';
                    this.zonesCoahilaCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados5 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[4] = this.zonesCoahilaCopiados.copiados5;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[4] = null;
                    this.zonesCoahilaCopiados.copiados5 = '';
                    this.zonesCoahilaCopiados.copiados6 = '';
                    this.zonesCoahilaCopiados.copiados7 = '';
                    this.zonesCoahilaCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados6 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[5] = this.zonesCoahilaCopiados.copiados6;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[5] = null;
                    this.zonesCoahilaCopiados.copiados6 = '';
                    this.zonesCoahilaCopiados.copiados7 = '';
                    this.zonesCoahilaCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados7 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[6] = this.zonesCoahilaCopiados.copiados7;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[6] = null;
                    this.zonesCoahilaCopiados.copiados7 = '';
                    this.zonesCoahilaCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados8 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[7] = this.zonesCoahilaCopiados.copiados8;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                    this.zonesCoahilaCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroAnalyst.analyst1 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[0] = this.zonesQueretaroAnalyst.analyst1;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[0] = null;
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[1] = null;
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[2] = null;
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[3] = null;
                    this.zonesQueretaroAnalyst.analyst1 = '';
                    this.zonesQueretaroAnalyst.analyst2 = '';
                    this.zonesQueretaroAnalyst.analyst3 = '';
                    this.zonesQueretaroAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroAnalyst.analyst2 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[1] = this.zonesQueretaroAnalyst.analyst2;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[1] = null;
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[2] = null;
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[3] = null;
                    this.zonesQueretaroAnalyst.analyst2 = '';
                    this.zonesQueretaroAnalyst.analyst3 = '';
                    this.zonesQueretaroAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroAnalyst.analyst3 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[2] = this.zonesQueretaroAnalyst.analyst3;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[2] = null;
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[3] = null;
                    this.zonesQueretaroAnalyst.analyst3 = '';
                    this.zonesQueretaroAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroAnalyst.analyst4 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[3] = this.zonesQueretaroAnalyst.analyst4;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[3] = null;
                    this.zonesQueretaroAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados1 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[0] = this.zonesQueretaroCopiados.copiados1;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[0] = null;
                    this.zonesQueretaroCopiados.copiados1 = '';
                    this.zonesQueretaroCopiados.copiados2 = '';
                    this.zonesQueretaroCopiados.copiados3 = '';
                    this.zonesQueretaroCopiados.copiados4 = '';
                    this.zonesQueretaroCopiados.copiados5 = '';
                    this.zonesQueretaroCopiados.copiados6 = '';
                    this.zonesQueretaroCopiados.copiados7 = '';
                    this.zonesQueretaroCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados2 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[1] = this.zonesQueretaroCopiados.copiados2;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[1] = null;
                    this.zonesQueretaroCopiados.copiados2 = '';
                    this.zonesQueretaroCopiados.copiados3 = '';
                    this.zonesQueretaroCopiados.copiados4 = '';
                    this.zonesQueretaroCopiados.copiados5 = '';
                    this.zonesQueretaroCopiados.copiados6 = '';
                    this.zonesQueretaroCopiados.copiados7 = '';
                    this.zonesQueretaroCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados3 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[2] = this.zonesQueretaroCopiados.copiados3;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[2] = null;
                    this.zonesQueretaroCopiados.copiados3 = '';
                    this.zonesQueretaroCopiados.copiados4 = '';
                    this.zonesQueretaroCopiados.copiados5 = '';
                    this.zonesQueretaroCopiados.copiados6 = '';
                    this.zonesQueretaroCopiados.copiados7 = '';
                    this.zonesQueretaroCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados4 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[3] = this.zonesQueretaroCopiados.copiados4;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[3] = null;
                    this.zonesQueretaroCopiados.copiados4 = '';
                    this.zonesQueretaroCopiados.copiados5 = '';
                    this.zonesQueretaroCopiados.copiados6 = '';
                    this.zonesQueretaroCopiados.copiados7 = '';
                    this.zonesQueretaroCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados5 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[4] = this.zonesQueretaroCopiados.copiados5;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[4] = null;
                    this.zonesQueretaroCopiados.copiados5 = '';
                    this.zonesQueretaroCopiados.copiados6 = '';
                    this.zonesQueretaroCopiados.copiados7 = '';
                    this.zonesQueretaroCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados6 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[5] = this.zonesQueretaroCopiados.copiados6;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[5] = null;
                    this.zonesQueretaroCopiados.copiados6 = '';
                    this.zonesQueretaroCopiados.copiados7 = '';
                    this.zonesQueretaroCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados7 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[6] = this.zonesQueretaroCopiados.copiados7;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[6] = null;
                    this.zonesQueretaroCopiados.copiados7 = '';
                    this.zonesQueretaroCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados8 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[7] = this.zonesQueretaroCopiados.copiados8;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                    this.zonesQueretaroCopiados.copiados8 = '';
                }
                if (editIssue.critico && editIssue.critico == true) {
                }
                else {
                    editIssue.critico = false;
                }
                this._requestNewService.editService(editIssue).subscribe(function (response) {
                    _this.load = false;
                    swal("¡Éxito!", "Servicio editado", "success")
                        .then(function (res) {
                        window.location.reload();
                    });
                }, function (error) {
                    _this.load = false;
                    var errorMessage = error;
                    if (errorMessage != null) {
                        console.log(errorMessage);
                        swal("Error!", "errorMessage", "error");
                    }
                });
            }
            else {
                swal("Error!", "Asigné minimo un analista por estado", "error");
            }
        }
        else {
            swal("Error!", "Completa la información: Servicio, Subcategoría, SLA y analistas", "error");
        }
    };
    IssuesEditComponent.prototype.searchCategory = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                element.category2 = element.category.toUpperCase();
                if (element.category2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.allIsues = newData;
            this.issueTabla = newData;
        }
        else {
            this.allIsues = this.oldData;
            this.issueTabla = this.oldData;
        }
    };
    IssuesEditComponent.prototype.searchService = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.allIsues = newData;
            this.issueTabla = newData;
        }
        else {
            this.allIsues = this.oldData;
            this.issueTabla = this.oldData;
        }
    };
    IssuesEditComponent.prototype.searchSubcategory = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                element.subcategory2 = element.subcategory.toUpperCase();
                if (element.subcategory2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.allIsues = newData;
            this.issueTabla = newData;
        }
        else {
            this.allIsues = this.oldData;
            this.issueTabla = this.oldData;
        }
    };
    IssuesEditComponent.prototype.searchSla = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                element.sla2 = element.sla.toString();
                if (element.sla2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.allIsues = newData;
            this.issueTabla = newData;
        }
        else {
            this.allIsues = this.oldData;
            this.issueTabla = this.oldData;
        }
    };
    IssuesEditComponent.prototype.searchSlaCallCenter = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                console.log(element);
                if (element.slaCallCenter) {
                    element.slaCallCenter2 = element.slaCallCenter.toString();
                    if (element.slaCallCenter2.indexOf(go) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.allIsues = newData;
            this.issueTabla = newData;
        }
        else {
            this.allIsues = this.oldData;
            this.issueTabla = this.oldData;
        }
    };
    IssuesEditComponent.prototype.searchActive = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                if (element.active == true) {
                    var pasado = "Si";
                }
                else {
                    var pasado = "No";
                }
                var pasado2 = pasado.toUpperCase();
                if (pasado2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.allIsues = newData;
            this.issueTabla = newData;
        }
        else {
            this.allIsues = this.oldData;
            this.issueTabla = this.oldData;
        }
    };
    IssuesEditComponent.prototype.pressZonesToAnalystGeneral = function () {
        this.zonesToAnalyst = {
            general: true,
            porEstado: false
        };
    };
    IssuesEditComponent.prototype.pressZonesToAnalystPorEstado = function () {
        this.zonesToAnalyst = {
            general: false,
            porEstado: true
        };
    };
    IssuesEditComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'issuesEdit',
            template: __webpack_require__(1055),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */], __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__["a" /* RequestNewService */]],
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__["a" /* RequestNewService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__["a" /* RequestNewService */]) === 'function' && _b) || Object])
    ], IssuesEditComponent);
    return IssuesEditComponent;
    var _a, _b;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/issuesEdit.component.js.map

/***/ }),

/***/ 430:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__ = __webpack_require__(134);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return IssuesNewComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var swal = __webpack_require__(20);
var IssuesNewComponent = (function () {
    function IssuesNewComponent(_userService, _requestNewService) {
        this._userService = _userService;
        this._requestNewService = _requestNewService;
        this.sortBy = "category";
        this.search = [];
        this.load = false;
        this.title = 'Agregar Servicios';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.selectService = '';
        this.analyst = {
            analyst1: '',
            analyst2: '',
            analyst3: '',
            analyst4: ''
        },
            this.copiados = {
                copiados1: '',
                copiados2: '',
                copiados3: '',
                copiados4: '',
                copiados5: '',
                copiados6: '',
                copiados7: '',
                copiados8: '',
            },
            this.zonesNLAnalyst = {
                analyst1: '',
                analyst2: '',
                analyst3: '',
                analyst4: ''
            },
            this.zonesNLCopiados = {
                copiados1: '',
                copiados2: '',
                copiados3: '',
                copiados4: '',
                copiados5: '',
                copiados6: '',
                copiados7: '',
                copiados8: '',
            },
            this.zonesCoahilaAnalyst = {
                analyst1: '',
                analyst2: '',
                analyst3: '',
                analyst4: ''
            },
            this.zonesCoahilaCopiados = {
                copiados1: '',
                copiados2: '',
                copiados3: '',
                copiados4: '',
                copiados5: '',
                copiados6: '',
                copiados7: '',
                copiados8: '',
            },
            this.zonesQueretaroAnalyst = {
                analyst1: '',
                analyst2: '',
                analyst3: '',
                analyst4: ''
            },
            this.zonesQueretaroCopiados = {
                copiados1: '',
                copiados2: '',
                copiados3: '',
                copiados4: '',
                copiados5: '',
                copiados6: '',
                copiados7: '',
                copiados8: '',
            };
        this.newIssue = {
            departments: '',
            category: '',
            service: '',
            descService: '',
            subcategory: '',
            descSubcategory: '',
            sla: '',
            slaCallCenter: '',
            descSla: '',
            emailToSendAnalist: [],
            emailToSendCopy: [],
            hora: false,
            dia: false,
        };
        this.campo = {
            foto: false,
            numReport: false,
            nombreTimMember: false,
            numNomina: false,
            cantBolsasComprobantes: false,
            numOrden: false,
            producto: false,
            lote: false,
            cantidad: false,
            numSerie: false,
            marca: false,
            menuboards: false,
            dt: false,
            kds: false,
            email: false,
            pos: false,
            medidas: false,
            video: false,
        };
        this.newIssue.hora = true;
        this.newIssue.dia = false;
        this.zonesToAnalyst = {
            general: false,
            porEstado: false
        };
    }
    IssuesNewComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._userService.getDepartments(this.identity).subscribe(function (response) {
            _this.departments = response;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
        this._userService.getAdminUsers().subscribe(function (usersAdmin) {
            _this.usersAdmins = usersAdmin;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
        this._requestNewService.getAllIssuesNormal(this.identity).subscribe(function (response) {
            _this.allIsues = response;
            _this.oldData = response;
            response.forEach(function (element, indice) {
                if (element.active == true) {
                    response[indice].activo = "Si";
                }
                else {
                    response[indice].activo = "No";
                }
            });
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
    };
    IssuesNewComponent.prototype.searchServices = function (service) {
        var _this = this;
        var services = { service: service };
        this._requestNewService.searchService(services).subscribe(function (response) {
            _this.service = response;
            if (response.length < 1) {
                _this.newIssue.descService = '';
                _this.newIssue.service = '';
                _this.selectService = '';
            }
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                swal("Error!", "errorMessage", "error");
            }
        });
    };
    IssuesNewComponent.prototype.boxHora = function () {
        this.newIssue.hora = true;
        this.newIssue.dia = false;
    };
    IssuesNewComponent.prototype.boxDia = function () {
        this.newIssue.hora = false;
        this.newIssue.dia = true;
    };
    IssuesNewComponent.prototype.selectServic = function (selectService) {
        var _this = this;
        this.service.forEach(function (element) {
            if (element.service) {
                if (element.service == selectService) {
                    _this.newIssue.service = element.service;
                    _this.newIssue.descService = element.descService;
                }
            }
        });
    };
    IssuesNewComponent.prototype.addNew = function (newIssue) {
        var _this = this;
        newIssue.campo = this.campo;
        newIssue.service = newIssue.service.trim();
        newIssue.zonesToAnalyst = this.zonesToAnalyst;
        this.newIssue.zonesNL = {
            zonesNLAnalyst: [],
            zonesNLCopiados: [],
        };
        this.newIssue.zonesCoahila = {
            zonesCoahilaAnalyst: [],
            zonesCoahilaCopiados: [],
        };
        this.newIssue.zonesQueretaro = {
            zonesQueretaroAnalyst: [],
            zonesQueretaroCopiados: [],
        };
        if (newIssue.departments && newIssue.service && newIssue.subcategory && newIssue.sla && newIssue.slaCallCenter && (this.zonesToAnalyst.general == true || this.zonesToAnalyst.porEstado == true)) {
            if (this.zonesToAnalyst.general != true || (this.zonesToAnalyst.general == true && this.analyst.analyst1 != "")) {
                if (this.zonesToAnalyst.porEstado != true || (this.zonesNLAnalyst.analyst1 != '' && this.zonesCoahilaAnalyst.analyst1 != '' && this.zonesQueretaroAnalyst.analyst1 != '')) {
                    this.load = true;
                    if (this.newIssue.dia == true) {
                        this.newIssue.format = 'dia';
                    }
                    else if (this.newIssue.hora == true) {
                        this.newIssue.format = 'hora';
                    }
                    this.departments.forEach(function (element) {
                        if (element._id == newIssue.departments) {
                            newIssue.category = element.name;
                        }
                    });
                    if (this.analyst.analyst1 != '') {
                        this.newIssue.emailToSendAnalist[0] = this.analyst.analyst1;
                    }
                    else {
                        this.newIssue.emailToSendAnalist[0] = null;
                        this.newIssue.emailToSendAnalist[1] = null;
                        this.newIssue.emailToSendAnalist[2] = null;
                        this.newIssue.emailToSendAnalist[3] = null;
                        this.analyst.analyst2 = '';
                        this.analyst.analyst3 = '';
                        this.analyst.analyst4 = '';
                    }
                    if (this.analyst.analyst2 != '') {
                        this.newIssue.emailToSendAnalist[1] = this.analyst.analyst2;
                    }
                    else {
                        this.newIssue.emailToSendAnalist[1] = null;
                        this.newIssue.emailToSendAnalist[2] = null;
                        this.newIssue.emailToSendAnalist[3] = null;
                        this.analyst.analyst3 = '';
                        this.analyst.analyst4 = '';
                    }
                    if (this.analyst.analyst3 != '') {
                        this.newIssue.emailToSendAnalist[2] = this.analyst.analyst3;
                    }
                    else {
                        this.newIssue.emailToSendAnalist[2] = null;
                        this.newIssue.emailToSendAnalist[3] = null;
                        this.analyst.analyst4 = '';
                    }
                    if (this.analyst.analyst4 != '') {
                        this.newIssue.emailToSendAnalist[3] = this.analyst.analyst4;
                    }
                    else {
                        this.newIssue.emailToSendAnalist[3] = null;
                    }
                    if (this.copiados.copiados1 != '') {
                        this.newIssue.emailToSendCopy[0] = this.copiados.copiados1;
                    }
                    else {
                        this.copiados.copiados1 = null;
                        this.copiados.copiados2 = null;
                        this.copiados.copiados3 = null;
                        this.copiados.copiados4 = null;
                        this.copiados.copiados5 = null;
                        this.copiados.copiados6 = null;
                        this.copiados.copiados7 = null;
                        this.copiados.copiados8 = null;
                    }
                    if (this.copiados.copiados2 != '') {
                        this.newIssue.emailToSendCopy[1] = this.copiados.copiados2;
                    }
                    else {
                        this.copiados.copiados2 = null;
                        this.copiados.copiados3 = null;
                        this.copiados.copiados4 = null;
                        this.copiados.copiados5 = null;
                        this.copiados.copiados6 = null;
                        this.copiados.copiados7 = null;
                        this.copiados.copiados8 = null;
                    }
                    if (this.copiados.copiados3 != '') {
                        this.newIssue.emailToSendCopy[2] = this.copiados.copiados3;
                    }
                    else {
                        this.copiados.copiados3 = null;
                        this.copiados.copiados4 = null;
                        this.copiados.copiados5 = null;
                        this.copiados.copiados6 = null;
                        this.copiados.copiados7 = null;
                        this.copiados.copiados8 = null;
                    }
                    if (this.copiados.copiados4 != '') {
                        this.newIssue.emailToSendCopy[3] = this.copiados.copiados4;
                    }
                    else {
                        this.copiados.copiados4 = null;
                        this.copiados.copiados5 = null;
                        this.copiados.copiados6 = null;
                        this.copiados.copiados7 = null;
                        this.copiados.copiados8 = null;
                    }
                    if (this.copiados.copiados5 != '') {
                        this.newIssue.emailToSendCopy[4] = this.copiados.copiados5;
                    }
                    else {
                        this.copiados.copiados5 = null;
                        this.copiados.copiados6 = null;
                        this.copiados.copiados7 = null;
                        this.copiados.copiados8 = null;
                    }
                    if (this.copiados.copiados6 != '') {
                        this.newIssue.emailToSendCopy[5] = this.copiados.copiados6;
                    }
                    else {
                        this.copiados.copiados6 = null;
                        this.copiados.copiados7 = null;
                        this.copiados.copiados8 = null;
                    }
                    if (this.copiados.copiados7 != '') {
                        this.newIssue.emailToSendCopy[6] = this.copiados.copiados7;
                    }
                    else {
                        this.copiados.copiados7 = null;
                        this.copiados.copiados8 = null;
                    }
                    if (this.copiados.copiados8 != '') {
                        this.newIssue.emailToSendCopy[7] = this.copiados.copiados8;
                    }
                    else {
                        this.copiados.copiados8 = null;
                    }
                    this.newIssue.emailToSendCopy[0] = this.copiados.copiados1;
                    this.newIssue.emailToSendCopy[1] = this.copiados.copiados2;
                    this.newIssue.emailToSendCopy[2] = this.copiados.copiados3;
                    this.newIssue.emailToSendCopy[3] = this.copiados.copiados4;
                    this.newIssue.emailToSendCopy[4] = this.copiados.copiados5;
                    this.newIssue.emailToSendCopy[5] = this.copiados.copiados6;
                    this.newIssue.emailToSendCopy[6] = this.copiados.copiados7;
                    this.newIssue.emailToSendCopy[7] = this.copiados.copiados8;
                    if (newIssue.zonesToAnalyst.general == true) {
                        this.newIssue.zonesNL = {
                            zonesNLAnalyst: [null, null],
                            zonesNLCopiados: [null, null, null, null, null, null, null, null]
                        };
                        this.newIssue.zonesCoahila = {
                            zonesCoahilaAnalyst: [null, null],
                            zonesCoahilaCopiados: [null, null, null, null, null, null, null, null]
                        };
                        this.newIssue.zonesQueretaro = {
                            zonesQueretaroAnalyst: [null, null],
                            zonesQueretaroCopiados: [null, null, null, null, null, null, null, null]
                        };
                    }
                    else {
                        if (newIssue.zonesToAnalyst.porEstado == true) {
                            if (this.zonesNLAnalyst.analyst1 != '') {
                                this.newIssue.zonesNL.zonesNLAnalyst[0] = this.zonesNLAnalyst.analyst1;
                            }
                            else {
                                this.newIssue.zonesNL.zonesNLAnalyst[0] = null;
                                this.newIssue.zonesNL.zonesNLAnalyst[1] = null;
                                this.newIssue.zonesNL.zonesNLAnalyst[2] = null;
                                this.newIssue.zonesNL.zonesNLAnalyst[3] = null;
                                this.zonesNLAnalyst.analyst1 = '';
                                this.zonesNLAnalyst.analyst2 = '';
                                this.zonesNLAnalyst.analyst3 = '';
                                this.zonesNLAnalyst.analyst4 = '';
                            }
                            if (this.zonesNLAnalyst.analyst2 != '') {
                                this.newIssue.zonesNL.zonesNLAnalyst[1] = this.zonesNLAnalyst.analyst2;
                            }
                            else {
                                this.newIssue.zonesNL.zonesNLAnalyst[1] = null;
                                this.newIssue.zonesNL.zonesNLAnalyst[2] = null;
                                this.newIssue.zonesNL.zonesNLAnalyst[3] = null;
                                this.zonesNLAnalyst.analyst2 = '';
                                this.zonesNLAnalyst.analyst3 = '';
                                this.zonesNLAnalyst.analyst4 = '';
                            }
                            if (this.zonesNLAnalyst.analyst3 != '') {
                                this.newIssue.zonesNL.zonesNLAnalyst[2] = this.zonesNLAnalyst.analyst2;
                            }
                            else {
                                this.newIssue.zonesNL.zonesNLAnalyst[2] = null;
                                this.newIssue.zonesNL.zonesNLAnalyst[3] = null;
                                this.zonesNLAnalyst.analyst3 = '';
                                this.zonesNLAnalyst.analyst4 = '';
                            }
                            if (this.zonesNLAnalyst.analyst4 != '') {
                                this.newIssue.zonesNL.zonesNLAnalyst[3] = this.zonesNLAnalyst.analyst2;
                            }
                            else {
                                this.newIssue.zonesNL.zonesNLAnalyst[3] = null;
                                this.zonesNLAnalyst.analyst4 = '';
                            }
                            if (this.zonesNLCopiados.copiados1 != '') {
                                this.newIssue.zonesNL.zonesNLCopiados[0] = this.zonesNLCopiados.copiados1;
                            }
                            else {
                                this.newIssue.zonesNL.zonesNLCopiados[0] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[1] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[2] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[3] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[4] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[5] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[6] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[7] = null;
                                this.zonesNLCopiados.copiados1 = '';
                                this.zonesNLCopiados.copiados2 = '';
                                this.zonesNLCopiados.copiados3 = '';
                                this.zonesNLCopiados.copiados4 = '';
                                this.zonesNLCopiados.copiados5 = '';
                                this.zonesNLCopiados.copiados6 = '';
                                this.zonesNLCopiados.copiados7 = '';
                                this.zonesNLCopiados.copiados8 = '';
                            }
                            if (this.zonesNLCopiados.copiados2 != '') {
                                this.newIssue.zonesNL.zonesNLCopiados[1] = this.zonesNLCopiados.copiados2;
                            }
                            else {
                                this.newIssue.zonesNL.zonesNLCopiados[1] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[2] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[3] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[4] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[5] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[6] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[7] = null;
                                this.zonesNLCopiados.copiados2 = '';
                                this.zonesNLCopiados.copiados3 = '';
                                this.zonesNLCopiados.copiados4 = '';
                                this.zonesNLCopiados.copiados5 = '';
                                this.zonesNLCopiados.copiados6 = '';
                                this.zonesNLCopiados.copiados7 = '';
                                this.zonesNLCopiados.copiados8 = '';
                            }
                            if (this.zonesNLCopiados.copiados3 != '') {
                                this.newIssue.zonesNL.zonesNLCopiados[2] = this.zonesNLCopiados.copiados3;
                            }
                            else {
                                this.newIssue.zonesNL.zonesNLCopiados[2] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[3] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[4] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[5] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[6] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[7] = null;
                                this.zonesNLCopiados.copiados3 = '';
                                this.zonesNLCopiados.copiados4 = '';
                                this.zonesNLCopiados.copiados5 = '';
                                this.zonesNLCopiados.copiados6 = '';
                                this.zonesNLCopiados.copiados7 = '';
                                this.zonesNLCopiados.copiados8 = '';
                            }
                            if (this.zonesNLCopiados.copiados4 != '') {
                                this.newIssue.zonesNL.zonesNLCopiados[3] = this.zonesNLCopiados.copiados4;
                            }
                            else {
                                this.newIssue.zonesNL.zonesNLCopiados[3] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[4] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[5] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[6] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[7] = null;
                                this.zonesNLCopiados.copiados4 = '';
                                this.zonesNLCopiados.copiados5 = '';
                                this.zonesNLCopiados.copiados6 = '';
                                this.zonesNLCopiados.copiados7 = '';
                                this.zonesNLCopiados.copiados8 = '';
                            }
                            if (this.zonesNLCopiados.copiados5 != '') {
                                this.newIssue.zonesNL.zonesNLCopiados[4] = this.zonesNLCopiados.copiados5;
                            }
                            else {
                                this.newIssue.zonesNL.zonesNLCopiados[4] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[5] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[6] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[7] = null;
                                this.zonesNLCopiados.copiados5 = '';
                                this.zonesNLCopiados.copiados6 = '';
                                this.zonesNLCopiados.copiados7 = '';
                                this.zonesNLCopiados.copiados8 = '';
                            }
                            if (this.zonesNLCopiados.copiados6 != '') {
                                this.newIssue.zonesNL.zonesNLCopiados[5] = this.zonesNLCopiados.copiados6;
                            }
                            else {
                                this.newIssue.zonesNL.zonesNLCopiados[5] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[6] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[7] = null;
                                this.zonesNLCopiados.copiados6 = '';
                                this.zonesNLCopiados.copiados7 = '';
                                this.zonesNLCopiados.copiados8 = '';
                            }
                            if (this.zonesNLCopiados.copiados7 != '') {
                                this.newIssue.zonesNL.zonesNLCopiados[6] = this.zonesNLCopiados.copiados7;
                            }
                            else {
                                this.newIssue.zonesNL.zonesNLCopiados[6] = null;
                                this.newIssue.zonesNL.zonesNLCopiados[7] = null;
                                this.zonesNLCopiados.copiados7 = '';
                                this.zonesNLCopiados.copiados8 = '';
                            }
                            if (this.zonesNLCopiados.copiados8 != '') {
                                this.newIssue.zonesNL.zonesNLCopiados[7] = this.zonesNLCopiados.copiados8;
                            }
                            else {
                                this.newIssue.zonesNL.zonesNLCopiados[7] = null;
                                this.zonesNLCopiados.copiados8 = '';
                            }
                            if (this.zonesCoahilaAnalyst.analyst1 != '') {
                                this.newIssue.zonesCoahila.zonesCoahilaAnalyst[0] = this.zonesCoahilaAnalyst.analyst1;
                            }
                            else {
                                this.newIssue.zonesCoahila.zonesCoahilaAnalyst[0] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaAnalyst[1] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaAnalyst[2] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaAnalyst[3] = null;
                                this.zonesCoahilaAnalyst.analyst1 = '';
                                this.zonesCoahilaAnalyst.analyst2 = '';
                                this.zonesCoahilaAnalyst.analyst3 = '';
                                this.zonesCoahilaAnalyst.analyst4 = '';
                            }
                            if (this.zonesCoahilaAnalyst.analyst2 != '') {
                                this.newIssue.zonesCoahila.zonesCoahilaAnalyst[1] = this.zonesCoahilaAnalyst.analyst2;
                            }
                            else {
                                this.newIssue.zonesCoahila.zonesCoahilaAnalyst[1] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaAnalyst[2] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaAnalyst[3] = null;
                                this.zonesCoahilaAnalyst.analyst2 = '';
                                this.zonesCoahilaAnalyst.analyst3 = '';
                                this.zonesCoahilaAnalyst.analyst4 = '';
                            }
                            if (this.zonesCoahilaAnalyst.analyst3 != '') {
                                this.newIssue.zonesCoahila.zonesCoahilaAnalyst[2] = this.zonesCoahilaAnalyst.analyst2;
                            }
                            else {
                                this.newIssue.zonesCoahila.zonesCoahilaAnalyst[2] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaAnalyst[3] = null;
                                this.zonesCoahilaAnalyst.analyst3 = '';
                                this.zonesCoahilaAnalyst.analyst4 = '';
                            }
                            if (this.zonesCoahilaAnalyst.analyst4 != '') {
                                this.newIssue.zonesCoahila.zonesCoahilaAnalyst[3] = this.zonesCoahilaAnalyst.analyst2;
                            }
                            else {
                                this.newIssue.zonesCoahila.zonesCoahilaAnalyst[3] = null;
                                this.zonesCoahilaAnalyst.analyst4 = '';
                            }
                            if (this.zonesCoahilaCopiados.copiados1 != '') {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[0] = this.zonesCoahilaCopiados.copiados1;
                            }
                            else {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[0] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[1] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[2] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[3] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[4] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[5] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[6] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                                this.zonesCoahilaCopiados.copiados1 = '';
                                this.zonesCoahilaCopiados.copiados2 = '';
                                this.zonesCoahilaCopiados.copiados3 = '';
                                this.zonesCoahilaCopiados.copiados4 = '';
                                this.zonesCoahilaCopiados.copiados5 = '';
                                this.zonesCoahilaCopiados.copiados6 = '';
                                this.zonesCoahilaCopiados.copiados7 = '';
                                this.zonesCoahilaCopiados.copiados8 = '';
                            }
                            if (this.zonesCoahilaCopiados.copiados2 != '') {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[1] = this.zonesCoahilaCopiados.copiados2;
                            }
                            else {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[1] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[2] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[3] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[4] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[5] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[6] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                                this.zonesCoahilaCopiados.copiados2 = '';
                                this.zonesCoahilaCopiados.copiados3 = '';
                                this.zonesCoahilaCopiados.copiados4 = '';
                                this.zonesCoahilaCopiados.copiados5 = '';
                                this.zonesCoahilaCopiados.copiados6 = '';
                                this.zonesCoahilaCopiados.copiados7 = '';
                                this.zonesCoahilaCopiados.copiados8 = '';
                            }
                            if (this.zonesCoahilaCopiados.copiados3 != '') {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[2] = this.zonesCoahilaCopiados.copiados3;
                            }
                            else {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[2] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[3] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[4] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[5] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[6] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                                this.zonesCoahilaCopiados.copiados3 = '';
                                this.zonesCoahilaCopiados.copiados4 = '';
                                this.zonesCoahilaCopiados.copiados5 = '';
                                this.zonesCoahilaCopiados.copiados6 = '';
                                this.zonesCoahilaCopiados.copiados7 = '';
                                this.zonesCoahilaCopiados.copiados8 = '';
                            }
                            if (this.zonesCoahilaCopiados.copiados4 != '') {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[3] = this.zonesCoahilaCopiados.copiados4;
                            }
                            else {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[3] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[4] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[5] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[6] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                                this.zonesCoahilaCopiados.copiados4 = '';
                                this.zonesCoahilaCopiados.copiados5 = '';
                                this.zonesCoahilaCopiados.copiados6 = '';
                                this.zonesCoahilaCopiados.copiados7 = '';
                                this.zonesCoahilaCopiados.copiados8 = '';
                            }
                            if (this.zonesCoahilaCopiados.copiados5 != '') {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[4] = this.zonesCoahilaCopiados.copiados5;
                            }
                            else {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[4] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[5] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[6] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                                this.zonesCoahilaCopiados.copiados5 = '';
                                this.zonesCoahilaCopiados.copiados6 = '';
                                this.zonesCoahilaCopiados.copiados7 = '';
                                this.zonesCoahilaCopiados.copiados8 = '';
                            }
                            if (this.zonesCoahilaCopiados.copiados6 != '') {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[5] = this.zonesCoahilaCopiados.copiados6;
                            }
                            else {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[5] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[6] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                                this.zonesCoahilaCopiados.copiados6 = '';
                                this.zonesCoahilaCopiados.copiados7 = '';
                                this.zonesCoahilaCopiados.copiados8 = '';
                            }
                            if (this.zonesCoahilaCopiados.copiados7 != '') {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[6] = this.zonesCoahilaCopiados.copiados7;
                            }
                            else {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[6] = null;
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                                this.zonesCoahilaCopiados.copiados7 = '';
                                this.zonesCoahilaCopiados.copiados8 = '';
                            }
                            if (this.zonesCoahilaCopiados.copiados8 != '') {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[7] = this.zonesCoahilaCopiados.copiados8;
                            }
                            else {
                                this.newIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                                this.zonesCoahilaCopiados.copiados8 = '';
                            }
                            if (this.zonesQueretaroAnalyst.analyst1 != '') {
                                this.newIssue.zonesQueretaro.zonesQueretaroAnalyst[0] = this.zonesQueretaroAnalyst.analyst1;
                            }
                            else {
                                this.newIssue.zonesQueretaro.zonesQueretaroAnalyst[0] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroAnalyst[1] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroAnalyst[2] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroAnalyst[3] = null;
                                this.zonesQueretaroAnalyst.analyst1 = '';
                                this.zonesQueretaroAnalyst.analyst2 = '';
                                this.zonesQueretaroAnalyst.analyst3 = '';
                                this.zonesQueretaroAnalyst.analyst4 = '';
                            }
                            if (this.zonesQueretaroAnalyst.analyst2 != '') {
                                this.newIssue.zonesQueretaro.zonesQueretaroAnalyst[1] = this.zonesQueretaroAnalyst.analyst2;
                            }
                            else {
                                this.newIssue.zonesQueretaro.zonesQueretaroAnalyst[1] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroAnalyst[2] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroAnalyst[3] = null;
                                this.zonesQueretaroAnalyst.analyst2 = '';
                                this.zonesQueretaroAnalyst.analyst3 = '';
                                this.zonesQueretaroAnalyst.analyst4 = '';
                            }
                            if (this.zonesQueretaroAnalyst.analyst3 != '') {
                                this.newIssue.zonesQueretaro.zonesQueretaroAnalyst[2] = this.zonesQueretaroAnalyst.analyst2;
                            }
                            else {
                                this.newIssue.zonesQueretaro.zonesQueretaroAnalyst[2] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroAnalyst[3] = null;
                                this.zonesQueretaroAnalyst.analyst3 = '';
                                this.zonesQueretaroAnalyst.analyst4 = '';
                            }
                            if (this.zonesQueretaroAnalyst.analyst4 != '') {
                                this.newIssue.zonesQueretaro.zonesQueretaroAnalyst[3] = this.zonesQueretaroAnalyst.analyst2;
                            }
                            else {
                                this.newIssue.zonesQueretaro.zonesQueretaroAnalyst[3] = null;
                                this.zonesQueretaroAnalyst.analyst4 = '';
                            }
                            if (this.zonesQueretaroCopiados.copiados1 != '') {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[0] = this.zonesQueretaroCopiados.copiados1;
                            }
                            else {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[0] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[1] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[2] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[3] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[4] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[5] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[6] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                                this.zonesQueretaroCopiados.copiados1 = '';
                                this.zonesQueretaroCopiados.copiados2 = '';
                                this.zonesQueretaroCopiados.copiados3 = '';
                                this.zonesQueretaroCopiados.copiados4 = '';
                                this.zonesQueretaroCopiados.copiados5 = '';
                                this.zonesQueretaroCopiados.copiados6 = '';
                                this.zonesQueretaroCopiados.copiados7 = '';
                                this.zonesQueretaroCopiados.copiados8 = '';
                            }
                            if (this.zonesQueretaroCopiados.copiados2 != '') {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[1] = this.zonesQueretaroCopiados.copiados2;
                            }
                            else {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[1] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[2] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[3] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[4] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[5] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[6] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                                this.zonesQueretaroCopiados.copiados2 = '';
                                this.zonesQueretaroCopiados.copiados3 = '';
                                this.zonesQueretaroCopiados.copiados4 = '';
                                this.zonesQueretaroCopiados.copiados5 = '';
                                this.zonesQueretaroCopiados.copiados6 = '';
                                this.zonesQueretaroCopiados.copiados7 = '';
                                this.zonesQueretaroCopiados.copiados8 = '';
                            }
                            if (this.zonesQueretaroCopiados.copiados3 != '') {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[2] = this.zonesQueretaroCopiados.copiados3;
                            }
                            else {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[2] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[3] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[4] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[5] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[6] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                                this.zonesQueretaroCopiados.copiados3 = '';
                                this.zonesQueretaroCopiados.copiados4 = '';
                                this.zonesQueretaroCopiados.copiados5 = '';
                                this.zonesQueretaroCopiados.copiados6 = '';
                                this.zonesQueretaroCopiados.copiados7 = '';
                                this.zonesQueretaroCopiados.copiados8 = '';
                            }
                            if (this.zonesQueretaroCopiados.copiados4 != '') {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[3] = this.zonesQueretaroCopiados.copiados4;
                            }
                            else {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[3] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[4] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[5] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[6] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                                this.zonesQueretaroCopiados.copiados4 = '';
                                this.zonesQueretaroCopiados.copiados5 = '';
                                this.zonesQueretaroCopiados.copiados6 = '';
                                this.zonesQueretaroCopiados.copiados7 = '';
                                this.zonesQueretaroCopiados.copiados8 = '';
                            }
                            if (this.zonesQueretaroCopiados.copiados5 != '') {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[4] = this.zonesQueretaroCopiados.copiados5;
                            }
                            else {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[4] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[5] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[6] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                                this.zonesQueretaroCopiados.copiados5 = '';
                                this.zonesQueretaroCopiados.copiados6 = '';
                                this.zonesQueretaroCopiados.copiados7 = '';
                                this.zonesQueretaroCopiados.copiados8 = '';
                            }
                            if (this.zonesQueretaroCopiados.copiados6 != '') {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[5] = this.zonesQueretaroCopiados.copiados6;
                            }
                            else {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[5] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[6] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                                this.zonesQueretaroCopiados.copiados6 = '';
                                this.zonesQueretaroCopiados.copiados7 = '';
                                this.zonesQueretaroCopiados.copiados8 = '';
                            }
                            if (this.zonesQueretaroCopiados.copiados7 != '') {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[6] = this.zonesQueretaroCopiados.copiados7;
                            }
                            else {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[6] = null;
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                                this.zonesQueretaroCopiados.copiados7 = '';
                                this.zonesQueretaroCopiados.copiados8 = '';
                            }
                            if (this.zonesQueretaroCopiados.copiados8 != '') {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[7] = this.zonesQueretaroCopiados.copiados8;
                            }
                            else {
                                this.newIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                                this.zonesQueretaroCopiados.copiados8 = '';
                            }
                        }
                    }
                    if (this.newIssue.critico && this.newIssue.critico == true) {
                    }
                    else {
                        this.newIssue.critico = false;
                    }
                    this._requestNewService.newService(this.newIssue).subscribe(function (response) {
                        _this.load = false;
                        swal("¡Éxito!", "servicio creado", "success")
                            .then(function (res) {
                            _this.searchServices(_this.newIssue.departments);
                            _this.analyst = {
                                analyst1: '',
                                analyst2: '',
                                analyst3: '',
                                analyst4: ''
                            },
                                _this.copiados = {
                                    copiados1: '',
                                    copiados2: '',
                                    copiados3: '',
                                    copiados4: '',
                                    copiados5: '',
                                    copiados6: '',
                                    copiados7: '',
                                    copiados8: '',
                                },
                                _this.campo = {
                                    foto: false,
                                    numReport: false,
                                    nombreTimMember: false,
                                    numNomina: false,
                                    cantBolsasComprobantes: false,
                                    numOrden: false,
                                    producto: false,
                                    lote: false,
                                    cantidad: false,
                                    numSerie: false,
                                    marca: false,
                                    menuboards: false,
                                    dt: false,
                                    kds: false,
                                    email: false,
                                    pos: false,
                                    medidas: false,
                                    video: false,
                                };
                            _this.zonesNLAnalyst = {
                                analyst1: '',
                                analyst2: '',
                                analyst3: '',
                                analyst4: ''
                            },
                                _this.zonesNLCopiados = {
                                    copiados1: '',
                                    copiados2: '',
                                    copiados3: '',
                                    copiados4: '',
                                    copiados5: '',
                                    copiados6: '',
                                    copiados7: '',
                                    copiados8: '',
                                },
                                _this.zonesCoahilaAnalyst = {
                                    analyst1: '',
                                    analyst2: '',
                                    analyst3: '',
                                    analyst4: ''
                                },
                                _this.zonesCoahilaCopiados = {
                                    copiados1: '',
                                    copiados2: '',
                                    copiados3: '',
                                    copiados4: '',
                                    copiados5: '',
                                    copiados6: '',
                                    copiados7: '',
                                    copiados8: '',
                                },
                                _this.zonesQueretaroAnalyst = {
                                    analyst1: '',
                                    analyst2: '',
                                    analyst3: '',
                                    analyst4: ''
                                },
                                _this.zonesQueretaroCopiados = {
                                    copiados1: '',
                                    copiados2: '',
                                    copiados3: '',
                                    copiados4: '',
                                    copiados5: '',
                                    copiados6: '',
                                    copiados7: '',
                                    copiados8: '',
                                };
                            _this.zonesToAnalyst = {
                                general: false,
                                porEstado: false
                            };
                            _this.newIssue.subcategory = '';
                            _this.newIssue.descSubcategory = '';
                            _this.newIssue.sla = '';
                            _this.newIssue.slaCallCenter = '';
                            _this.newIssue.descSla = '';
                        });
                        _this._requestNewService.getAllIssuesNormal(_this.identity).subscribe(function (response) {
                            _this.allIsues = response;
                        }, function (error) {
                            var errorMessage = error;
                            if (errorMessage != null) {
                                // var body = JSON.parse(error._body)
                                _this.load = false;
                                swal("Error!", "errrrrrr", "error");
                            }
                        });
                    }, function (error) {
                        var errorMessage = error;
                        if (errorMessage != null) {
                            console.log(errorMessage);
                            _this.load = false;
                            swal("Error!", "errorMessage", "error");
                        }
                    });
                }
                else {
                    swal("Error!", "Asigné minimo un analista general", "error");
                }
            }
            else {
                swal("Error!", "Asigné minimo un analista por estado", "error");
            }
        }
        else {
            swal("Error!", "Completa la información: Servicio, Subcategoría, SLA y analista", "error");
        }
    };
    IssuesNewComponent.prototype.issueClick = function (issue) {
        if (issue.campo) {
            this.campo = issue.campo;
        }
        else {
            this.campo = {
                foto: false,
                numReport: false,
                nombreTimMember: false,
                numNomina: false,
                cantBolsasComprobantes: false,
                numOrden: false,
                producto: false,
                lote: false,
                cantidad: false,
                numSerie: false,
                marca: false
            };
        }
        this.issue = issue;
        this.newIssue = issue;
        if (issue.departments && issue.departments._id) {
            this.newIssue.departments = issue.departments._id;
        }
        else {
            this.newIssue.departments = '';
        }
        if (this.issue.emailToSendAnalist) {
            if (this.issue.emailToSendAnalist[0]) {
                this.analyst.analyst1 = this.issue.emailToSendAnalist[0];
            }
            else {
                this.analyst.analyst1 = '';
            }
            if (this.issue.emailToSendAnalist[1]) {
                this.analyst.analyst2 = this.issue.emailToSendAnalist[1];
            }
            else {
                this.analyst.analyst2 = '';
            }
            if (this.issue.emailToSendAnalist[2]) {
                this.analyst.analyst3 = this.issue.emailToSendAnalist[2];
            }
            else {
                this.analyst.analyst3 = '';
            }
            if (this.issue.emailToSendAnalist[3]) {
                this.analyst.analyst4 = this.issue.emailToSendAnalist[3];
            }
            else {
                this.analyst.analyst4 = '';
            }
        }
        else {
            this.analyst.analyst1 = '';
            this.analyst.analyst2 = '';
            this.analyst.analyst3 = '';
            this.analyst.analyst4 = '';
        }
        if (this.issue.emailToSendCopy) {
            if (this.issue.emailToSendCopy[0]) {
                this.copiados.copiados1 = this.issue.emailToSendCopy[0];
            }
            else {
                this.copiados.copiados1 = '';
            }
            if (this.issue.emailToSendCopy[1]) {
                this.copiados.copiados2 = this.issue.emailToSendCopy[1];
            }
            else {
                this.copiados.copiados2 = '';
            }
            if (this.issue.emailToSendCopy[2]) {
                this.copiados.copiados3 = this.issue.emailToSendCopy[2];
            }
            else {
                this.copiados.copiados3 = '';
            }
            if (this.issue.emailToSendCopy[3]) {
                this.copiados.copiados4 = this.issue.emailToSendCopy[3];
            }
            else {
                this.copiados.copiados4 = '';
            }
            if (this.issue.emailToSendCopy[4]) {
                this.copiados.copiados5 = this.issue.emailToSendCopy[4];
            }
            else {
                this.copiados.copiados5 = '';
            }
            if (this.issue.emailToSendCopy[5]) {
                this.copiados.copiados6 = this.issue.emailToSendCopy[5];
            }
            else {
                this.copiados.copiados6 = '';
            }
            if (this.issue.emailToSendCopy[6]) {
                this.copiados.copiados7 = this.issue.emailToSendCopy[6];
            }
            else {
                this.copiados.copiados7 = '';
            }
            if (this.issue.emailToSendCopy[7]) {
                this.copiados.copiados8 = this.issue.emailToSendCopy[7];
            }
            else {
                this.copiados.copiados8 = '';
            }
        }
        else {
            this.copiados.copiados1 = '';
            this.copiados.copiados2 = '';
            this.copiados.copiados3 = '';
            this.copiados.copiados4 = '';
            this.copiados.copiados5 = '';
            this.copiados.copiados6 = '';
            this.copiados.copiados7 = '';
            this.copiados.copiados8 = '';
        }
        if (this.issue.format == 'dia') {
            this.newIssue.dia = true;
        }
        if (this.issue.format == 'hora') {
            this.newIssue.hora = true;
        }
        if (this.issue.zonesToAnalyst && this.issue.zonesToAnalyst.porEstado == true) {
            this.zonesToAnalyst = {
                general: false,
                porEstado: true
            };
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLAnalyst && this.issue.zonesNL.zonesNLAnalyst[0] && this.issue.zonesNL.zonesNLAnalyst[0] != '') {
                this.zonesNLAnalyst.analyst1 = this.issue.zonesNL.zonesNLAnalyst[0];
            }
            else {
                this.zonesNLAnalyst.analyst1 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLAnalyst && this.issue.zonesNL.zonesNLAnalyst[1] && this.issue.zonesNL.zonesNLAnalyst[1] != '') {
                this.zonesNLAnalyst.analyst2 = this.issue.zonesNL.zonesNLAnalyst[1];
            }
            else {
                this.zonesNLAnalyst.analyst2 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLAnalyst && this.issue.zonesNL.zonesNLAnalyst[2] && this.issue.zonesNL.zonesNLAnalyst[2] != '') {
                this.zonesNLAnalyst.analyst3 = this.issue.zonesNL.zonesNLAnalyst[2];
            }
            else {
                this.zonesNLAnalyst.analyst3 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLAnalyst && this.issue.zonesNL.zonesNLAnalyst[3] && this.issue.zonesNL.zonesNLAnalyst[3] != '') {
                this.zonesNLAnalyst.analyst4 = this.issue.zonesNL.zonesNLAnalyst[3];
            }
            else {
                this.zonesNLAnalyst.analyst4 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[0] && this.issue.zonesNL.zonesNLCopiados[0] != '') {
                this.zonesNLCopiados.copiados1 = this.issue.zonesNL.zonesNLCopiados[0];
            }
            else {
                this.zonesNLCopiados.copiados1 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[1] && this.issue.zonesNL.zonesNLCopiados[1] != '') {
                this.zonesNLCopiados.copiados2 = this.issue.zonesNL.zonesNLCopiados[1];
            }
            else {
                this.zonesNLCopiados.copiados2 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[2] && this.issue.zonesNL.zonesNLCopiados[2] != '') {
                this.zonesNLCopiados.copiados3 = this.issue.zonesNL.zonesNLCopiados[2];
            }
            else {
                this.zonesNLCopiados.copiados3 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[3] && this.issue.zonesNL.zonesNLCopiados[3] != '') {
                this.zonesNLCopiados.copiados4 = this.issue.zonesNL.zonesNLCopiados[3];
            }
            else {
                this.zonesNLCopiados.copiados4 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[4] && this.issue.zonesNL.zonesNLCopiados[4] != '') {
                this.zonesNLCopiados.copiados5 = this.issue.zonesNL.zonesNLCopiados[4];
            }
            else {
                this.zonesNLCopiados.copiados5 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[5] && this.issue.zonesNL.zonesNLCopiados[5] != '') {
                this.zonesNLCopiados.copiados6 = this.issue.zonesNL.zonesNLCopiados[5];
            }
            else {
                this.zonesNLCopiados.copiados6 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[6] && this.issue.zonesNL.zonesNLCopiados[6] != '') {
                this.zonesNLCopiados.copiados7 = this.issue.zonesNL.zonesNLCopiados[6];
            }
            else {
                this.zonesNLCopiados.copiados7 = '';
            }
            if (this.issue.zonesNL && this.issue.zonesNL.zonesNLCopiados && this.issue.zonesNL.zonesNLCopiados[7] && this.issue.zonesNL.zonesNLCopiados[7] != '') {
                this.zonesNLCopiados.copiados8 = this.issue.zonesNL.zonesNLCopiados[7];
            }
            else {
                this.zonesNLCopiados.copiados8 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaAnalyst && this.issue.zonesCoahila.zonesCoahilaAnalyst[0] && this.issue.zonesCoahila.zonesCoahilaAnalyst[0] != '') {
                this.zonesCoahilaAnalyst.analyst1 = this.issue.zonesCoahila.zonesCoahilaAnalyst[0];
            }
            else {
                this.zonesCoahilaAnalyst.analyst1 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaAnalyst && this.issue.zonesCoahila.zonesCoahilaAnalyst[1] && this.issue.zonesCoahila.zonesCoahilaAnalyst[1] != '') {
                this.zonesCoahilaAnalyst.analyst2 = this.issue.zonesCoahila.zonesCoahilaAnalyst[1];
            }
            else {
                this.zonesCoahilaAnalyst.analyst2 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaAnalyst && this.issue.zonesCoahila.zonesCoahilaAnalyst[2] && this.issue.zonesCoahila.zonesCoahilaAnalyst[2] != '') {
                this.zonesCoahilaAnalyst.analyst3 = this.issue.zonesCoahila.zonesCoahilaAnalyst[2];
            }
            else {
                this.zonesCoahilaAnalyst.analyst3 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaAnalyst && this.issue.zonesCoahila.zonesCoahilaAnalyst[3] && this.issue.zonesCoahila.zonesCoahilaAnalyst[3] != '') {
                this.zonesCoahilaAnalyst.analyst4 = this.issue.zonesCoahila.zonesCoahilaAnalyst[3];
            }
            else {
                this.zonesCoahilaAnalyst.analyst4 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[0] && this.issue.zonesCoahila.zonesCoahilaCopiados[0] != '') {
                this.zonesCoahilaCopiados.copiados1 = this.issue.zonesCoahila.zonesCoahilaCopiados[0];
            }
            else {
                this.zonesCoahilaCopiados.copiados1 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[1] && this.issue.zonesCoahila.zonesCoahilaCopiados[1] != '') {
                this.zonesCoahilaCopiados.copiados2 = this.issue.zonesCoahila.zonesCoahilaCopiados[1];
            }
            else {
                this.zonesCoahilaCopiados.copiados2 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[2] && this.issue.zonesCoahila.zonesCoahilaCopiados[2] != '') {
                this.zonesCoahilaCopiados.copiados3 = this.issue.zonesCoahila.zonesCoahilaCopiados[2];
            }
            else {
                this.zonesCoahilaCopiados.copiados3 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[3] && this.issue.zonesCoahila.zonesCoahilaCopiados[3] != '') {
                this.zonesCoahilaCopiados.copiados4 = this.issue.zonesCoahila.zonesCoahilaCopiados[3];
            }
            else {
                this.zonesCoahilaCopiados.copiados4 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[4] && this.issue.zonesCoahila.zonesCoahilaCopiados[4] != '') {
                this.zonesCoahilaCopiados.copiados5 = this.issue.zonesCoahila.zonesCoahilaCopiados[4];
            }
            else {
                this.zonesCoahilaCopiados.copiados5 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[5] && this.issue.zonesCoahila.zonesCoahilaCopiados[5] != '') {
                this.zonesCoahilaCopiados.copiados6 = this.issue.zonesCoahila.zonesCoahilaCopiados[5];
            }
            else {
                this.zonesCoahilaCopiados.copiados6 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[6] && this.issue.zonesCoahila.zonesCoahilaCopiados[6] != '') {
                this.zonesCoahilaCopiados.copiados7 = this.issue.zonesCoahila.zonesCoahilaCopiados[6];
            }
            else {
                this.zonesCoahilaCopiados.copiados7 = '';
            }
            if (this.issue.zonesCoahila && this.issue.zonesCoahila.zonesCoahilaCopiados && this.issue.zonesCoahila.zonesCoahilaCopiados[7] && this.issue.zonesCoahila.zonesCoahilaCopiados[7] != '') {
                this.zonesCoahilaCopiados.copiados8 = this.issue.zonesCoahila.zonesCoahilaCopiados[7];
            }
            else {
                this.zonesCoahilaCopiados.copiados8 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroAnalyst && this.issue.zonesQueretaro.zonesQueretaroAnalyst[0] && this.issue.zonesQueretaro.zonesQueretaroAnalyst[0] != '') {
                this.zonesQueretaroAnalyst.analyst1 = this.issue.zonesQueretaro.zonesQueretaroAnalyst[0];
            }
            else {
                this.zonesQueretaroAnalyst.analyst1 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroAnalyst && this.issue.zonesQueretaro.zonesQueretaroAnalyst[1] && this.issue.zonesQueretaro.zonesQueretaroAnalyst[1] != '') {
                this.zonesQueretaroAnalyst.analyst2 = this.issue.zonesQueretaro.zonesQueretaroAnalyst[1];
            }
            else {
                this.zonesQueretaroAnalyst.analyst2 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroAnalyst && this.issue.zonesQueretaro.zonesQueretaroAnalyst[2] && this.issue.zonesQueretaro.zonesQueretaroAnalyst[2] != '') {
                this.zonesQueretaroAnalyst.analyst3 = this.issue.zonesQueretaro.zonesQueretaroAnalyst[2];
            }
            else {
                this.zonesQueretaroAnalyst.analyst3 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroAnalyst && this.issue.zonesQueretaro.zonesQueretaroAnalyst[3] && this.issue.zonesQueretaro.zonesQueretaroAnalyst[3] != '') {
                this.zonesQueretaroAnalyst.analyst4 = this.issue.zonesQueretaro.zonesQueretaroAnalyst[3];
            }
            else {
                this.zonesQueretaroAnalyst.analyst4 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[0] && this.issue.zonesQueretaro.zonesQueretaroCopiados[0] != '') {
                this.zonesQueretaroCopiados.copiados1 = this.issue.zonesQueretaro.zonesQueretaroCopiados[0];
            }
            else {
                this.zonesQueretaroCopiados.copiados1 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[1] && this.issue.zonesQueretaro.zonesQueretaroCopiados[1] != '') {
                this.zonesQueretaroCopiados.copiados2 = this.issue.zonesQueretaro.zonesQueretaroCopiados[1];
            }
            else {
                this.zonesQueretaroCopiados.copiados2 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[2] && this.issue.zonesQueretaro.zonesQueretaroCopiados[2] != '') {
                this.zonesQueretaroCopiados.copiados3 = this.issue.zonesQueretaro.zonesQueretaroCopiados[2];
            }
            else {
                this.zonesQueretaroCopiados.copiados3 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[3] && this.issue.zonesQueretaro.zonesQueretaroCopiados[3] != '') {
                this.zonesQueretaroCopiados.copiados4 = this.issue.zonesQueretaro.zonesQueretaroCopiados[3];
            }
            else {
                this.zonesQueretaroCopiados.copiados4 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[4] && this.issue.zonesQueretaro.zonesQueretaroCopiados[4] != '') {
                this.zonesQueretaroCopiados.copiados5 = this.issue.zonesQueretaro.zonesQueretaroCopiados[4];
            }
            else {
                this.zonesQueretaroCopiados.copiados5 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[5] && this.issue.zonesQueretaro.zonesQueretaroCopiados[5] != '') {
                this.zonesQueretaroCopiados.copiados6 = this.issue.zonesQueretaro.zonesQueretaroCopiados[5];
            }
            else {
                this.zonesQueretaroCopiados.copiados6 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[6] && this.issue.zonesQueretaro.zonesQueretaroCopiados[6] != '') {
                this.zonesQueretaroCopiados.copiados7 = this.issue.zonesQueretaro.zonesQueretaroCopiados[6];
            }
            else {
                this.zonesQueretaroCopiados.copiados7 = '';
            }
            if (this.issue.zonesQueretaro && this.issue.zonesQueretaro.zonesQueretaroCopiados && this.issue.zonesQueretaro.zonesQueretaroCopiados[7] && this.issue.zonesQueretaro.zonesQueretaroCopiados[7] != '') {
                this.zonesQueretaroCopiados.copiados8 = this.issue.zonesQueretaro.zonesQueretaroCopiados[7];
            }
            else {
                this.zonesQueretaroCopiados.copiados8 = '';
            }
        }
        else {
            this.zonesToAnalyst = {
                general: true,
                porEstado: false
            };
            this.zonesNLAnalyst = {
                analyst1: '',
                analyst2: '',
                analyst3: '',
                analyst4: ''
            },
                this.zonesNLCopiados = {
                    copiados1: '',
                    copiados2: '',
                    copiados3: '',
                    copiados4: '',
                    copiados5: '',
                    copiados6: '',
                    copiados7: '',
                    copiados8: '',
                },
                this.zonesCoahilaAnalyst = {
                    analyst1: '',
                    analyst2: '',
                    analyst3: '',
                    analyst4: ''
                },
                this.zonesCoahilaCopiados = {
                    copiados1: '',
                    copiados2: '',
                    copiados3: '',
                    copiados4: '',
                    copiados5: '',
                    copiados6: '',
                    copiados7: '',
                    copiados8: '',
                },
                this.zonesQueretaroAnalyst = {
                    analyst1: '',
                    analyst2: '',
                    analyst3: '',
                    analyst4: ''
                },
                this.zonesQueretaroCopiados = {
                    copiados1: '',
                    copiados2: '',
                    copiados3: '',
                    copiados4: '',
                    copiados5: '',
                    copiados6: '',
                    copiados7: '',
                    copiados8: '',
                };
        }
    };
    IssuesNewComponent.prototype.uatdarCambio = function (editIssue) {
        editIssue.campo = this.campo;
        editIssue.zonesToAnalyst = this.zonesToAnalyst;
        if (editIssue.departments && editIssue.service && editIssue.subcategory && editIssue.sla && editIssue.slaCallCenter && (editIssue.zonesToAnalyst.general == true || editIssue.zonesToAnalyst.porEstado == true)) {
            if (this.zonesToAnalyst.porEstado == false || (this.zonesToAnalyst.porEstado == true && (this.zonesNLAnalyst.analyst1 != '' && this.zonesCoahilaAnalyst.analyst1 != '' && this.zonesQueretaroAnalyst.analyst1 != ''))) {
                if (editIssue.dia == true) {
                    editIssue.format = 'dia';
                }
                else if (editIssue.hora == true) {
                    editIssue.format = 'hora';
                }
                if (this.analyst.analyst1 != '') {
                    editIssue.emailToSendAnalist[0] = this.analyst.analyst1;
                }
                else {
                    editIssue.emailToSendAnalist[0] = null;
                    editIssue.emailToSendAnalist[1] = null;
                    editIssue.emailToSendAnalist[2] = null;
                    editIssue.emailToSendAnalist[3] = null;
                    this.analyst.analyst2 = '';
                    this.analyst.analyst3 = '';
                    this.analyst.analyst4 = '';
                }
                if (this.analyst.analyst2 != '') {
                    editIssue.emailToSendAnalist[1] = this.analyst.analyst2;
                }
                else {
                    editIssue.emailToSendAnalist[1] = null;
                    editIssue.emailToSendAnalist[2] = null;
                    editIssue.emailToSendAnalist[3] = null;
                    this.analyst.analyst3 = '';
                    this.analyst.analyst4 = '';
                }
                if (this.analyst.analyst3 != '') {
                    editIssue.emailToSendAnalist[2] = this.analyst.analyst3;
                }
                else {
                    editIssue.emailToSendAnalist[2] = null;
                    editIssue.emailToSendAnalist[3] = null;
                    this.analyst.analyst4 = '';
                }
                if (this.analyst.analyst4 != '') {
                    editIssue.emailToSendAnalist[3] = this.analyst.analyst4;
                }
                else {
                    editIssue.emailToSendAnalist[3] = null;
                }
                if (this.copiados.copiados1 != '') {
                    editIssue.emailToSendCopy[0] = this.copiados.copiados1;
                }
                else {
                    editIssue.emailToSendCopy[0] = null;
                    this.copiados.copiados2 = null;
                    this.copiados.copiados3 = null;
                    this.copiados.copiados4 = null;
                    this.copiados.copiados5 = null;
                    this.copiados.copiados6 = null;
                    this.copiados.copiados7 = null;
                    this.copiados.copiados8 = null;
                }
                if (this.copiados.copiados2 != '') {
                    editIssue.emailToSendCopy[1] = this.copiados.copiados2;
                }
                else {
                    editIssue.emailToSendCopy[1] = null;
                    this.copiados.copiados3 = null;
                    this.copiados.copiados4 = null;
                    this.copiados.copiados5 = null;
                    this.copiados.copiados6 = null;
                    this.copiados.copiados7 = null;
                    this.copiados.copiados8 = null;
                }
                if (this.copiados.copiados3 != '') {
                    editIssue.emailToSendCopy[2] = this.copiados.copiados3;
                }
                else {
                    editIssue.emailToSendCopy[2] = null;
                    this.copiados.copiados4 = null;
                    this.copiados.copiados5 = null;
                    this.copiados.copiados6 = null;
                    this.copiados.copiados7 = null;
                    this.copiados.copiados8 = null;
                }
                if (this.copiados.copiados4 != '') {
                    editIssue.emailToSendCopy[3] = this.copiados.copiados4;
                }
                else {
                    editIssue.emailToSendCopy[3] = null;
                    this.copiados.copiados5 = null;
                    this.copiados.copiados6 = null;
                    this.copiados.copiados7 = null;
                    this.copiados.copiados8 = null;
                }
                if (this.copiados.copiados5 != '') {
                    editIssue.emailToSendCopy[4] = this.copiados.copiados5;
                }
                else {
                    editIssue.emailToSendCopy[4] = null;
                    this.copiados.copiados6 = null;
                    this.copiados.copiados7 = null;
                    this.copiados.copiados8 = null;
                }
                if (this.copiados.copiados6 != '') {
                    editIssue.emailToSendCopy[5] = this.copiados.copiados6;
                }
                else {
                    editIssue.emailToSendCopy[5] = null;
                    this.copiados.copiados7 = null;
                    this.copiados.copiados8 = null;
                }
                if (this.copiados.copiados7 != '') {
                    editIssue.emailToSendCopy[6] = this.copiados.copiados7;
                }
                else {
                    editIssue.emailToSendCopy[6] = null;
                    this.copiados.copiados8 = null;
                }
                if (this.copiados.copiados8 != '') {
                    editIssue.emailToSendCopy[7] = this.copiados.copiados8;
                }
                else {
                    editIssue.emailToSendCopy[7] = null;
                }
                if (editIssue.active == "false") {
                    editIssue.active = false;
                }
                if (editIssue.active == "true") {
                    editIssue.active = true;
                }
                if (editIssue.zonesToAnalyst.porEstado == true) {
                    editIssue.zonesNL = {
                        zonesNLAnalyst: [this.zonesNLAnalyst.analyst1, this.zonesNLAnalyst.analyst2, this.zonesNLAnalyst.analyst3, this.zonesNLAnalyst.analyst4],
                        zonesNLCopiados: [this.zonesNLCopiados.copiados1, this.zonesNLCopiados.copiados2, this.zonesNLCopiados.copiados3, this.zonesNLCopiados.copiados4, this.zonesNLCopiados.copiados5, this.zonesNLCopiados.copiados6, this.zonesNLCopiados.copiados7, this.zonesNLCopiados.copiados8]
                    };
                    editIssue.zonesCoahila = {
                        zonesCoahilaAnalyst: [this.zonesCoahilaAnalyst.analyst1, this.zonesCoahilaAnalyst.analyst2, this.zonesCoahilaAnalyst.analyst3, this.zonesCoahilaAnalyst.analyst4],
                        zonesCoahilaCopiados: [this.zonesCoahilaCopiados.copiados1, this.zonesCoahilaCopiados.copiados2, this.zonesCoahilaCopiados.copiados3, this.zonesCoahilaCopiados.copiados4, this.zonesCoahilaCopiados.copiados5, this.zonesCoahilaCopiados.copiados6, this.zonesCoahilaCopiados.copiados7, this.zonesCoahilaCopiados.copiados8]
                    };
                    editIssue.zonesQueretaro = {
                        zonesQueretaroAnalyst: [this.zonesQueretaroAnalyst.analyst1, this.zonesQueretaroAnalyst.analyst2, this.zonesQueretaroAnalyst.analyst3, this.zonesQueretaroAnalyst.analyst4],
                        zonesQueretaroCopiados: [this.zonesQueretaroCopiados.copiados1, this.zonesQueretaroCopiados.copiados2, this.zonesQueretaroCopiados.copiados3, this.zonesQueretaroCopiados.copiados4, this.zonesQueretaroCopiados.copiados5, this.zonesQueretaroCopiados.copiados6, this.zonesQueretaroCopiados.copiados7, this.zonesQueretaroCopiados.copiados8]
                    };
                }
                else {
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLAnalyst.analyst1 != '') {
                    editIssue.zonesNL.zonesNLAnalyst[0] = this.zonesNLAnalyst.analyst1;
                }
                else {
                    editIssue.zonesNL.zonesNLAnalyst[0] = null;
                    editIssue.zonesNL.zonesNLAnalyst[1] = null;
                    editIssue.zonesNL.zonesNLAnalyst[2] = null;
                    editIssue.zonesNL.zonesNLAnalyst[3] = null;
                    this.zonesNLAnalyst.analyst2 = '';
                    this.zonesNLAnalyst.analyst3 = '';
                    this.zonesNLAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLAnalyst.analyst2 != '') {
                    editIssue.zonesNL.zonesNLAnalyst[1] = this.zonesNLAnalyst.analyst2;
                }
                else {
                    editIssue.zonesNL.zonesNLAnalyst[1] = null;
                    editIssue.zonesNL.zonesNLAnalyst[2] = null;
                    editIssue.zonesNL.zonesNLAnalyst[3] = null;
                    this.zonesNLAnalyst.analyst3 = '';
                    this.zonesNLAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLAnalyst.analyst3 != '') {
                    editIssue.zonesNL.zonesNLAnalyst[2] = this.zonesNLAnalyst.analyst3;
                }
                else {
                    editIssue.zonesNL.zonesNLAnalyst[2] = null;
                    editIssue.zonesNL.zonesNLAnalyst[3] = null;
                    this.zonesNLAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLAnalyst.analyst4 != '') {
                    editIssue.zonesNL.zonesNLAnalyst[3] = this.zonesNLAnalyst.analyst4;
                }
                else {
                    editIssue.zonesNL.zonesNLAnalyst[3] = null;
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados1 != '') {
                    editIssue.zonesNL.zonesNLCopiados[0] = this.zonesNLCopiados.copiados1;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[0] = null;
                    editIssue.zonesNL.zonesNLCopiados[1] = null;
                    editIssue.zonesNL.zonesNLCopiados[2] = null;
                    editIssue.zonesNL.zonesNLCopiados[3] = null;
                    editIssue.zonesNL.zonesNLCopiados[4] = null;
                    editIssue.zonesNL.zonesNLCopiados[5] = null;
                    editIssue.zonesNL.zonesNLCopiados[6] = null;
                    editIssue.zonesNL.zonesNLCopiados[7] = null;
                    this.zonesNLCopiados.copiados2 = '';
                    this.zonesNLCopiados.copiados3 = '';
                    this.zonesNLCopiados.copiados4 = '';
                    this.zonesNLCopiados.copiados5 = '';
                    this.zonesNLCopiados.copiados6 = '';
                    this.zonesNLCopiados.copiados7 = '';
                    this.zonesNLCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados2 != '') {
                    editIssue.zonesNL.zonesNLCopiados[1] = this.zonesNLCopiados.copiados2;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[1] = null;
                    editIssue.zonesNL.zonesNLCopiados[2] = null;
                    editIssue.zonesNL.zonesNLCopiados[3] = null;
                    editIssue.zonesNL.zonesNLCopiados[4] = null;
                    editIssue.zonesNL.zonesNLCopiados[5] = null;
                    editIssue.zonesNL.zonesNLCopiados[6] = null;
                    editIssue.zonesNL.zonesNLCopiados[7] = null;
                    this.zonesNLCopiados.copiados3 = '';
                    this.zonesNLCopiados.copiados4 = '';
                    this.zonesNLCopiados.copiados5 = '';
                    this.zonesNLCopiados.copiados6 = '';
                    this.zonesNLCopiados.copiados7 = '';
                    this.zonesNLCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados3 != '') {
                    editIssue.zonesNL.zonesNLCopiados[2] = this.zonesNLCopiados.copiados3;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[2] = null;
                    editIssue.zonesNL.zonesNLCopiados[3] = null;
                    editIssue.zonesNL.zonesNLCopiados[4] = null;
                    editIssue.zonesNL.zonesNLCopiados[5] = null;
                    editIssue.zonesNL.zonesNLCopiados[6] = null;
                    editIssue.zonesNL.zonesNLCopiados[7] = null;
                    this.zonesNLCopiados.copiados4 = '';
                    this.zonesNLCopiados.copiados5 = '';
                    this.zonesNLCopiados.copiados6 = '';
                    this.zonesNLCopiados.copiados7 = '';
                    this.zonesNLCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados4 != '') {
                    editIssue.zonesNL.zonesNLCopiados[3] = this.zonesNLCopiados.copiados4;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[3] = null;
                    editIssue.zonesNL.zonesNLCopiados[4] = null;
                    editIssue.zonesNL.zonesNLCopiados[5] = null;
                    editIssue.zonesNL.zonesNLCopiados[6] = null;
                    editIssue.zonesNL.zonesNLCopiados[7] = null;
                    this.zonesNLCopiados.copiados5 = '';
                    this.zonesNLCopiados.copiados6 = '';
                    this.zonesNLCopiados.copiados7 = '';
                    this.zonesNLCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados5 != '') {
                    editIssue.zonesNL.zonesNLCopiados[4] = this.zonesNLCopiados.copiados5;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[4] = null;
                    editIssue.zonesNL.zonesNLCopiados[5] = null;
                    editIssue.zonesNL.zonesNLCopiados[6] = null;
                    editIssue.zonesNL.zonesNLCopiados[7] = null;
                    this.zonesNLCopiados.copiados6 = '';
                    this.zonesNLCopiados.copiados7 = '';
                    this.zonesNLCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados6 != '') {
                    editIssue.zonesNL.zonesNLCopiados[5] = this.zonesNLCopiados.copiados6;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[5] = null;
                    editIssue.zonesNL.zonesNLCopiados[6] = null;
                    editIssue.zonesNL.zonesNLCopiados[7] = null;
                    this.zonesNLCopiados.copiados7 = '';
                    this.zonesNLCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados7 != '') {
                    editIssue.zonesNL.zonesNLCopiados[6] = this.zonesNLCopiados.copiados7;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[6] = null;
                    editIssue.zonesNL.zonesNLCopiados[7] = null;
                    this.zonesNLCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesNLCopiados.copiados8 != '') {
                    editIssue.zonesNL.zonesNLCopiados[7] = this.zonesNLCopiados.copiados8;
                }
                else {
                    editIssue.zonesNL.zonesNLCopiados[7] = null;
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaAnalyst.analyst1 != '') {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[0] = this.zonesCoahilaAnalyst.analyst1;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[0] = null;
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[1] = null;
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[2] = null;
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[3] = null;
                    this.zonesCoahilaAnalyst.analyst2 = '';
                    this.zonesCoahilaAnalyst.analyst3 = '';
                    this.zonesCoahilaAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaAnalyst.analyst2 != '') {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[1] = this.zonesCoahilaAnalyst.analyst2;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[1] = null;
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[2] = null;
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[3] = null;
                    this.zonesCoahilaAnalyst.analyst3 = '';
                    this.zonesCoahilaAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaAnalyst.analyst3 != '') {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[2] = this.zonesCoahilaAnalyst.analyst3;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[2] = null;
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[3] = null;
                    this.zonesCoahilaAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaAnalyst.analyst4 != '') {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[3] = this.zonesCoahilaAnalyst.analyst4;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaAnalyst[3] = null;
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados1 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[0] = this.zonesCoahilaCopiados.copiados1;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[0] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[1] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[2] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[3] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[4] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[5] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[6] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                    this.zonesCoahilaCopiados.copiados2 = '';
                    this.zonesCoahilaCopiados.copiados3 = '';
                    this.zonesCoahilaCopiados.copiados4 = '';
                    this.zonesCoahilaCopiados.copiados5 = '';
                    this.zonesCoahilaCopiados.copiados6 = '';
                    this.zonesCoahilaCopiados.copiados7 = '';
                    this.zonesCoahilaCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados2 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[1] = this.zonesCoahilaCopiados.copiados2;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[1] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[2] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[3] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[4] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[5] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[6] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                    this.zonesCoahilaCopiados.copiados3 = '';
                    this.zonesCoahilaCopiados.copiados4 = '';
                    this.zonesCoahilaCopiados.copiados5 = '';
                    this.zonesCoahilaCopiados.copiados6 = '';
                    this.zonesCoahilaCopiados.copiados7 = '';
                    this.zonesCoahilaCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados3 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[2] = this.zonesCoahilaCopiados.copiados3;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[2] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[3] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[4] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[5] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[6] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                    this.zonesCoahilaCopiados.copiados4 = '';
                    this.zonesCoahilaCopiados.copiados5 = '';
                    this.zonesCoahilaCopiados.copiados6 = '';
                    this.zonesCoahilaCopiados.copiados7 = '';
                    this.zonesCoahilaCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados4 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[3] = this.zonesCoahilaCopiados.copiados4;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[3] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[4] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[5] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[6] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                    this.zonesCoahilaCopiados.copiados5 = '';
                    this.zonesCoahilaCopiados.copiados6 = '';
                    this.zonesCoahilaCopiados.copiados7 = '';
                    this.zonesCoahilaCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados5 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[4] = this.zonesCoahilaCopiados.copiados5;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[4] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[5] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[6] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                    this.zonesCoahilaCopiados.copiados6 = '';
                    this.zonesCoahilaCopiados.copiados7 = '';
                    this.zonesCoahilaCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados6 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[5] = this.zonesCoahilaCopiados.copiados6;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[5] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[6] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                    this.zonesCoahilaCopiados.copiados7 = '';
                    this.zonesCoahilaCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados7 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[6] = this.zonesCoahilaCopiados.copiados7;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[6] = null;
                    editIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                    this.zonesCoahilaCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesCoahilaCopiados.copiados8 != '') {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[7] = this.zonesCoahilaCopiados.copiados8;
                }
                else {
                    editIssue.zonesCoahila.zonesCoahilaCopiados[7] = null;
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroAnalyst.analyst1 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[0] = this.zonesQueretaroAnalyst.analyst1;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[0] = null;
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[1] = null;
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[2] = null;
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[3] = null;
                    this.zonesQueretaroAnalyst.analyst2 = '';
                    this.zonesQueretaroAnalyst.analyst3 = '';
                    this.zonesQueretaroAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroAnalyst.analyst2 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[1] = this.zonesQueretaroAnalyst.analyst2;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[1] = null;
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[2] = null;
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[3] = null;
                    this.zonesQueretaroAnalyst.analyst3 = '';
                    this.zonesQueretaroAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroAnalyst.analyst3 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[2] = this.zonesQueretaroAnalyst.analyst3;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[2] = null;
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[3] = null;
                    this.zonesQueretaroAnalyst.analyst4 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroAnalyst.analyst4 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[3] = this.zonesQueretaroAnalyst.analyst4;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroAnalyst[3] = null;
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados1 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[0] = this.zonesQueretaroCopiados.copiados1;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[0] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[1] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[2] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[3] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[4] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[5] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[6] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                    this.zonesQueretaroCopiados.copiados2 = '';
                    this.zonesQueretaroCopiados.copiados3 = '';
                    this.zonesQueretaroCopiados.copiados4 = '';
                    this.zonesQueretaroCopiados.copiados5 = '';
                    this.zonesQueretaroCopiados.copiados6 = '';
                    this.zonesQueretaroCopiados.copiados7 = '';
                    this.zonesQueretaroCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados2 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[1] = this.zonesQueretaroCopiados.copiados2;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[1] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[2] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[3] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[4] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[5] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[6] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                    this.zonesQueretaroCopiados.copiados3 = '';
                    this.zonesQueretaroCopiados.copiados4 = '';
                    this.zonesQueretaroCopiados.copiados5 = '';
                    this.zonesQueretaroCopiados.copiados6 = '';
                    this.zonesQueretaroCopiados.copiados7 = '';
                    this.zonesQueretaroCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados3 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[2] = this.zonesQueretaroCopiados.copiados3;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[2] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[3] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[4] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[5] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[6] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                    this.zonesQueretaroCopiados.copiados4 = '';
                    this.zonesQueretaroCopiados.copiados5 = '';
                    this.zonesQueretaroCopiados.copiados6 = '';
                    this.zonesQueretaroCopiados.copiados7 = '';
                    this.zonesQueretaroCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados4 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[3] = this.zonesQueretaroCopiados.copiados4;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[3] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[4] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[5] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[6] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                    this.zonesQueretaroCopiados.copiados5 = '';
                    this.zonesQueretaroCopiados.copiados6 = '';
                    this.zonesQueretaroCopiados.copiados7 = '';
                    this.zonesQueretaroCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados5 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[4] = this.zonesQueretaroCopiados.copiados5;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[4] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[5] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[6] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                    this.zonesQueretaroCopiados.copiados6 = '';
                    this.zonesQueretaroCopiados.copiados7 = '';
                    this.zonesQueretaroCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados6 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[5] = this.zonesQueretaroCopiados.copiados6;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[5] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[6] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                    this.zonesQueretaroCopiados.copiados7 = '';
                    this.zonesQueretaroCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados7 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[6] = this.zonesQueretaroCopiados.copiados7;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[6] = null;
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                    this.zonesQueretaroCopiados.copiados8 = '';
                }
                if (editIssue.zonesToAnalyst.porEstado == true && this.zonesQueretaroCopiados.copiados8 != '') {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[7] = this.zonesQueretaroCopiados.copiados8;
                }
                else {
                    editIssue.zonesQueretaro.zonesQueretaroCopiados[7] = null;
                }
                if (editIssue.critico && editIssue.critico == true) {
                }
                else {
                    editIssue.critico = false;
                }
                this._requestNewService.editService(editIssue).subscribe(function (response) {
                    swal("¡Éxito!", "Servicio editado", "success")
                        .then(function (res) {
                        window.location.reload();
                    });
                }, function (error) {
                    var errorMessage = error;
                    if (errorMessage != null) {
                        console.log(errorMessage);
                        swal("Error!", "errorMessage", "error");
                    }
                });
            }
            else {
                swal("Error!", "Asigné minimo un analista por estado", "error");
            }
        }
        else {
            swal("Error!", "Completa la información: Servicio, Subcategoría, SLA y analista", "error");
        }
    };
    IssuesNewComponent.prototype.searchCategory = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                element.category2 = element.category.toUpperCase();
                if (element.category2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.allIsues = newData;
            this.issueTabla = newData;
        }
        else {
            this.allIsues = this.oldData;
            this.issueTabla = this.oldData;
        }
    };
    IssuesNewComponent.prototype.searchService = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.allIsues = newData;
            this.issueTabla = newData;
        }
        else {
            this.allIsues = this.oldData;
            this.issueTabla = this.oldData;
        }
    };
    IssuesNewComponent.prototype.searchSubcategory = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                element.subcategory2 = element.subcategory.toUpperCase();
                if (element.subcategory2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.allIsues = newData;
            this.issueTabla = newData;
        }
        else {
            this.allIsues = this.oldData;
            this.issueTabla = this.oldData;
        }
    };
    IssuesNewComponent.prototype.searchSla = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                element.sla2 = element.sla.toString();
                if (element.sla2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.allIsues = newData;
            this.issueTabla = newData;
        }
        else {
            this.allIsues = this.oldData;
            this.issueTabla = this.oldData;
        }
    };
    IssuesNewComponent.prototype.searchSlaCallCenter = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                if (element.slaCallCenter) {
                    element.slaCallCenter2 = element.slaCallCenter.toString();
                    if (element.slaCallCenter2.indexOf(go) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.allIsues = newData;
            this.issueTabla = newData;
        }
        else {
            this.allIsues = this.oldData;
            this.issueTabla = this.oldData;
        }
    };
    IssuesNewComponent.prototype.searchActive = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                if (element.active == true) {
                    var pasado = "Si";
                }
                else {
                    var pasado = "No";
                }
                var pasado2 = pasado.toUpperCase();
                if (pasado2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.allIsues = newData;
            this.issueTabla = newData;
        }
        else {
            this.allIsues = this.oldData;
            this.issueTabla = this.oldData;
        }
    };
    IssuesNewComponent.prototype.pressZonesToAnalystGeneral = function () {
        this.zonesToAnalyst = {
            general: true,
            porEstado: false
        };
    };
    IssuesNewComponent.prototype.pressZonesToAnalystPorEstado = function () {
        this.zonesToAnalyst = {
            general: false,
            porEstado: true
        };
    };
    IssuesNewComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'answer',
            template: __webpack_require__(1056),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */], __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__["a" /* RequestNewService */]],
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__["a" /* RequestNewService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__["a" /* RequestNewService */]) === 'function' && _b) || Object])
    ], IssuesNewComponent);
    return IssuesNewComponent;
    var _a, _b;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/issuesNew.component.js.map

/***/ }),

/***/ 431:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LocalsEditComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var swal = __webpack_require__(20);
var LocalsEditComponent = (function () {
    function LocalsEditComponent(_userService) {
        this._userService = _userService;
        this.search = [];
        this.sortBy = "name";
        this.title = 'Sucursales';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.users = this.identity;
    }
    LocalsEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._userService.getLocals().subscribe(function (getLocals) {
            _this.getLocals = getLocals;
            _this.oldData = getLocals;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
        this._userService.allAreasOnly().subscribe(function (response) {
            _this.areas = response;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
    };
    LocalsEditComponent.prototype.searchname = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                element.name2 = element.name.toUpperCase();
                if (element.name2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.getLocals = newData;
        }
        else {
            this.getLocals = this.oldData;
        }
    };
    LocalsEditComponent.prototype.cambioLocal = function (newLocal) {
        if (newLocal.name == "" || newLocal.area._id == "" || newLocal.street == "" || newLocal.street == undefined || newLocal.numExt == "" || newLocal.numExt == undefined || newLocal.suburb == "" || newLocal.suburb == undefined || newLocal.state == "" || newLocal.state == undefined || newLocal.postalCode == "" || newLocal.postalCode == undefined || newLocal.municipality == "" || newLocal.municipality == undefined) {
            swal("Error!", "Complete los campos con *", "error");
        }
        else {
            this._userService.editLocal(newLocal).subscribe(function (response) {
                swal("¡Éxito!", "Sucursal editado", "success")
                    .then(function (res) {
                    window.location.reload();
                });
            }, function (error) {
                var errorMessage = error;
                if (errorMessage != null) {
                    console.log(errorMessage);
                    swal("Error!", "errorMessage", "error");
                }
            });
        }
    };
    LocalsEditComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'localsEdit',
            template: __webpack_require__(1057),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object])
    ], LocalsEditComponent);
    return LocalsEditComponent;
    var _a;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/localsEdit.component.js.map

/***/ }),

/***/ 432:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MessageComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var swal = __webpack_require__(20);
var MessageComponent = (function () {
    function MessageComponent(_userService, _requestProcesService) {
        this._userService = _userService;
        this._requestProcesService = _requestProcesService;
        this.sortBy = "dateOfReport";
        this.search = [];
        this.title = 'Mensajes pendientes';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.load = false;
    }
    MessageComponent.prototype.momentTime = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('YYYY-MM-DD / HH:mm');
        else
            return '';
    };
    MessageComponent.prototype.momentTimeDate = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('YYYY-MM-DD');
        else
            return '';
    };
    MessageComponent.prototype.momentTimeHour = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('HH:mm');
        else
            return '';
    };
    MessageComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._requestProcesService.getMessages(this.identity).subscribe(function (response) {
            if (response.length > 0) {
                response.forEach(function (element, indice) {
                    var finicial = __WEBPACK_IMPORTED_MODULE_3_moment__(element.dateOfReport);
                    var ffinal = __WEBPACK_IMPORTED_MODULE_3_moment__();
                    var minutos = ffinal.diff(finicial, 'minutes');
                    var arr = (minutos / 60).toString().split(".");
                    if (element.issue.sla) {
                        var menos = element.issue.sla - parseInt(arr[0]);
                        response[indice].restantes = menos + " h";
                    }
                    if (!element.reportBy.name)
                        element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                    if (parseInt(arr[0]) > element.issue.sla) {
                        response[indice].pasado = "red";
                    }
                    else {
                        response[indice].pasado = "green";
                    }
                    if (element.analyst) {
                        response[indice].analyst.fnames = element.analyst.fname + element.analyst.lname;
                    }
                });
                _this.dataEncuesta = response;
                _this.inProcessTable = response;
                _this.oldData = response;
                _this.oldDataTable = response;
            }
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
            }
        });
    };
    MessageComponent.prototype.searchFolio1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldData.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    MessageComponent.prototype.searchSubcategoria1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    MessageComponent.prototype.searchServicio1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    MessageComponent.prototype.searchArea1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    MessageComponent.prototype.searchEstatus1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                element.status2 = element.status.toUpperCase();
                if (element.status2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    MessageComponent.prototype.searchEncuestaComents1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                if (element.encuestaComents) {
                    element.encuestaComents2 = element.encuestaComents.toUpperCase();
                    if (element.encuestaComents2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    MessageComponent.prototype.searchReportBy1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    MessageComponent.prototype.searchAnalista1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    MessageComponent.prototype.searchVencido1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldData.forEach(function (element) {
                if (element.pasado == "red") {
                    var pasado = "Si";
                }
                else {
                    var pasado = "No";
                }
                var pasado2 = pasado.toUpperCase();
                if (pasado2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.dataEncuesta = newData;
            this.inProcessTable = newData;
        }
        else {
            this.dataEncuesta = this.oldData;
            this.inProcessTable = this.oldData;
        }
    };
    MessageComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'answer',
            template: __webpack_require__(1058),
            providers: [__WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */], __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]],
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */]) === 'function' && _b) || Object])
    ], MessageComponent);
    return MessageComponent;
    var _a, _b;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/message.component.js.map

/***/ }),

/***/ 433:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_answers_service__ = __webpack_require__(280);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ReportComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var swal = __webpack_require__(20);
var ReportComponent = (function () {
    function ReportComponent(_userService, _answersService) {
        this._userService = _userService;
        this._answersService = _answersService;
        this.title = 'Reporte General';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
    }
    ReportComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._answersService.getAnswers().subscribe(function (response) {
            _this.allAnswers = response;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
    };
    ReportComponent.prototype.prueba = function (issue) {
        this.issue = issue;
    };
    ReportComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'report',
            template: __webpack_require__(1059),
            providers: [__WEBPACK_IMPORTED_MODULE_2__services_answers_service__["a" /* AnswersService */], __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]],
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__services_answers_service__["a" /* AnswersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__services_answers_service__["a" /* AnswersService */]) === 'function' && _b) || Object])
    ], ReportComponent);
    return ReportComponent;
    var _a, _b;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/report.component.js.map

/***/ }),

/***/ 434:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_xlsx__ = __webpack_require__(332);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_file_saver__ = __webpack_require__(302);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_file_saver___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_file_saver__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RequestClosedComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var swal = __webpack_require__(20);
var RequestClosedComponent = (function () {
    function RequestClosedComponent(_userService, _requestProcesService) {
        this._userService = _userService;
        this._requestProcesService = _requestProcesService;
        this.inSolution = [];
        this.oldInSolution = [];
        this.inSolutionCallCenter = [];
        this.oldInSolutionCallCenter = [];
        this.sortBy = "dateOfReport";
        this.search = [];
        this.title = 'REQUERIMIENTOS CERRADOS';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.inSolution = [];
        this.load = false;
    }
    RequestClosedComponent.prototype.momentTime = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('YYYY-MM-DD / HH:mm');
        else
            return '';
    };
    RequestClosedComponent.prototype.momentTimeDate = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('YYYY-MM-DD');
        else
            return '';
    };
    RequestClosedComponent.prototype.momentTimeHour = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('HH:mm');
        else
            return '';
    };
    RequestClosedComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.load = true;
        if (this.identity.type != 'callCenter') {
            this.table = 2;
            this._requestProcesService.allSolucionados(this.identity).subscribe(function (response) {
                _this.oldData = response;
                _this.oldDataTable = response;
                _this.inProcessTable = response;
                response.forEach(function (element, indice) {
                    if (!element.reportBy.name)
                        element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                    if (element.analyst) {
                        response[indice].analyst.fnames = element.analyst.fname + element.analyst.lname;
                    }
                    if (element.encuesta == "") {
                        response[indice].encuesta = "No";
                    }
                    else {
                        if (!element.encuesta) {
                            response[indice].encuesta = '';
                        }
                    }
                    if (_this.identity.type == "local" || _this.identity.type == "areaManager") {
                        if (element.status == 'Solucionado' || element.status == 'SolucionadoPreventivo' || element.status == 'AutoSolucionado') {
                            response[indice].solutionTimeNew = element.solutionTime[0].day + " d " + element.solutionTime[0].hours + " h " + element.solutionTime[0].minutes + " m";
                            if ((element.solutionTime[0].day * 24) + element.solutionTime[0].hours > element.issue.sla) {
                                response[indice].pasado = "red";
                            }
                            else {
                                response[indice].pasado = "green";
                            }
                            _this.inSolution.push(response[indice]);
                            _this.oldInSolution.push(response[indice]);
                        }
                        if ((element.statusCallCenter == 'SolucionadoCallCenter' || element.statusCallCenter == 'SolucionadoPreventivoCallCenter' || element.statusCallCenter == 'AutoSolucionado')) {
                            response[indice].solutionTimeNew = element.solutionTime[0].day + " d " + element.solutionTime[0].hours + " h " + element.solutionTime[0].minutes + " m";
                            if ((element.solutionTime[0].day * 24) + element.solutionTime[0].hours > element.issue.slaCallCenter) {
                                response[indice].pasado = "red";
                            }
                            else {
                                response[indice].pasado = "green";
                            }
                            _this.inSolution.push(response[indice]);
                            _this.oldInSolution.push(response[indice]);
                        }
                    }
                    else {
                        if (element.status == 'Solucionado' || element.status == 'SolucionadoPreventivo' || element.status == 'AutoSolucionado') {
                            response[indice].solutionTimeNew = element.solutionTime[0].day + " d " + element.solutionTime[0].hours + " h " + element.solutionTime[0].minutes + " m";
                            if ((element.solutionTime[0].day * 24) + element.solutionTime[0].hours > element.issue.sla) {
                                response[indice].pasado = "red";
                            }
                            else {
                                response[indice].pasado = "green";
                            }
                            _this.inSolution.push(response[indice]);
                            _this.oldInSolution.push(response[indice]);
                        }
                        if ((element.statusCallCenter == 'SolucionadoCallCenter' || element.statusCallCenter == 'SolucionadoPreventivoCallCenter' || element.statusCallCenter == 'AutoSolucionado') && element.status) {
                            response[indice].solutionTimeNew = element.solutionTime[0].day + " d " + element.solutionTime[0].hours + " h " + element.solutionTime[0].minutes + " m";
                            if ((element.solutionTime[0].day * 24) + element.solutionTime[0].hours > element.issue.slaCallCenter) {
                                response[indice].pasado = "red";
                            }
                            else {
                                response[indice].pasado = "green";
                            }
                            _this.inSolutionCallCenter.push(response[indice]);
                            _this.oldInSolutionCallCenter.push(response[indice]);
                        }
                    }
                });
                _this.load = false;
            }, function (error) {
                _this.load = false;
                var errorMessage = error;
                if (errorMessage != null) {
                }
            });
        }
        else {
            this.table = 1;
            this._requestProcesService.allSolucionadosCallCenter2(this.identity).subscribe(function (response) {
                for (var i = 0; i < response.length; i++) {
                    if (response[i].status && (response[i].status == 'Solucionado' || response[i].status == 'SolucionadoPreventivo' || response[i].status == 'AutoSolucionado')) {
                        if (!response[i].reportBy.name)
                            response[i].reportBy.name = response[i].reportBy.fname + " " + response[i].reportBy.lname;
                        if ((response[i].solutionTime[0].day * 24) + response[i].solutionTime[0].hours > response[i].issue.sla) {
                            response[i].pasado = "red";
                        }
                        else {
                            response[i].pasado = "green";
                        }
                        if (response[i].status == 'Solucionado') {
                            response[i].solutionTimeNew = response[i].solutionTime[0].day + " d " + response[i].solutionTime[0].hours + " h " + response[i].solutionTime[0].minutes + " m";
                        }
                        if (response[i].analyst) {
                            response[i].analyst.fnames = response[i].analyst.fname + response[i].analyst.lname;
                        }
                        if (response[i].encuesta == "") {
                            response[i].encuesta = "No";
                        }
                        else {
                            if (!response[i].encuesta) {
                                response[i].encuesta = '';
                            }
                        }
                        _this.inSolution.push(response[i]);
                        _this.oldInSolution.push(response[i]);
                    }
                    else {
                        if (!response[i].reportBy.name)
                            response[i].reportBy.name = response[i].reportBy.fname + " " + response[i].reportBy.lname;
                        if ((response[i].solutionTime[0].day * 24) + response[i].solutionTime[0].hours > response[i].issue.slaCallCenter) {
                            response[i].pasado = "red";
                        }
                        else {
                            response[i].pasado = "green";
                        }
                        if (response[i].statusCallCenter == 'SolucionadoCallCenter') {
                            response[i].solutionTimeNew = response[i].solutionTime[0].day + " d " + response[i].solutionTime[0].hours + " h " + response[i].solutionTime[0].minutes + " m";
                        }
                        if (response[i].analyst) {
                            response[i].analyst.fnames = response[i].analyst.fname + response[i].analyst.lname;
                        }
                        if (response[i].encuesta == "") {
                            response[i].encuesta = "No";
                        }
                        else {
                            if (!response[i].encuesta) {
                                response[i].encuesta = '';
                            }
                        }
                        _this.inSolutionCallCenter.push(response[i]);
                        _this.oldInSolutionCallCenter.push(response[i]);
                    }
                }
                _this.load = false;
            }, function (error) {
                _this.load = false;
                var errorMessage = error;
                if (errorMessage != null) {
                }
            });
        }
        this._requestProcesService.getEncuestas(this.identity).subscribe(function (response) {
            if (response.length > 0) {
                _this.dataEncuesta = response;
            }
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
            }
        });
    };
    RequestClosedComponent.prototype.goToSearch = function (toSearch) {
        var _this = this;
        this.inSolution = [];
        this.oldData = [];
        this.inProcess = [];
        if (toSearch) {
            var go = toSearch.toUpperCase();
            var go2 = go.trim();
            this._requestProcesService.getOnlyOne({ ruta: go2 }).subscribe(function (response) {
                if (response[0]) {
                    _this.inProcess = [];
                    for (var i = 0; i < response.length; i++) {
                        if (response[i].status == "Solucionado") {
                            _this.inSolution.push(response[i]);
                            _this.oldData.push(response[i]);
                        }
                        else {
                            _this.inProcess.push(response[i]);
                        }
                    }
                    ;
                    if (response[0].status == "Solucionado") {
                        _this.inProcessTable = response;
                        _this.oldDataTable = response;
                        response.forEach(function (element, indice) {
                            var finicial = __WEBPACK_IMPORTED_MODULE_3_moment__(element.dateOfReport);
                            var ffinal = __WEBPACK_IMPORTED_MODULE_3_moment__();
                            var minutos = ffinal.diff(finicial, 'minutes');
                            var arr = (minutos / 60).toString().split(".");
                            var sums = 0;
                            for (var i = 0; i < parseInt(arr[0]); i++) {
                                var sums = sums + 60;
                            }
                            ;
                            response[indice].tiempos = arr[0] + ' h ' + (minutos - sums).toString() + ' m';
                            if (element.issue.sla) {
                                var menos = element.issue.sla - parseInt(arr[0]);
                                response[indice].restantes = menos + " h";
                            }
                            if (!element.reportBy.name)
                                element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                        });
                    }
                    else {
                        swal("Error!", "El Timcket no se ha cerrado", "error");
                    }
                }
                else {
                    swal("Error!", "No se encontraron datos", "error");
                }
            });
        }
        else {
            this._requestProcesService.allSolucionados(this.identity).subscribe(function (response) {
                _this.inSolution = response;
                _this.oldData = response;
                _this.inProcessTable = response;
                _this.oldDataTable = response;
                response.forEach(function (element) {
                    if (!element.reportBy.name)
                        element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                });
            }, function (error) {
                var errorMessage = error;
                if (errorMessage != null) {
                    // var body = JSON.parse(error._body)
                    swal("Error!", "errrrrrr", "error");
                }
            });
        }
    };
    RequestClosedComponent.prototype.searchFolio = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldInSolution.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldInSolution;
        }
    };
    RequestClosedComponent.prototype.searchNumSerieCall = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldInSolution.forEach(function (element) {
                if (element.numSerie) {
                    element.numSerie2 = element.numSerie.toUpperCase();
                    if (element.numSerie2.indexOf(go) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolutionCallCenter = newData;
        }
        else {
            this.inSolutionCallCenter = this.oldInSolution;
        }
    };
    RequestClosedComponent.prototype.searchNumSerie = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldInSolution.forEach(function (element) {
                if (element.numSerie) {
                    element.numSerie2 = element.numSerie.toUpperCase();
                    if (element.numSerie2.indexOf(go) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldInSolution;
        }
    };
    RequestClosedComponent.prototype.searchFolioCallCenter = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldInSolutionCallCenter.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolutionCallCenter = newData;
        }
        else {
            this.inSolutionCallCenter = this.oldInSolutionCallCenter;
        }
    };
    RequestClosedComponent.prototype.searchSubcategoria = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolution.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldInSolution;
        }
    };
    RequestClosedComponent.prototype.searchSubcategoriaCallCenter = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolutionCallCenter.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolutionCallCenter = newData;
        }
        else {
            this.inSolutionCallCenter = this.oldInSolutionCallCenter;
        }
    };
    RequestClosedComponent.prototype.searchServicio = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolution.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldInSolution;
        }
    };
    RequestClosedComponent.prototype.searchServicioCallCenter = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolutionCallCenter.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolutionCallCenter = newData;
        }
        else {
            this.inSolutionCallCenter = this.oldInSolutionCallCenter;
        }
    };
    RequestClosedComponent.prototype.searchArea = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolution.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldInSolution;
        }
    };
    RequestClosedComponent.prototype.searchReportByarea = function (toSearch) {
        var newData = [];
        if (toSearch != "") {
            toSearch = parseInt(toSearch);
            this.oldInSolution.forEach(function (element) {
                if (element && element.reportBy && element.reportBy.area && element.reportBy.area.name) {
                    element.issueeee = element.reportBy.area.name;
                    if (element.issueeee == toSearch) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldInSolution;
        }
    };
    RequestClosedComponent.prototype.searchAreaCallCenter = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolutionCallCenter.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolutionCallCenter = newData;
        }
        else {
            this.inSolutionCallCenter = this.oldInSolutionCallCenter;
        }
    };
    RequestClosedComponent.prototype.searchEstatus = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolution.forEach(function (element) {
                element.status2 = element.status.toUpperCase();
                if (element.status2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldInSolution;
        }
    };
    RequestClosedComponent.prototype.searchEstatusCallCenter = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolutionCallCenter.forEach(function (element) {
                element.status2 = element.statusCallCenter.toUpperCase();
                if (element.status2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolutionCallCenter = newData;
        }
        else {
            this.inSolutionCallCenter = this.oldInSolutionCallCenter;
        }
    };
    RequestClosedComponent.prototype.searchEncuestaComents = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolution.forEach(function (element) {
                if (element.encuestaComents) {
                    element.encuestaComents2 = element.encuestaComents.toUpperCase();
                    if (element.encuestaComents2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolution = newData;
            this.inProcessTable = newData;
        }
        else {
            this.inSolution = this.oldInSolution;
        }
    };
    RequestClosedComponent.prototype.searchEncuestaComentsCallCenter = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolutionCallCenter.forEach(function (element) {
                if (element.encuestaComents) {
                    element.encuestaComents2 = element.encuestaComents.toUpperCase();
                    if (element.encuestaComents2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolutionCallCenter = newData;
        }
        else {
            this.inSolutionCallCenter = this.oldInSolutionCallCenter;
        }
    };
    RequestClosedComponent.prototype.searchReportBy = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolution.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldInSolution;
        }
    };
    RequestClosedComponent.prototype.searchReportByCallCenter = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolutionCallCenter.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolutionCallCenter = newData;
        }
        else {
            this.inSolutionCallCenter = this.oldInSolutionCallCenter;
        }
    };
    RequestClosedComponent.prototype.searchAnalista = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolution.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldInSolution;
        }
    };
    RequestClosedComponent.prototype.searchstatusExtra = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolution.forEach(function (element) {
                if (element.statusExtra) {
                    element.statusExtra2 = element.statusExtra.toUpperCase();
                    if (element.statusExtra2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldInSolution;
        }
    };
    RequestClosedComponent.prototype.searchAnalistaCallCenter = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolutionCallCenter.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inSolutionCallCenter = newData;
        }
        else {
            this.inSolutionCallCenter = this.oldInSolutionCallCenter;
        }
    };
    RequestClosedComponent.prototype.searchVencido = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolution.forEach(function (element) {
                if (element.pasado == "red") {
                    var pasado = "Si";
                }
                else {
                    var pasado = "No";
                }
                var pasado2 = pasado.toUpperCase();
                if (pasado2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldInSolution;
        }
    };
    RequestClosedComponent.prototype.searchVencidoCallCenter = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldInSolutionCallCenter.forEach(function (element) {
                if (element.pasado == "red") {
                    var pasado = "Si";
                }
                else {
                    var pasado = "No";
                }
                var pasado2 = pasado.toUpperCase();
                if (pasado2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolutionCallCenter = newData;
        }
        else {
            this.inSolutionCallCenter = this.oldInSolutionCallCenter;
        }
    };
    RequestClosedComponent.prototype.searchEncuesta = function (toSearch) {
        var newData = [];
        if (toSearch != "") {
            this.oldInSolution.forEach(function (element) {
                var toSearch2 = element.encuesta.toUpperCase();
                if (toSearch2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolution = newData;
        }
        else {
            this.inSolution = this.oldInSolution;
        }
    };
    RequestClosedComponent.prototype.searchEncuestaCallCenter = function (toSearch) {
        var newData = [];
        if (toSearch != "") {
            this.oldInSolutionCallCenter.forEach(function (element) {
                var toSearch2 = element.encuesta.toUpperCase();
                if (toSearch2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inSolutionCallCenter = newData;
        }
        else {
            this.inSolutionCallCenter = this.oldInSolutionCallCenter;
        }
    };
    RequestClosedComponent.prototype.exportFunction = function (inSolution) {
        var _this = this;
        this.load = true;
        var EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';
        var EXCEL_EXTENSION = '.xlsx';
        if (this.table == 1) {
            var data = [];
            var name = 'timcketsSolucionadosCallCenter';
            inSolution.forEach(function (element, index) {
                data.push({ '#': index + 1, 'nombreComun': element.codeRequest, 'fechaInicio': _this.momentTimeDate(element.dateOfReport), 'hora': _this.momentTimeHour(element.dateOfReport), 'subcategoria': ((element.subCategory) ? element.subCategory : ''), 'servicio': ((element.service) ? element.service : ''), 'numSerie': ((element.numSerie) ? element.numSerie : ''), 'departamento': ((element.issue.category) ? element.issue.category : ''), 'slaCC': ((element.issue.slaCallCenter) ? element.issue.slaCallCenter : ''), 'tiempoSolucion': ((element.solutionTimeNew) ? element.solutionTimeNew : ''), 'Estatus': ((element.statusCallCenter) ? element.statusCallCenter : '') + ' ' + ((element.solutionBySucursal && element.solutionBySucursal == 'si') ? 'Por: Sucursal' : '') + ' ' + ((element.reaperturado && element.reaperturado[0]) ? 'Reaperturado' : ''), 'reportadoPor': ((element.reportBy.name) ? element.reportBy.name : '') + ((element.reportByAm) ? ' - ' + element.manager : ''), 'area': ((element.reportBy.area.name) ? element.reportBy.area.name : ''), 'analista': ((element.analyst) ? element.analyst.fnames : ''), 'fechaSolucionCC': ((element.dateSolutionCallCenter) ? _this.momentTimeDate(element.dateSolutionCallCenter) : _this.momentTimeDate(element.dateSolution)), 'hora2': ((element.dateSolutionCallCenter) ? _this.momentTimeHour(element.dateSolutionCallCenter) : _this.momentTimeHour(element.dateSolution)), 'vencido': ((element.pasado && element.pasado == 'red') ? 'Si' : ''), 'encuesta': ((element.encuesta) ? element.encuesta : ''), 'comentarioEncuesta': ((element.encuestaComents) ? element.encuestaComents : '') });
            });
        }
        else if (this.table == 2) {
            var data = [];
            var name = 'timcketsSolucionados';
            if ((this.identity.type == 'admin' || this.identity.type == 'superAdmin') && (this.identity.department._id == '62f2c60e5b1ab6024e9fdfb6')) {
                inSolution.forEach(function (element, index) {
                    data.push({ '#': index + 1, 'nombreComun': element.codeRequest, 'estatusExtra': (element.statusExtra) ? element.statusExtra : '', 'estatusExtraMotivo': (element.statusExtraMotivo) ? element.statusExtraMotivo : '', 'fechaInicio': _this.momentTimeDate(element.dateOfReport), 'hora': _this.momentTimeHour(element.dateOfReport), 'subcategoria': ((element.subCategory) ? element.subCategory : ''), 'servicio': ((element.service) ? element.service : ''), 'numSerie': ((element.numSerie) ? element.numSerie : ''), 'departamento': ((element.issue.category) ? element.issue.category : ''), 'sla': ((element.issue.sla) ? element.issue.sla : ''), 'tiempoSolucion': ((element.solutionTimeNew) ? element.solutionTimeNew : ''), 'Estatus': (((!element.statusCallCenter && element.statusCallCenter != 'SolucionadoCallCenter' && element.statusCallCenter != 'SolucionadoPreventivoCallCenter' && element.statusCallCenter != 'AutoSolucionado') || (element.statusCallCenter && element.status && (element.status == 'Solucionado' || element.status == 'SolucionadoPreventivo' || element.status == 'AutoSolucionado'))) ? element.status : '') + ((element.statusCallCenter && (element.statusCallCenter == 'SolucionadoCallCenter' || element.statusCallCenter == 'SolucionadoPreventivoCallCenter' || element.statusCallCenter == 'AutoSolucionado') ? element.statusCallCenter : '')) + ' ' + ((element.solutionBySucursal && element.solutionBySucursal == 'si') ? 'Por: Sucursal' : '') + ' ' + ((element.reaperturado && element.reaperturado[0]) ? 'Reaperturado' : ''), 'reportadoPor': ((element.reportBy.name) ? element.reportBy.name : '') + ((element.reportByAm) ? ' - ' + element.manager : ''), 'area': ((element.reportBy.area.name) ? element.reportBy.area.name : ''), 'analista': ((element.analyst) ? element.analyst.fnames : ''), 'fechaSolucion': ((element.dateSolution) ? _this.momentTimeDate(element.dateSolution) : _this.momentTimeDate(element.dateSolutionCallCenter)), 'hora2': ((element.dateSolution) ? _this.momentTimeHour(element.dateSolution) : _this.momentTimeHour(element.dateSolutionCallCenter)), 'vencido': ((element.pasado && element.pasado == 'red') ? 'Si' : ''), 'encuesta': ((element.encuesta) ? element.encuesta : ''), 'comentarioEncuesta': ((element.encuestaComents) ? element.encuestaComents : '') });
                });
            }
            else {
                inSolution.forEach(function (element, index) {
                    data.push({ '#': index + 1, 'nombreComun': element.codeRequest, 'fechaInicio': _this.momentTimeDate(element.dateOfReport), 'hora': _this.momentTimeHour(element.dateOfReport), 'subcategoria': ((element.subCategory) ? element.subCategory : ''), 'servicio': ((element.service) ? element.service : ''), 'numSerie': ((element.numSerie) ? element.numSerie : ''), 'departamento': ((element.issue.category) ? element.issue.category : ''), 'sla': ((element.issue.sla) ? element.issue.sla : ''), 'tiempoSolucion': ((element.solutionTimeNew) ? element.solutionTimeNew : ''), 'Estatus': (((!element.statusCallCenter && element.statusCallCenter != 'SolucionadoCallCenter' && element.statusCallCenter != 'SolucionadoPreventivoCallCenter' && element.statusCallCenter != 'AutoSolucionado') || (element.statusCallCenter && element.status && (element.status == 'Solucionado' || element.status == 'SolucionadoPreventivo' || element.status == 'AutoSolucionado'))) ? element.status : '') + ((element.statusCallCenter && (element.statusCallCenter == 'SolucionadoCallCenter' || element.statusCallCenter == 'SolucionadoPreventivoCallCenter' || element.statusCallCenter == 'AutoSolucionado') ? element.statusCallCenter : '')) + ' ' + ((element.solutionBySucursal && element.solutionBySucursal == 'si') ? 'Por: Sucursal' : '') + ' ' + ((element.reaperturado && element.reaperturado[0]) ? 'Reaperturado' : ''), 'reportadoPor': ((element.reportBy.name) ? element.reportBy.name : '') + ((element.reportByAm) ? ' - ' + element.manager : ''), 'area': ((element.reportBy.area.name) ? element.reportBy.area.name : ''), 'analista': ((element.analyst) ? element.analyst.fnames : ''), 'fechaSolucion': ((element.dateSolution) ? _this.momentTimeDate(element.dateSolution) : _this.momentTimeDate(element.dateSolutionCallCenter)), 'hora2': ((element.dateSolution) ? _this.momentTimeHour(element.dateSolution) : _this.momentTimeHour(element.dateSolutionCallCenter)), 'vencido': ((element.pasado && element.pasado == 'red') ? 'Si' : ''), 'encuesta': ((element.encuesta) ? element.encuesta : ''), 'comentarioEncuesta': ((element.encuestaComents) ? element.encuestaComents : '') });
                });
            }
        }
        else if (this.table == 3) {
            var data = [];
            var name = 'timcketsSolucionadosCallCenter';
            inSolution.forEach(function (element, index) {
                data.push({ '#': index + 1, 'nombreComun': element.codeRequest, 'fechaInicio': _this.momentTimeDate(element.dateOfReport), 'hora': _this.momentTimeHour(element.dateOfReport), 'subcategoria': ((element.subCategory) ? element.subCategory : ''), 'servicio': ((element.service) ? element.service : ''), 'numSerie': ((element.numSerie) ? element.numSerie : ''), 'departamento': ((element.issue.category) ? element.issue.category : ''), 'sla': ((element.issue.sla) ? element.issue.sla : ''), 'tiempoSolucion': ((element.solutionTimeNew) ? element.solutionTimeNew : ''), 'Estatus': ((element.statusCallCenter) ? element.statusCallCenter : '') + ' ' + ((element.solutionBySucursal && element.solutionBySucursal == 'si') ? 'Por: Sucursal' : '') + ' ' + ((element.reaperturado && element.reaperturado[0]) ? 'Reaperturado' : ''), 'reportadoPor': ((element.reportBy.name) ? element.reportBy.name : '') + ((element.reportByAm) ? ' - ' + element.manager : ''), 'area': ((element.reportBy.area.name) ? element.reportBy.area.name : ''), 'analista': ((element.analyst) ? element.analyst.fnames : ''), 'fechaSolucionCC': ((element.dateSolutionCallCenter) ? _this.momentTimeDate(element.dateSolutionCallCenter) : _this.momentTimeDate(element.dateSolution)), 'hora2': ((element.dateSolutionCallCenter) ? _this.momentTimeHour(element.dateSolutionCallCenter) : _this.momentTimeHour(element.dateSolution)), 'vencido': ((element.pasado && element.pasado == 'red') ? 'Si' : ''), 'encuesta': ((element.encuesta) ? element.encuesta : ''), 'comentarioEncuesta': ((element.encuestaComents) ? element.encuestaComents : '') });
            });
        }
        setTimeout(function () {
            if (data) {
                var worksheet = __WEBPACK_IMPORTED_MODULE_4_xlsx__["a" /* utils */].json_to_sheet(data);
                var workbook = {
                    Sheets: {
                        'solucionados': worksheet
                    },
                    SheetNames: ['solucionados']
                };
                var excelBuffer = __WEBPACK_IMPORTED_MODULE_4_xlsx__["b" /* write */](workbook, { bookType: 'xlsx', type: 'array' });
                var blobData = new Blob([excelBuffer], { type: EXCEL_TYPE });
                __WEBPACK_IMPORTED_MODULE_5_file_saver__["saveAs"](blobData, name);
                _this.load = false;
            }
            _this.load = false;
        }, 2000);
    };
    RequestClosedComponent.prototype.changeStatusExtra = function (issue, type) {
        this.statusEx = issue;
        this.statusExtype = type;
    };
    RequestClosedComponent.prototype.daleStatus = function (issue, type) {
        var _this = this;
        issue.statusExtra = type;
        this.load = true;
        issue.analyst = this.identity._id;
        issue.statusExtraBy = this.identity._id;
        this._requestProcesService.statusExtra(issue).subscribe(function (response) {
            _this.load = false;
            swal("Éxito!", "éxito", "success")
                .then(function (res) {
                window.location.reload();
            });
        }, function (error) {
            _this.load = false;
            var errorMessage = error;
            if (errorMessage != null) {
                var body = JSON.parse(error._body);
                swal("Error!", body.message, "error");
            }
        });
    };
    RequestClosedComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'requestClosed',
            template: __webpack_require__(1060),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */], __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */]) === 'function' && _b) || Object])
    ], RequestClosedComponent);
    return RequestClosedComponent;
    var _a, _b;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/requestClosed.component.js.map

/***/ }),

/***/ 435:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__(413);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_requestProces_service__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_requestNew_service__ = __webpack_require__(134);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_global__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_moment__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RequestDetailComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var swal = __webpack_require__(20);
var async = __webpack_require__(281);
var RequestDetailComponent = (function () {
    function RequestDetailComponent(route, _userService, _requestProcesService, _requestNewService) {
        var _this = this;
        this.route = route;
        this._userService = _userService;
        this._requestProcesService = _requestProcesService;
        this._requestNewService = _requestNewService;
        this.url = __WEBPACK_IMPORTED_MODULE_5__services_global__["a" /* GLOBAL */].url;
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.route.params.subscribe(function (params) {
            _this.ruta = params['id'];
        });
        this.title = 'Requerimiento  ' + this.ruta;
        this.load = false;
        this.getImg = null;
        this.getEvent = null;
        this.encuesta = {
            cinco: false,
            cuatro: false,
            tres: false,
            dos: false,
            uno: false
        };
        this.menus = [];
        this.cantBolsasComprobantes = [];
        this.kds = [];
        this.medidas = [];
        this.pos = [];
        this.llenado = false;
        this.encuestaComents = '';
    }
    RequestDetailComponent.prototype.momentTime = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_6_moment__(date).format('YYYY-MM-DD / HH:mm');
        else
            return '';
    };
    RequestDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._requestProcesService.getOneRequest({ ruta: this.ruta }).subscribe(function (response) {
            if (response[0].imagenes) {
                if (response[0].imagenes[0]) {
                    response[0].imagenes.forEach(function (element, i) {
                        if (element.ext) {
                            if (element.ext == 'png' || element.ext == 'PNG' || element.ext == 'jpg' || element.ext == 'jpeg' || element.ext == 'gif') {
                                response[0].imagenes[i].permiso = "si";
                            }
                        }
                        else {
                            response[0].imagenes[i].permiso = "si";
                        }
                    });
                }
            }
            if (response[0].afterFiles) {
                if (response[0].afterFiles[0]) {
                    response[0].afterFiles2 = [];
                    response[0].afterFiles.forEach(function (element, i) {
                        if (element) {
                            if (element.ext) {
                                if (element.ext == 'png' || element.ext == 'PNG' || element.ext == 'jpg' || element.ext == 'jpeg' || element.ext == 'gif') {
                                    response[0].afterFiles[i].permiso = "si";
                                }
                            }
                            else {
                                response[0].afterFiles[i].permiso = "si";
                            }
                            response[0].afterFiles2.push(element);
                        }
                    });
                }
            }
            if (!response[0].reportBy.name)
                response[0].reportBy.name = response[0].reportBy.fname + " " + response[0].reportBy.lname;
            _this.issue = response[0];
            if (_this.issue.menuboards) {
                if (_this.issue.menuboards.promopanel == true) {
                    _this.menus.push(" 1- Promo panel");
                }
                if (_this.issue.menuboards.panaderia == true) {
                    _this.menus.push(" 2- Panaderia");
                }
                if (_this.issue.menuboards.bebidasCalientes == true) {
                    _this.menus.push(" 3- Bebidas Calientes");
                }
                if (_this.issue.menuboards.babidasFrias == true) {
                    _this.menus.push(" 4- Bebidas Frias");
                }
                if (_this.issue.menuboards.dasayunosLunch == true) {
                    _this.menus.push(" 5- Desayunos | Lunch");
                }
            }
            if (_this.issue.cantBolsasComprobantes) {
                if (_this.issue.cantBolsasComprobantes.bolsas == true) {
                    _this.cantBolsasComprobantes.push(" 100 bolsas");
                }
                if (_this.issue.cantBolsasComprobantes.comprobantes == true) {
                    _this.cantBolsasComprobantes.push(" 100 Comprobantes");
                }
            }
            if (_this.issue.kds) {
                if (_this.issue.kds.expo1 == true) {
                    _this.kds.push(" Expo1(Lobby/Ventanilla peatones)");
                }
                if (_this.issue.kds.expo2 == true) {
                    _this.kds.push(" Expo2(DriveThru)");
                }
                if (_this.issue.kds.sandwiches == true) {
                    _this.kds.push(" Sándwiches");
                }
                if (_this.issue.kds.bebidasCalientes == true) {
                    _this.kds.push(" Bebidas calientes(Expreso y Bunn)");
                }
                if (_this.issue.kds.bebidasFrias == true) {
                    _this.kds.push(" Bebidas frías(Taylor y iMix)");
                }
            }
            if (_this.issue.pos) {
                if (_this.issue.pos.fcRight == true) {
                    _this.pos.push(" FC Right");
                }
                if (_this.issue.pos.fcLeft == true) {
                    _this.pos.push(" FC Left");
                }
                if (_this.issue.pos.dtOt == true) {
                    _this.pos.push(" DT OT");
                }
                if (_this.issue.pos.dtOt2 == true) {
                    _this.pos.push(" DT OT2");
                }
                if (_this.issue.pos.dtCashier == true) {
                    _this.pos.push(" DT Cashier");
                }
            }
            if (_this.issue.medidas) {
                if (_this.issue.medidas.altura != "") {
                    _this.medidas.push(" Altura: " + _this.issue.medidas.altura);
                }
                if (_this.issue.medidas.ancho != "") {
                    _this.medidas.push(" Ancho: " + _this.issue.medidas.ancho);
                }
                if (_this.issue.medidas.profundidad != "") {
                    _this.medidas.push(" Profundidad: " + _this.issue.medidas.profundidad);
                }
            }
            _this.permiso = "";
            if (_this.issue.issueMore.emailToSendAnalist.indexOf(_this.identity._id) == -1) {
                _this.permiso = "no";
            }
            else {
                _this.permiso = "si";
            }
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                var body = JSON.parse(error._body);
                swal("Error!", body.message, "error");
            }
        });
    };
    RequestDetailComponent.prototype.getImgs = function (issue) {
        this.getImg = issue;
        this.getEvent = null;
        this.getAfterFile = null;
    };
    RequestDetailComponent.prototype.getAfterFiles = function (issue) {
        this.getAfterFile = issue;
        this.getEvent = null;
        this.getImg = null;
    };
    RequestDetailComponent.prototype.getDetalle = function (issue) {
        this.getImg = null;
        this.getAfterFile = null;
        this.getEvent = null;
    };
    RequestDetailComponent.prototype.getEvento = function (issue) {
        var _this = this;
        this.getEvent = issue;
        this.getImg = null;
        this.getAfterFile = null;
        this._requestProcesService.eventos(issue).subscribe(function (response) {
            _this.eventsAnalyst = response[0];
            _this.eventsCopy = response[1];
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                swal("Error!", "errorMessage", "error");
            }
        });
    };
    RequestDetailComponent.prototype.asignar = function (issue) {
        var _this = this;
        swal("¿Quieres asignarte el timcket?", {
            icon: 'warning',
            dangerMode: true,
            buttons: {
                cancel: "NO",
                catch: {
                    text: "Asignármelo",
                    value: true,
                },
                defeat: false,
            },
        })
            .then(function (value) {
            if (!value) {
            }
            else {
                _this.load = true;
                issue.analyst = _this.identity._id;
                _this._requestProcesService.asign(issue).subscribe(function (response) {
                    _this.load = false;
                    swal("Éxito!", "Asignado con éxito", "success")
                        .then(function (res) {
                        window.location.reload();
                    });
                }, function (error) {
                    var errorMessage = error;
                    if (errorMessage != null) {
                        var body = JSON.parse(error._body);
                        swal("Error!", body.message, "error");
                    }
                });
            }
        });
    };
    RequestDetailComponent.prototype.asignarCallCenter = function (issue) {
        var _this = this;
        this.load = true;
        if (issue.issueMore && issue.issueMore.subcategory && issue.issueMore.subcategory != '' && issue.motivoAsignadoCallCenter && issue.motivoAsignadoCallCenter != '') {
            if (issue.issueMore.subcategory != issue.subCategory) {
                issue.changeOriginIssue = issue.issue;
                this.subCategorys.forEach(function (element) {
                    if (element.subcategory == issue.issueMore.subcategory) {
                        issue.issue = element._id;
                        issue.issueMore = element;
                        issue.service = element.service;
                        issue.subCategory = element.subcategory;
                        issue.department = element.departments;
                    }
                });
            }
            else {
                issue.issue = issue.issue._id;
                issue.changeOriginIssue = undefined;
            }
            this._requestProcesService.asignCallCenter(issue).subscribe(function (response) {
                _this.load = false;
                swal("Éxito!", "Asignado con éxito", "success")
                    .then(function (res) {
                    window.location.reload();
                });
            }, function (error) {
                _this.load = false;
                var errorMessage = error;
                if (errorMessage != null) {
                    swal("Error!", "errorMessage", "error");
                }
            });
        }
        else {
            swal("Error!", "Completa los campos", "error");
            this.load = false;
        }
    };
    RequestDetailComponent.prototype.getReAsignar = function (issue) {
        this.issue = issue;
        this.issue.newAnalist = this.issue.analyst._id;
    };
    RequestDetailComponent.prototype.reAsignar = function (issue) {
        var _this = this;
        swal("¿Quieres Re-Asignarte el timcket?", {
            icon: 'warning',
            dangerMode: true,
            buttons: {
                cancel: "NO",
                catch: {
                    text: "Re-Asignar",
                    value: true,
                },
                defeat: false,
            },
        })
            .then(function (value) {
            if (!value) {
            }
            else {
                _this.load = true;
                issue.analyst = issue.newAnalist;
                _this._requestProcesService.reAsign(issue).subscribe(function (response) {
                    _this.load = false;
                    swal("Éxito!", "Re-Asignado con éxito", "success")
                        .then(function (res) {
                        window.location.reload();
                    });
                }, function (error) {
                    var errorMessage = error;
                    if (errorMessage != null) {
                        var body = JSON.parse(error._body);
                        swal("Error!", body.message, "error");
                    }
                });
            }
        });
    };
    RequestDetailComponent.prototype.sendMesage = function (issue) {
        var _this = this;
        if (!issue.note) {
            swal("Error!", "Escriba una nota", "error");
        }
        else {
            swal("¿Quieres enviar el mensaje?", {
                icon: 'warning',
                dangerMode: true,
                buttons: {
                    cancel: "NO",
                    catch: {
                        text: "Enviar",
                        value: true,
                    },
                    defeat: false,
                },
            })
                .then(function (value) {
                if (!value) {
                }
                else {
                    _this.load = true;
                    if (_this.identity.name == undefined || _this.identity.name == '')
                        issue.reportBy.name = _this.identity.fname + " " + _this.identity.lname;
                    issue.typeNote = "public";
                    var thisAsync_1 = _this;
                    var issues_1 = issue;
                    async.waterfall([
                        function step1(next) {
                            var imgArray = [];
                            if (thisAsync_1.fileToUpload1) {
                                imgArray.push(thisAsync_1.fileToUpload1);
                            }
                            if (thisAsync_1.fileToUpload2) {
                                imgArray.push(thisAsync_1.fileToUpload2);
                            }
                            if (thisAsync_1.fileToUpload3) {
                                imgArray.push(thisAsync_1.fileToUpload3);
                            }
                            if (thisAsync_1.fileToUpload4) {
                                imgArray.push(thisAsync_1.fileToUpload4);
                            }
                            if (thisAsync_1.fileToUpload5) {
                                imgArray.push(thisAsync_1.fileToUpload5);
                            }
                            var imgArrays = imgArray;
                            next(null, imgArrays);
                        },
                        function step2(imgArray, next) {
                            var imgNames = [];
                            if (thisAsync_1.fileToUpload1) {
                                if (imgArray.length > 0) {
                                    for (var i = 0; i < imgArray.length; i++) {
                                        thisAsync_1.makeFileRequest(thisAsync_1.url + "requests/uploadImageAfter/" + thisAsync_1.identity._id, [], imgArray[i]).then(function (result) {
                                            imgNames.push(result);
                                        });
                                    }
                                    next(null, imgArray, imgNames);
                                }
                                else {
                                    next(null, imgArray, imgNames);
                                }
                            }
                            else {
                                next(null, imgArray, imgNames);
                            }
                        },
                        function step3(imgArray, imgNames, next) {
                            if (thisAsync_1.fileToUpload1) {
                                if (thisAsync_1.issue.afterFiles) {
                                    if (thisAsync_1.issue.afterFiles[0]) {
                                        thisAsync_1.issue.afterFiles.push(imgNames[0]);
                                        if (imgNames[1]) {
                                            thisAsync_1.issue.afterFiles.push(imgNames[1]);
                                        }
                                        if (imgNames[2]) {
                                            thisAsync_1.issue.afterFiles.push(imgNames[2]);
                                        }
                                        if (imgNames[3]) {
                                            thisAsync_1.issue.afterFiles.push(imgNames[3]);
                                        }
                                        if (imgNames[4]) {
                                            thisAsync_1.issue.afterFiles.push(imgNames[4]);
                                        }
                                        next(null, imgArray, imgNames);
                                    }
                                    else {
                                        thisAsync_1.issue.afterFiles = imgNames;
                                        next(null, imgArray, imgNames);
                                    }
                                }
                                else {
                                    thisAsync_1.issue.afterFiles = imgNames;
                                    next(null, imgArray, imgNames);
                                }
                            }
                            else {
                                next(null, imgArray, imgNames);
                            }
                        },
                        function step3(imgArray, imgNames, next) {
                            setTimeout(function () {
                                if (imgNames.length == imgArray.length) {
                                    thisAsync_1._requestProcesService.addNote(issues_1).subscribe(function (response) {
                                        thisAsync_1.load = false;
                                        swal("¡Éxito!", "mensaje  " + "  enviado", "success")
                                            .then(function (res) {
                                            window.location.reload();
                                        });
                                    }, function (error) {
                                        var errorMessage = error;
                                        if (errorMessage != null) {
                                            swal("Error!", "errorMessage", "error");
                                            window.location.reload();
                                        }
                                    });
                                }
                            }, 2000);
                        }
                    ], function (err) {
                        console.log(err);
                    });
                }
            });
        }
    };
    RequestDetailComponent.prototype.addPendiente = function (issue) {
        this.issue = issue;
    };
    RequestDetailComponent.prototype.addPendienteCallCenter = function (issue) {
        this.issue = issue;
    };
    RequestDetailComponent.prototype.pendiente = function (issue) {
        var _this = this;
        if (!issue.pending) {
            swal("Error!", "Escriba el motivo", "error");
        }
        else {
            this.load = true;
            this._requestProcesService.addPending(issue).subscribe(function (response) {
                _this.load = false;
                swal("¡Éxito!", "Marcado como pendiente", "success")
                    .then(function (res) {
                    window.location.reload();
                });
            }, function (error) {
                var errorMessage = error;
                if (errorMessage != null) {
                    swal("Error!", "errorMessage", "error");
                }
            });
        }
    };
    RequestDetailComponent.prototype.pendienteCallCenter = function (issue) {
        var _this = this;
        if (!issue.pendingCallCenter) {
            swal("Error!", "Escriba el motivo", "error");
        }
        else {
            this.load = true;
            this._requestProcesService.addPendingCallCenter(issue).subscribe(function (response) {
                _this.load = false;
                swal("¡Éxito!", "Marcado como pendiente", "success")
                    .then(function (res) {
                    window.location.reload();
                });
            }, function (error) {
                var errorMessage = error;
                if (errorMessage != null) {
                    swal("Error!", "errorMessage", "error");
                }
            });
        }
    };
    RequestDetailComponent.prototype.addSolucionado = function (issue) {
        this.issue = issue;
    };
    RequestDetailComponent.prototype.addSolucionadoCallCenter = function (issue) {
        this.issue = issue;
    };
    RequestDetailComponent.prototype.buttonAsignarAnalista = function (issue) {
        var _this = this;
        this.issueAsignar = issue;
        this._userService.getDepartments(this.identity).subscribe(function (response) {
            _this.departments = response;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
        var department = { service: this.issueAsignar.issueMore.departments };
        this._requestNewService.searchService(department).subscribe(function (response) {
            _this.service = [];
            response.forEach(function (element) {
                if (element._id) {
                    _this.service.push(element);
                }
            });
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                swal("Error!", "errorMessage", "error");
            }
        });
        var service = { service: this.issueAsignar.issueMore.service };
        this._requestNewService.searchSubCategoria(service).subscribe(function (response) {
            _this.subCategorys = response;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                swal("Error!", "errorMessage", "error");
            }
        });
    };
    RequestDetailComponent.prototype.searchServices = function (issue) {
        var _this = this;
        this.issue.issueMore.service = "";
        this.issue.issueMore.subcategory = "";
        var department = { service: issue };
        this._requestNewService.searchService(department).subscribe(function (response) {
            _this.service = [];
            response.forEach(function (element) {
                if (element._id) {
                    _this.service.push(element);
                }
            });
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                swal("Error!", "errorMessage", "error");
            }
        });
    };
    RequestDetailComponent.prototype.searchsubCategory = function (issue) {
        var _this = this;
        this.issue.issueMore.subcategory = "";
        var service = { service: this.issueAsignar.issueMore.service };
        this._requestNewService.searchSubCategoria(service).subscribe(function (response) {
            _this.subCategorys = response;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                swal("Error!", "errorMessage", "error");
            }
        });
    };
    RequestDetailComponent.prototype.subCategoryFinish = function (issue) {
    };
    RequestDetailComponent.prototype.solucionado = function (issue) {
        var _this = this;
        if (!issue.solution) {
            swal("Error!", "Escriba el motivo", "error");
        }
        else {
            swal("¿Quieres marcar como solucionado?", {
                icon: 'warning',
                dangerMode: true,
                buttons: {
                    cancel: "NO",
                    catch: {
                        text: "Solucionado",
                        value: true,
                    },
                    defeat: false,
                },
            })
                .then(function (value) {
                if (!value) {
                }
                else {
                    if (_this.identity.type == "local") {
                        issue.solutionBySucursal = "si";
                    }
                    else {
                        issue.solutionBySucursal = "no";
                    }
                    _this.load = true;
                    _this._requestProcesService.addSolution(issue).subscribe(function (response) {
                        _this.load = false;
                        swal("¡Éxito!", "Solucionado", "success")
                            .then(function (res) {
                            window.location.reload();
                        });
                    }, function (error) {
                        var errorMessage = error;
                        if (errorMessage != null) {
                            console.log(errorMessage);
                            swal("Error!", "errorMessage", "error");
                        }
                    });
                }
            });
        }
    };
    RequestDetailComponent.prototype.solucionadoCallCenter = function (issue) {
        var _this = this;
        if (!issue.solutionCallCenter) {
            swal("Error!", "Escriba el motivo", "error");
        }
        else {
            swal("¿Quieres marcar como solucionado?", {
                icon: 'warning',
                dangerMode: true,
                buttons: {
                    cancel: "NO",
                    catch: {
                        text: "Solucionado",
                        value: true,
                    },
                    defeat: false,
                },
            })
                .then(function (value) {
                if (!value) {
                }
                else {
                    if (_this.identity.type == "local") {
                        issue.solutionBySucursal = "si";
                    }
                    else {
                        issue.solutionBySucursal = "no";
                    }
                    _this.load = true;
                    _this._requestProcesService.addSolutionCallCenter(issue).subscribe(function (response) {
                        _this.load = false;
                        swal("¡Éxito!", "Solucionado", "success")
                            .then(function (res) {
                            window.location.reload();
                        });
                    }, function (error) {
                        var errorMessage = error;
                        if (errorMessage != null) {
                            console.log(errorMessage);
                            swal("Error!", "errorMessage", "error");
                        }
                    });
                }
            });
        }
    };
    RequestDetailComponent.prototype.onSubmit = function () {
    };
    RequestDetailComponent.prototype.fileChangeEvent1 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            this.fileToUpload1 = fileInput.target.files;
            this.newName1 = this.fileToUpload1[0].name;
            if (this.newName1.charAt(this.newName1.length - 24)) {
                this.newName1 = ('...' + this.newName1.charAt(this.newName1.length - 21) + this.newName1.charAt(this.newName1.length - 20) + this.newName1.charAt(this.newName1.length - 19) + this.newName1.charAt(this.newName1.length - 18) + this.newName1.charAt(this.newName1.length - 17) + this.newName1.charAt(this.newName1.length - 16) + this.newName1.charAt(this.newName1.length - 15) + this.newName1.charAt(this.newName1.length - 14) + this.newName1.charAt(this.newName1.length - 13) + this.newName1.charAt(this.newName1.length - 12) + this.newName1.charAt(this.newName1.length - 11) + this.newName1.charAt(this.newName1.length - 10) + this.newName1.charAt(this.newName1.length - 9) + this.newName1.charAt(this.newName1.length - 8) + this.newName1.charAt(this.newName1.length - 7) + this.newName1.charAt(this.newName1.length - 6) + this.newName1.charAt(this.newName1.length - 5) + this.newName1.charAt(this.newName1.length - 4) + this.newName1.charAt(this.newName1.length - 3) + this.newName1.charAt(this.newName1.length - 2) + this.newName1.charAt(this.newName1.length - 1));
            }
            else {
                this.newName1 = (this.newName1.charAt(this.newName1.length - 23) + this.newName1.charAt(this.newName1.length - 22) + this.newName1.charAt(this.newName1.length - 21) + this.newName1.charAt(this.newName1.length - 20) + this.newName1.charAt(this.newName1.length - 19) + this.newName1.charAt(this.newName1.length - 18) + this.newName1.charAt(this.newName1.length - 17) + this.newName1.charAt(this.newName1.length - 16) + this.newName1.charAt(this.newName1.length - 15) + this.newName1.charAt(this.newName1.length - 14) + this.newName1.charAt(this.newName1.length - 13) + this.newName1.charAt(this.newName1.length - 12) + this.newName1.charAt(this.newName1.length - 11) + this.newName1.charAt(this.newName1.length - 10) + this.newName1.charAt(this.newName1.length - 9) + this.newName1.charAt(this.newName1.length - 8) + this.newName1.charAt(this.newName1.length - 7) + this.newName1.charAt(this.newName1.length - 6) + this.newName1.charAt(this.newName1.length - 5) + this.newName1.charAt(this.newName1.length - 4) + this.newName1.charAt(this.newName1.length - 3) + this.newName1.charAt(this.newName1.length - 2) + this.newName1.charAt(this.newName1.length - 1));
            }
        }
        else {
            this.fileToUpload1 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestDetailComponent.prototype.fileChangeEvent2 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            this.fileToUpload2 = fileInput.target.files;
            this.newName2 = this.fileToUpload2[0].name;
            if (this.newName2.charAt(this.newName2.length - 24)) {
                this.newName2 = ('...' + this.newName2.charAt(this.newName2.length - 21) + this.newName2.charAt(this.newName2.length - 20) + this.newName2.charAt(this.newName2.length - 19) + this.newName2.charAt(this.newName2.length - 18) + this.newName2.charAt(this.newName2.length - 17) + this.newName2.charAt(this.newName2.length - 16) + this.newName2.charAt(this.newName2.length - 15) + this.newName2.charAt(this.newName2.length - 14) + this.newName2.charAt(this.newName2.length - 13) + this.newName2.charAt(this.newName2.length - 12) + this.newName2.charAt(this.newName2.length - 11) + this.newName2.charAt(this.newName2.length - 10) + this.newName2.charAt(this.newName2.length - 9) + this.newName2.charAt(this.newName2.length - 8) + this.newName2.charAt(this.newName2.length - 7) + this.newName2.charAt(this.newName2.length - 6) + this.newName2.charAt(this.newName2.length - 5) + this.newName2.charAt(this.newName2.length - 4) + this.newName2.charAt(this.newName2.length - 3) + this.newName2.charAt(this.newName2.length - 2) + this.newName2.charAt(this.newName2.length - 1));
            }
            else {
                this.newName2 = (this.newName2.charAt(this.newName2.length - 23) + this.newName2.charAt(this.newName2.length - 22) + this.newName2.charAt(this.newName2.length - 21) + this.newName2.charAt(this.newName2.length - 20) + this.newName2.charAt(this.newName2.length - 19) + this.newName2.charAt(this.newName2.length - 18) + this.newName2.charAt(this.newName2.length - 17) + this.newName2.charAt(this.newName2.length - 16) + this.newName2.charAt(this.newName2.length - 15) + this.newName2.charAt(this.newName2.length - 14) + this.newName2.charAt(this.newName2.length - 13) + this.newName2.charAt(this.newName2.length - 12) + this.newName2.charAt(this.newName2.length - 11) + this.newName2.charAt(this.newName2.length - 10) + this.newName2.charAt(this.newName2.length - 9) + this.newName2.charAt(this.newName2.length - 8) + this.newName2.charAt(this.newName2.length - 7) + this.newName2.charAt(this.newName2.length - 6) + this.newName2.charAt(this.newName2.length - 5) + this.newName2.charAt(this.newName2.length - 4) + this.newName2.charAt(this.newName2.length - 3) + this.newName2.charAt(this.newName2.length - 2) + this.newName2.charAt(this.newName2.length - 1));
            }
        }
        else {
            this.fileToUpload2 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestDetailComponent.prototype.fileChangeEvent3 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            this.fileToUpload3 = fileInput.target.files;
            this.newName3 = this.fileToUpload3[0].name;
            if (this.newName3.charAt(this.newName3.length - 24)) {
                this.newName3 = ('...' + this.newName3.charAt(this.newName3.length - 21) + this.newName3.charAt(this.newName3.length - 20) + this.newName3.charAt(this.newName3.length - 19) + this.newName3.charAt(this.newName3.length - 18) + this.newName3.charAt(this.newName3.length - 17) + this.newName3.charAt(this.newName3.length - 16) + this.newName3.charAt(this.newName3.length - 15) + this.newName3.charAt(this.newName3.length - 14) + this.newName3.charAt(this.newName3.length - 13) + this.newName3.charAt(this.newName3.length - 12) + this.newName3.charAt(this.newName3.length - 11) + this.newName3.charAt(this.newName3.length - 10) + this.newName3.charAt(this.newName3.length - 9) + this.newName3.charAt(this.newName3.length - 8) + this.newName3.charAt(this.newName3.length - 7) + this.newName3.charAt(this.newName3.length - 6) + this.newName3.charAt(this.newName3.length - 5) + this.newName3.charAt(this.newName3.length - 4) + this.newName3.charAt(this.newName3.length - 3) + this.newName3.charAt(this.newName3.length - 2) + this.newName3.charAt(this.newName3.length - 1));
            }
            else {
                this.newName3 = (this.newName3.charAt(this.newName3.length - 23) + this.newName3.charAt(this.newName3.length - 22) + this.newName3.charAt(this.newName3.length - 21) + this.newName3.charAt(this.newName3.length - 20) + this.newName3.charAt(this.newName3.length - 19) + this.newName3.charAt(this.newName3.length - 18) + this.newName3.charAt(this.newName3.length - 17) + this.newName3.charAt(this.newName3.length - 16) + this.newName3.charAt(this.newName3.length - 15) + this.newName3.charAt(this.newName3.length - 14) + this.newName3.charAt(this.newName3.length - 13) + this.newName3.charAt(this.newName3.length - 12) + this.newName3.charAt(this.newName3.length - 11) + this.newName3.charAt(this.newName3.length - 10) + this.newName3.charAt(this.newName3.length - 9) + this.newName3.charAt(this.newName3.length - 8) + this.newName3.charAt(this.newName3.length - 7) + this.newName3.charAt(this.newName3.length - 6) + this.newName3.charAt(this.newName3.length - 5) + this.newName3.charAt(this.newName3.length - 4) + this.newName3.charAt(this.newName3.length - 3) + this.newName3.charAt(this.newName3.length - 2) + this.newName3.charAt(this.newName3.length - 1));
            }
        }
        else {
            this.fileToUpload3 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestDetailComponent.prototype.fileChangeEvent4 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            this.fileToUpload4 = fileInput.target.files;
            this.newName4 = this.fileToUpload4[0].name;
            if (this.newName4.charAt(this.newName4.length - 24)) {
                this.newName4 = ('...' + this.newName4.charAt(this.newName4.length - 21) + this.newName4.charAt(this.newName4.length - 20) + this.newName4.charAt(this.newName4.length - 19) + this.newName4.charAt(this.newName4.length - 18) + this.newName4.charAt(this.newName4.length - 17) + this.newName4.charAt(this.newName4.length - 16) + this.newName4.charAt(this.newName4.length - 15) + this.newName4.charAt(this.newName4.length - 14) + this.newName4.charAt(this.newName4.length - 13) + this.newName4.charAt(this.newName4.length - 12) + this.newName4.charAt(this.newName4.length - 11) + this.newName4.charAt(this.newName4.length - 10) + this.newName4.charAt(this.newName4.length - 9) + this.newName4.charAt(this.newName4.length - 8) + this.newName4.charAt(this.newName4.length - 7) + this.newName4.charAt(this.newName4.length - 6) + this.newName4.charAt(this.newName4.length - 5) + this.newName4.charAt(this.newName4.length - 4) + this.newName4.charAt(this.newName4.length - 3) + this.newName4.charAt(this.newName4.length - 2) + this.newName4.charAt(this.newName4.length - 1));
            }
            else {
                this.newName4 = (this.newName4.charAt(this.newName4.length - 23) + this.newName4.charAt(this.newName4.length - 22) + this.newName4.charAt(this.newName4.length - 21) + this.newName4.charAt(this.newName4.length - 20) + this.newName4.charAt(this.newName4.length - 19) + this.newName4.charAt(this.newName4.length - 18) + this.newName4.charAt(this.newName4.length - 17) + this.newName4.charAt(this.newName4.length - 16) + this.newName4.charAt(this.newName4.length - 15) + this.newName4.charAt(this.newName4.length - 14) + this.newName4.charAt(this.newName4.length - 13) + this.newName4.charAt(this.newName4.length - 12) + this.newName4.charAt(this.newName4.length - 11) + this.newName4.charAt(this.newName4.length - 10) + this.newName4.charAt(this.newName4.length - 9) + this.newName4.charAt(this.newName4.length - 8) + this.newName4.charAt(this.newName4.length - 7) + this.newName4.charAt(this.newName4.length - 6) + this.newName4.charAt(this.newName4.length - 5) + this.newName4.charAt(this.newName4.length - 4) + this.newName4.charAt(this.newName4.length - 3) + this.newName4.charAt(this.newName4.length - 2) + this.newName4.charAt(this.newName4.length - 1));
            }
        }
        else {
            this.fileToUpload4 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestDetailComponent.prototype.fileChangeEvent5 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            this.fileToUpload5 = fileInput.target.files;
            this.newName5 = this.fileToUpload5[0].name;
            if (this.newName5.charAt(this.newName5.length - 24)) {
                this.newName5 = ('...' + this.newName5.charAt(this.newName5.length - 21) + this.newName5.charAt(this.newName5.length - 20) + this.newName5.charAt(this.newName5.length - 19) + this.newName5.charAt(this.newName5.length - 18) + this.newName5.charAt(this.newName5.length - 17) + this.newName5.charAt(this.newName5.length - 16) + this.newName5.charAt(this.newName5.length - 15) + this.newName5.charAt(this.newName5.length - 14) + this.newName5.charAt(this.newName5.length - 13) + this.newName5.charAt(this.newName5.length - 12) + this.newName5.charAt(this.newName5.length - 11) + this.newName5.charAt(this.newName5.length - 10) + this.newName5.charAt(this.newName5.length - 9) + this.newName5.charAt(this.newName5.length - 8) + this.newName5.charAt(this.newName5.length - 7) + this.newName5.charAt(this.newName5.length - 6) + this.newName5.charAt(this.newName5.length - 5) + this.newName5.charAt(this.newName5.length - 4) + this.newName5.charAt(this.newName5.length - 3) + this.newName5.charAt(this.newName5.length - 2) + this.newName5.charAt(this.newName5.length - 1));
            }
            else {
                this.newName5 = (this.newName5.charAt(this.newName5.length - 23) + this.newName5.charAt(this.newName5.length - 22) + this.newName5.charAt(this.newName5.length - 21) + this.newName5.charAt(this.newName5.length - 20) + this.newName5.charAt(this.newName5.length - 19) + this.newName5.charAt(this.newName5.length - 18) + this.newName5.charAt(this.newName5.length - 17) + this.newName5.charAt(this.newName5.length - 16) + this.newName5.charAt(this.newName5.length - 15) + this.newName5.charAt(this.newName5.length - 14) + this.newName5.charAt(this.newName5.length - 13) + this.newName5.charAt(this.newName5.length - 12) + this.newName5.charAt(this.newName5.length - 11) + this.newName5.charAt(this.newName5.length - 10) + this.newName5.charAt(this.newName5.length - 9) + this.newName5.charAt(this.newName5.length - 8) + this.newName5.charAt(this.newName5.length - 7) + this.newName5.charAt(this.newName5.length - 6) + this.newName5.charAt(this.newName5.length - 5) + this.newName5.charAt(this.newName5.length - 4) + this.newName5.charAt(this.newName5.length - 3) + this.newName5.charAt(this.newName5.length - 2) + this.newName5.charAt(this.newName5.length - 1));
            }
        }
        else {
            this.fileToUpload5 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestDetailComponent.prototype.imgCancel1 = function () {
        this.fileToUpload1 = undefined;
    };
    RequestDetailComponent.prototype.imgCancel2 = function () {
        this.fileToUpload2 = undefined;
    };
    RequestDetailComponent.prototype.imgCancel3 = function () {
        this.fileToUpload3 = undefined;
    };
    RequestDetailComponent.prototype.imgCancel4 = function () {
        this.fileToUpload4 = undefined;
    };
    RequestDetailComponent.prototype.imgCancel5 = function () {
        this.fileToUpload5 = undefined;
    };
    RequestDetailComponent.prototype.makeFileRequest = function (url, params, files) {
        var token = this.token;
        return new Promise(function (resolve, reject) {
            var formData = new FormData();
            var xhr = new XMLHttpRequest();
            for (var i = 0; i < files.length; i++) {
                formData.append("image", files[i], files[i].name);
            }
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4) {
                    if (xhr.status == 200) {
                        resolve(JSON.parse(xhr.response));
                    }
                    else {
                        reject(xhr.response);
                    }
                }
            };
            xhr.open("POST", url, true);
            xhr.setRequestHeader("Authorization", token);
            xhr.send(formData);
        });
    };
    RequestDetailComponent.prototype.editPendiente = function (issue) {
        var _this = this;
        this.load = true;
        this._requestProcesService.editPending(issue).subscribe(function (response) {
            _this.load = false;
            swal("Éxito!", "Editado con éxito", "success")
                .then(function (res) {
                window.location.reload();
            });
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                var body = JSON.parse(error._body);
                swal("Error!", body.message, "error");
            }
        });
    };
    RequestDetailComponent.prototype.editPendienteCC = function (issue) {
        var _this = this;
        this.load = true;
        this._requestProcesService.editPendingCC(issue).subscribe(function (response) {
            _this.load = false;
            swal("Éxito!", "Editado con éxito", "success")
                .then(function (res) {
                window.location.reload();
            });
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                var body = JSON.parse(error._body);
                swal("Error!", body.message, "error");
            }
        });
    };
    RequestDetailComponent.prototype.reaperturar = function (issue) {
        var _this = this;
        if (!issue.motivoReapertura) {
            swal("Error!", "Escriba el motivo", "error");
        }
        else {
            swal("¿Quieres marcar como reaperturado?", {
                icon: 'warning',
                dangerMode: true,
                buttons: {
                    cancel: "NO",
                    catch: {
                        text: "Reaperturado",
                        value: true,
                    },
                    defeat: false,
                },
            })
                .then(function (value) {
                if (!value) {
                }
                else {
                    _this.load = true;
                    _this._requestProcesService.addReaperturar(issue).subscribe(function (response) {
                        _this.load = false;
                        swal("¡Éxito!", "Reaperturado", "success")
                            .then(function (res) {
                            window.location.reload();
                        });
                    }, function (error) {
                        var errorMessage = error;
                        _this.load = false;
                        if (errorMessage != null) {
                            console.log(errorMessage);
                            swal("Error!", "errorMessage", "error");
                        }
                    });
                }
            });
        }
    };
    RequestDetailComponent.prototype.encuesta5 = function (encuesta) {
        if (this.encuesta.cinco == true) {
            this.llenado = true;
            this.encuesta = {
                cinco: true,
                cuatro: false,
                tres: false,
                dos: false,
                uno: false
            };
            this.llenadoNum = 5;
        }
        else {
            this.llenado = false;
            this.encuesta = {
                cinco: false,
                cuatro: false,
                tres: false,
                dos: false,
                uno: false
            };
        }
    };
    RequestDetailComponent.prototype.encuesta4 = function (encuesta) {
        if (this.encuesta.cuatro == true) {
            this.llenado = true;
            this.encuesta = {
                cinco: false,
                cuatro: true,
                tres: false,
                dos: false,
                uno: false
            };
            this.llenadoNum = 4;
        }
        else {
            this.llenado = false;
            this.encuesta = {
                cinco: false,
                cuatro: false,
                tres: false,
                dos: false,
                uno: false
            };
        }
    };
    RequestDetailComponent.prototype.encuesta3 = function (encuesta) {
        if (this.encuesta.tres == true) {
            this.llenado = true;
            this.encuesta = {
                cinco: false,
                cuatro: false,
                tres: true,
                dos: false,
                uno: false
            };
            this.llenadoNum = 3;
        }
        else {
            this.llenado = false;
            this.encuesta = {
                cinco: false,
                cuatro: false,
                tres: false,
                dos: false,
                uno: false
            };
        }
    };
    RequestDetailComponent.prototype.encuesta2 = function (encuesta) {
        if (this.encuesta.dos == true) {
            this.llenado = true;
            this.encuesta = {
                cinco: false,
                cuatro: false,
                tres: false,
                dos: true,
                uno: false
            };
            this.llenadoNum = 2;
        }
        else {
            this.llenado = false;
            this.encuesta = {
                cinco: false,
                cuatro: false,
                tres: false,
                dos: false,
                uno: false
            };
        }
    };
    RequestDetailComponent.prototype.encuesta1 = function (encuesta) {
        if (this.encuesta.uno == true) {
            this.llenado = true;
            this.encuesta = {
                cinco: false,
                cuatro: false,
                tres: false,
                dos: false,
                uno: true
            };
            this.llenadoNum = 1;
        }
        else {
            this.llenado = false;
            this.encuesta = {
                cinco: false,
                cuatro: false,
                tres: false,
                dos: false,
                uno: false
            };
        }
    };
    RequestDetailComponent.prototype.encuestaClik = function (issue) {
        var _this = this;
        if (this.llenado == false) {
            swal("Error!", "Seleccione un puntaje de satisfacciín", "error");
        }
        else {
            issue.encuesta = this.llenadoNum;
            issue.encuestaComents = this.encuestaComents;
            this.load = true;
            this._requestProcesService.addEncuesta(issue).subscribe(function (response) {
                _this.load = false;
                swal("¡Éxito!", "Contestada", "success")
                    .then(function (res) {
                    window.location.reload();
                });
            }, function (error) {
                var errorMessage = error;
                if (errorMessage != null) {
                    _this.load = false;
                    // console.log(errorMessage)
                    swal("Error!", "errorMessage", "error");
                }
            });
        }
    };
    RequestDetailComponent.prototype.buttonToPreventivo = function (issue) {
        var _this = this;
        swal("¿Quieres marcar como solucionado Preventivo?", {
            icon: 'warning',
            dangerMode: true,
            buttons: {
                cancel: "NO",
                catch: {
                    text: "Solucionado Preventivo",
                    value: true,
                },
                defeat: false,
            },
        })
            .then(function (value) {
            if (!value) {
            }
            else {
                if (_this.identity.type == "local") {
                    issue.solutionBySucursal = "si";
                }
                else {
                    issue.solutionBySucursal = "no";
                }
                _this.load = true;
                _this._requestProcesService.addSolutionPreventivo(issue).subscribe(function (response) {
                    _this.load = false;
                    swal("¡Éxito!", "Solucionado", "success")
                        .then(function (res) {
                        window.location.reload();
                    });
                }, function (error) {
                    var errorMessage = error;
                    if (errorMessage != null) {
                        console.log(errorMessage);
                        swal("Error!", "errorMessage", "error");
                    }
                });
            }
        });
    };
    RequestDetailComponent.prototype.changeStatusExtra = function (issue, type) {
        this.statusEx = issue;
        this.statusExtype = type;
    };
    RequestDetailComponent.prototype.daleStatus = function (issue, type) {
        var _this = this;
        issue.statusExtra = type;
        this.load = true;
        issue.analyst = this.identity._id;
        issue.statusExtraBy = this.identity._id;
        this._requestProcesService.statusExtra(issue).subscribe(function (response) {
            _this.load = false;
            swal("Éxito!", "éxito", "success")
                .then(function (res) {
                window.location.reload();
            });
        }, function (error) {
            _this.load = false;
            var errorMessage = error;
            if (errorMessage != null) {
                var body = JSON.parse(error._body);
                swal("Error!", body.message, "error");
            }
        });
    };
    RequestDetailComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'requestDetail',
            template: __webpack_require__(1061),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */], __WEBPACK_IMPORTED_MODULE_3__services_requestProces_service__["a" /* RequestProcesService */], __WEBPACK_IMPORTED_MODULE_4__services_requestNew_service__["a" /* RequestNewService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__angular_router__["b" /* ActivatedRoute */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_router__["b" /* ActivatedRoute */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3__services_requestProces_service__["a" /* RequestProcesService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__services_requestProces_service__["a" /* RequestProcesService */]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_4__services_requestNew_service__["a" /* RequestNewService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_4__services_requestNew_service__["a" /* RequestNewService */]) === 'function' && _d) || Object])
    ], RequestDetailComponent);
    return RequestDetailComponent;
    var _a, _b, _c, _d;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/requestDetail.component.js.map

/***/ }),

/***/ 436:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__ = __webpack_require__(134);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_upload_service__ = __webpack_require__(865);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__models_requestNew__ = __webpack_require__(864);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_http__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_global__ = __webpack_require__(60);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_version__ = __webpack_require__(441);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__angular_platform_browser__ = __webpack_require__(131);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_requestProces_service__ = __webpack_require__(61);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RequestNewComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var swal = __webpack_require__(20);
var async = __webpack_require__(281);
var RequestNewComponent = (function () {
    function RequestNewComponent(_userService, _requestNewService, _uploadService, _http, sanitizer, _requestProcesService) {
        this._userService = _userService;
        this._requestNewService = _requestNewService;
        this._uploadService = _uploadService;
        this._http = _http;
        this.sanitizer = sanitizer;
        this._requestProcesService = _requestProcesService;
        this.archivos = [];
        this.url = __WEBPACK_IMPORTED_MODULE_6__services_global__["a" /* GLOBAL */].url;
        this.version = __WEBPACK_IMPORTED_MODULE_7__services_version__["a" /* VERSION */].v;
        this.title = 'NUEVO REQUERIMIENTO';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.requestNew = new __WEBPACK_IMPORTED_MODULE_4__models_requestNew__["a" /* RequestNew */]('', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '');
        this.requestNew.service = "",
            this.requestNew.subCategory = "",
            this.requestNew.description = "",
            this.requestNew.manager = "";
        this.requestNew.manager2 = "";
        this.load = false;
        this.functions3 = false;
    }
    RequestNewComponent.prototype.momentTime = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_9_moment__(date).format('YYYY-MM-DD / HH:mm');
        else
            return '';
    };
    RequestNewComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.note = "";
        this.messages = [];
        this.messagesBD = [];
        this.messages22 = [];
        this.messagesBD22 = [];
        this._requestNewService.getIssues(this.identity).subscribe(function (response) {
            _this.allIsues = response;
            _this.originAllIsues = response;
            _this.table = "original";
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
            }
        });
        this._requestProcesService.getEncuestas(this.identity).subscribe(function (response) {
            if (response.length > 0) {
                _this.dataEncuesta = response;
            }
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
            }
        });
    };
    RequestNewComponent.prototype.onSubmit = function () {
    };
    RequestNewComponent.prototype.onClickIssue = function (issue1) {
        var _this = this;
        this.note = "";
        this.messages = [];
        this.messagesBD = [];
        this.messages22 = [];
        this.messagesBD22 = [];
        this.issueOter = issue1;
        if (issue1.campo) {
            this.campos = issue1.campo;
            if (this.campos.menuboards == true) {
                this.menuboard = {
                    promopanel: false,
                    panaderia: false,
                    bebidasCalientes: false,
                    babidasFrias: false,
                    dasayunosLunch: false
                };
            }
            if (this.campos.cantBolsasComprobantes == true) {
                this.cantBolsasComprobantes = {
                    bolsas: false,
                    comprobantes: false,
                };
            }
            if (this.campos.dt == true) {
                this.dt = "";
            }
            if (this.campos.numReport == true) {
                this.numReport = "";
            }
            if (this.campos.numOrden == true) {
                this.numOrden = "";
            }
            if (this.campos.producto == true) {
                this.producto = "";
            }
            if (this.campos.lote == true) {
                this.lote = "";
            }
            if (this.campos.cantidad == true) {
                this.cantidad = "";
            }
            if (this.campos.numSerie == true) {
                this.numSerie = "";
            }
            if (this.campos.marca == true) {
                this.marca = "";
            }
            if (this.campos.nombreTimMember == true) {
                this.nombreTimMember = "";
            }
            if (this.campos.numNomina == true) {
                this.numNomina = "";
            }
            if (this.campos.email == true) {
                this.email = "";
            }
            if (this.campos.kds == true) {
                this.kds = {
                    expo1: false,
                    expo2: false,
                    sandwiches: false,
                    bebidasCalientes: false,
                    bebidasFrias: false
                };
            }
            if (this.campos.pos == true) {
                this.pos = {
                    fcRight: false,
                    fcLeft: false,
                    fc3: false,
                    dtOt: false,
                    dtOt2: false,
                    dtCashier: false
                };
            }
            if (this.campos.medidas == true) {
                this.medidas = {
                    altura: "",
                    ancho: "",
                    profundidad: ""
                };
            }
        }
        else {
            this.campos = {
                foto: false,
                video: false,
                numReport: false,
                nombreTimMember: false,
                numNomina: false,
                numOrden: false,
                producto: false,
                lote: false,
                cantidad: false,
                numSerie: false,
                marca: false,
                menuboards: false,
                cantBolsasComprobantes: false,
                dt: false,
                kds: false,
                email: false,
                pos: false,
                medidas: false,
            };
        }
        this.requestNew = {
            id: issue1.id,
            service: issue1.servicio,
            subCategory: issue1.subcategory,
            category: issue1.category,
            department: issue1.departments
        };
        if (this.identity.type == 'areaManager') {
            this.requestNew.reportBy = "";
            this.requestNew.manager = this.identity.fname + " " + this.identity.lname;
            this._requestNewService.getAreaBranches(this.identity).subscribe(function (response) {
                _this.sucursales = response;
            });
        }
        if (this.identity.upload == 'si' || this.identity.type == 'callCenter') {
            this.requestNew.reportBy = "";
            this.requestNew.manager2 = this.identity.fname + " " + this.identity.lname;
            this._requestNewService.getLocals(this.identity).subscribe(function (response) {
                _this.sucursales = response;
            });
        }
    };
    RequestNewComponent.prototype.pregunta = function (note) {
        var _this = this;
        if (note && note != "") {
            this.load = true;
            this.messages.push({
                'role': 'user',
                'content': note
            });
            this.messagesBD.push({
                'role': 'user',
                'content': note
            });
            this.messages22.push({
                'role': 'user',
                'content': "En, " + this.issueOter.category + ", " + this.issueOter.servicio + ", " + this.issueOter.subcategory + ", " + note
            });
            this.messagesBD22.push({
                'role': 'user',
                'content': "En, " + this.issueOter.category + ", " + this.issueOter.servicio + ", " + this.issueOter.subcategory + ", " + note
            });
            this.note = "";
            this._requestNewService.chatGPT(this.messages22).subscribe(function (response) {
                _this.load = false;
                _this.messages.push({
                    'role': 'assistant',
                    'content': response.text
                });
                _this.messagesBD.push({
                    'role': 'assistant',
                    'content': response.text
                });
                _this.messages22.push({
                    'role': 'assistant',
                    'content': response.text
                });
                _this.messagesBD22.push({
                    'role': 'assistant',
                    'content': response.text
                });
            });
        }
        else {
            this.load = false;
            swal("Error!", "Completa la información", "error");
        }
    };
    RequestNewComponent.prototype.sirvio = function (index, util) {
        this.messagesBD[index].util = util;
    };
    RequestNewComponent.prototype.asignar = function () {
        if (this.identity.type == "local" || this.identity.type == "areaManager" || this.identity.type == "callCenter" || this.identity.upload == "si") {
            if (!this.requestNew.description || (!this.requestNew.manager && !this.requestNew.manager2)) {
                swal("Error!", "Completa la información", "error");
            }
            else {
                if ((this.requestNew.manager && this.requestNew.manager.length < 5) || (this.requestNew.manager2 && this.requestNew.manager2.length < 5)) {
                    swal("Error!", "Completa mínimo 5 letras en 'Gerencial que reporta'", "error");
                }
                else {
                    if ((this.identity.type == "areaManager" || this.identity.upload == "si" || this.identity.type == "callCenter") && this.requestNew.reportBy == "") {
                        swal("Error!", "Seleccione sucursal", "error");
                    }
                    else {
                        if (this.campos.menuboards == true && true == (this.menuboard.promopanel == false && this.menuboard.panaderia == false && this.menuboard.bebidasCalientes == false && this.menuboard.babidasFrias == false && this.menuboard.dasayunosLunch == false)) {
                            swal("Error!", "Seleccione mínimo un menuboard", "error");
                        }
                        else {
                            if (this.campos.medidas == true && (this.medidas.altura == "" && this.medidas.ancho == "" && this.medidas.profundidad == "")) {
                                swal("Error!", "Completa las medidas", "error");
                            }
                            else {
                                if (this.campos.cantBolsasComprobantes == true && (this.cantBolsasComprobantes.bolsas == false && this.cantBolsasComprobantes.comprobantes == false)) {
                                    swal("Error!", "Seleccione mínimo bolsas y/o comprobantes", "error");
                                }
                                else {
                                    if (this.campos.dt == true && this.dt == "") {
                                        swal("Error!", "Seleccione si se realizó el reinicio de HME", "error");
                                    }
                                    else {
                                        if (this.campos.kds == true && (this.kds.expo1 == false && this.kds.expo2 == false && this.kds.sandwiches == false && this.kds.bebidasCalientes == false && this.kds.bebidasFrias == false)) {
                                            swal("Error!", "Seleccione mínimo un KDS", "error");
                                        }
                                        else {
                                            if (this.campos.pos == true && (this.pos.fcRight == false && this.pos.fcLeft == false && this.pos.fc3 == false && this.pos.dtOt == false && this.pos.dtOt2 == false && this.pos.dtCashier == false)) {
                                                swal("Error!", "Seleccione mínimo un POS", "error");
                                            }
                                            else {
                                                if (this.campos.email == true && this.email == "") {
                                                    swal("Error!", "Completa el email", "error");
                                                }
                                                else {
                                                    if (this.campos.foto == true && !this.fileToUpload1) {
                                                        swal("Error!", "Favor de subir mínimo 1 foto", "error");
                                                    }
                                                    else {
                                                        if (this.campos.video == true && !this.fileToUpload1) {
                                                            swal("Error!", "Favor de subir mínimo 1 video", "error");
                                                        }
                                                        else {
                                                            if (this.campos.numReport == true && this.numReport == '') {
                                                                swal("Error!", "Agrega el número de reporte", "error");
                                                            }
                                                            else {
                                                                if (this.campos.numOrden == true && this.numOrden == '') {
                                                                    swal("Error!", "Agrega el número de orden", "error");
                                                                }
                                                                else {
                                                                    if (this.campos.producto == true && this.producto == '') {
                                                                        swal("Error!", "Agrega el producto", "error");
                                                                    }
                                                                    else {
                                                                        if (this.campos.lote == true && this.lote == '') {
                                                                            swal("Error!", "Agrega el lote", "error");
                                                                        }
                                                                        else {
                                                                            if (this.campos.cantidad == true && this.cantidad == '') {
                                                                                swal("Error!", "Agrega la cantidad", "error");
                                                                            }
                                                                            else {
                                                                                if (this.campos.numSerie == true && this.numSerie == '') {
                                                                                    swal("Error!", "Agrega el número de serie", "error");
                                                                                }
                                                                                else {
                                                                                    if (this.campos.marca == true && this.marca == '') {
                                                                                        swal("Error!", "Agrega la marca", "error");
                                                                                    }
                                                                                    else {
                                                                                        if (this.campos.nombreTimMember == true && this.nombreTimMember == '') {
                                                                                            swal("Error!", "Agrega el nombre del Tim-Member", "error");
                                                                                        }
                                                                                        else {
                                                                                            if (this.campos.numNomina == true && this.numNomina == '') {
                                                                                                swal("Error!", "Agrega el número de nómina", "error");
                                                                                            }
                                                                                            else {
                                                                                                if (this.campos.menuboards == true) {
                                                                                                    this.requestNew.menuboards = this.menuboard;
                                                                                                }
                                                                                                if (this.campos.cantBolsasComprobantes == true) {
                                                                                                    this.requestNew.cantBolsasComprobantes = this.cantBolsasComprobantes;
                                                                                                }
                                                                                                if (this.campos.dt == true) {
                                                                                                    this.requestNew.dt = this.dt;
                                                                                                }
                                                                                                if (this.campos.numReport == true) {
                                                                                                    this.requestNew.numReport = this.numReport;
                                                                                                }
                                                                                                if (this.campos.numOrden == true) {
                                                                                                    this.requestNew.numOrden = this.numOrden;
                                                                                                }
                                                                                                if (this.campos.producto == true) {
                                                                                                    this.requestNew.producto = this.producto;
                                                                                                }
                                                                                                if (this.campos.lote == true) {
                                                                                                    this.requestNew.lote = this.lote;
                                                                                                }
                                                                                                if (this.campos.cantidad == true) {
                                                                                                    this.requestNew.cantidad = this.cantidad;
                                                                                                }
                                                                                                if (this.campos.numSerie == true) {
                                                                                                    this.requestNew.numSerie = this.numSerie;
                                                                                                }
                                                                                                if (this.campos.marca == true) {
                                                                                                    this.requestNew.marca = this.marca;
                                                                                                }
                                                                                                if (this.campos.nombreTimMember == true) {
                                                                                                    this.requestNew.nombreTimMember = this.nombreTimMember;
                                                                                                }
                                                                                                if (this.campos.numNomina == true) {
                                                                                                    this.requestNew.numNomina = this.numNomina;
                                                                                                }
                                                                                                if (this.campos.email == true) {
                                                                                                    this.requestNew.email = this.email;
                                                                                                }
                                                                                                if (this.campos.kds == true) {
                                                                                                    this.requestNew.kds = this.kds;
                                                                                                }
                                                                                                if (this.campos.pos == true) {
                                                                                                    this.requestNew.pos = this.pos;
                                                                                                }
                                                                                                if (this.campos.medidas == true) {
                                                                                                    this.requestNew.medidas = this.medidas;
                                                                                                }
                                                                                                this.load = true;
                                                                                                this.requestNew.title = this.title;
                                                                                                this.requestNew.issue = this.requestNew.id;
                                                                                                this.requestNew.department = this.requestNew.department;
                                                                                                var thisAsync_1 = this;
                                                                                                if (this.identity.type == "areaManager" || this.identity.upload == "si" || this.identity.type == "callCenter") {
                                                                                                    async.waterfall([
                                                                                                        function step1(next) {
                                                                                                            thisAsync_1._requestNewService.getOneUser({ sucursal: thisAsync_1.requestNew.reportBy }).subscribe(function (response) {
                                                                                                                thisAsync_1.requestNew.reportBy = response[0];
                                                                                                                thisAsync_1.requestNew.reportByAm = "si";
                                                                                                                if (thisAsync_1.identity.upload == "si" || thisAsync_1.identity.type == "callCenter") {
                                                                                                                    thisAsync_1.requestNew.manager = thisAsync_1.requestNew.manager2;
                                                                                                                }
                                                                                                                var imgArray = [];
                                                                                                                if (thisAsync_1.fileToUpload1) {
                                                                                                                    imgArray.push(thisAsync_1.fileToUpload1);
                                                                                                                }
                                                                                                                if (thisAsync_1.fileToUpload2) {
                                                                                                                    imgArray.push(thisAsync_1.fileToUpload2);
                                                                                                                }
                                                                                                                if (thisAsync_1.fileToUpload3) {
                                                                                                                    imgArray.push(thisAsync_1.fileToUpload3);
                                                                                                                }
                                                                                                                if (thisAsync_1.fileToUpload4) {
                                                                                                                    imgArray.push(thisAsync_1.fileToUpload4);
                                                                                                                }
                                                                                                                if (thisAsync_1.fileToUpload5) {
                                                                                                                    imgArray.push(thisAsync_1.fileToUpload5);
                                                                                                                }
                                                                                                                if (thisAsync_1.fileToUpload6) {
                                                                                                                    imgArray.push(thisAsync_1.fileToUpload6);
                                                                                                                }
                                                                                                                if (thisAsync_1.fileToUpload7) {
                                                                                                                    imgArray.push(thisAsync_1.fileToUpload7);
                                                                                                                }
                                                                                                                if (thisAsync_1.fileToUpload8) {
                                                                                                                    imgArray.push(thisAsync_1.fileToUpload8);
                                                                                                                }
                                                                                                                if (thisAsync_1.fileToUpload9) {
                                                                                                                    imgArray.push(thisAsync_1.fileToUpload9);
                                                                                                                }
                                                                                                                if (thisAsync_1.fileToUpload10) {
                                                                                                                    imgArray.push(thisAsync_1.fileToUpload10);
                                                                                                                }
                                                                                                                if (thisAsync_1.fileToUpload11) {
                                                                                                                    imgArray.push(thisAsync_1.fileToUpload11);
                                                                                                                }
                                                                                                                if (thisAsync_1.fileToUpload12) {
                                                                                                                    imgArray.push(thisAsync_1.fileToUpload12);
                                                                                                                }
                                                                                                                var imgArrays = imgArray;
                                                                                                                next(null, imgArrays);
                                                                                                            });
                                                                                                        },
                                                                                                        function step2(imgArray, next) {
                                                                                                            var imgNames = [];
                                                                                                            if (imgArray.length > 0) {
                                                                                                                for (var i = 0; i < imgArray.length; i++) {
                                                                                                                    thisAsync_1.makeFileRequest(thisAsync_1.url + "requests/uploadImage/" + thisAsync_1.identity._id, [], imgArray[i]).then(function (result) {
                                                                                                                        imgNames.push(result);
                                                                                                                    });
                                                                                                                }
                                                                                                                next(null, imgArray, imgNames);
                                                                                                            }
                                                                                                            else {
                                                                                                                next(null, imgArray, imgNames);
                                                                                                            }
                                                                                                        },
                                                                                                        function step3(imgArray, imgNames, next) {
                                                                                                            setTimeout(function () {
                                                                                                                thisAsync_1.requestNew.imagenes = imgNames;
                                                                                                                if (imgNames.length == imgArray.length) {
                                                                                                                    thisAsync_1._requestNewService.newRequest(thisAsync_1.requestNew).subscribe(function (response) {
                                                                                                                        thisAsync_1.load = false;
                                                                                                                        if (response.users.statusCallCenter) {
                                                                                                                            var asignado = "Call-Center";
                                                                                                                        }
                                                                                                                        else {
                                                                                                                            var asignado = "Analista";
                                                                                                                        }
                                                                                                                        swal("¡Éxito!", "Folio,  " + response.users.codeRequest + ",  creado: " + __WEBPACK_IMPORTED_MODULE_9_moment__(response.users.dateOfReport).format('YYYY-MM-DD/ HH:mm') + ", - Direccionado a: " + asignado, "success")
                                                                                                                            .then(function (res) {
                                                                                                                            window.location.reload();
                                                                                                                        }, function (error) {
                                                                                                                            var errorMessage = error;
                                                                                                                            if (errorMessage != null) {
                                                                                                                                swal("Error!", "errorMessage", "error");
                                                                                                                                window.location.reload();
                                                                                                                            }
                                                                                                                        });
                                                                                                                    });
                                                                                                                }
                                                                                                            }, 1500);
                                                                                                        }
                                                                                                    ], function (err) {
                                                                                                        console.log(err);
                                                                                                    });
                                                                                                }
                                                                                                else {
                                                                                                    async.waterfall([
                                                                                                        function step1(next) {
                                                                                                            if (thisAsync_1.requestNew) {
                                                                                                                thisAsync_1.requestNew.reportBy = thisAsync_1.identity;
                                                                                                            }
                                                                                                            var imgArray = [];
                                                                                                            if (thisAsync_1.fileToUpload1 && thisAsync_1.fileToUpload1 != null) {
                                                                                                                imgArray.push(thisAsync_1.fileToUpload1);
                                                                                                            }
                                                                                                            if (thisAsync_1.fileToUpload2) {
                                                                                                                imgArray.push(thisAsync_1.fileToUpload2);
                                                                                                            }
                                                                                                            if (thisAsync_1.fileToUpload3) {
                                                                                                                imgArray.push(thisAsync_1.fileToUpload3);
                                                                                                            }
                                                                                                            if (thisAsync_1.fileToUpload4) {
                                                                                                                imgArray.push(thisAsync_1.fileToUpload4);
                                                                                                            }
                                                                                                            if (thisAsync_1.fileToUpload5) {
                                                                                                                imgArray.push(thisAsync_1.fileToUpload5);
                                                                                                            }
                                                                                                            if (thisAsync_1.fileToUpload6) {
                                                                                                                imgArray.push(thisAsync_1.fileToUpload6);
                                                                                                            }
                                                                                                            if (thisAsync_1.fileToUpload7) {
                                                                                                                imgArray.push(thisAsync_1.fileToUpload7);
                                                                                                            }
                                                                                                            if (thisAsync_1.fileToUpload8) {
                                                                                                                imgArray.push(thisAsync_1.fileToUpload8);
                                                                                                            }
                                                                                                            if (thisAsync_1.fileToUpload9) {
                                                                                                                imgArray.push(thisAsync_1.fileToUpload9);
                                                                                                            }
                                                                                                            if (thisAsync_1.fileToUpload10) {
                                                                                                                imgArray.push(thisAsync_1.fileToUpload10);
                                                                                                            }
                                                                                                            if (thisAsync_1.fileToUpload11) {
                                                                                                                imgArray.push(thisAsync_1.fileToUpload11);
                                                                                                            }
                                                                                                            if (thisAsync_1.fileToUpload12) {
                                                                                                                imgArray.push(thisAsync_1.fileToUpload12);
                                                                                                            }
                                                                                                            var imgArrays = imgArray;
                                                                                                            next(null, imgArrays);
                                                                                                        },
                                                                                                        function step2(imgArray, next) {
                                                                                                            var imgNames = [];
                                                                                                            if (imgArray.length > 0) {
                                                                                                                for (var i = 0; i < imgArray.length; i++) {
                                                                                                                    thisAsync_1.makeFileRequest(thisAsync_1.url + "requests/uploadImage/" + thisAsync_1.identity._id, [], imgArray[i]).then(function (result) {
                                                                                                                        imgNames.push(result);
                                                                                                                        if (imgNames.length == imgArray.length) {
                                                                                                                            next(null, imgArray, imgNames);
                                                                                                                        }
                                                                                                                    }, function (error) {
                                                                                                                        var errorMessage = error;
                                                                                                                        if (errorMessage != null) {
                                                                                                                            thisAsync_1.load = false;
                                                                                                                            swal("Error!", "Algo salio mal por la conexión a internet, intente nuevamente solo con 1 imagen", "error");
                                                                                                                        }
                                                                                                                    });
                                                                                                                }
                                                                                                            }
                                                                                                            else {
                                                                                                                next(null, imgArray, imgNames);
                                                                                                            }
                                                                                                        },
                                                                                                        function step3(imgArray, imgNames, next) {
                                                                                                            swal("¡Éxito!", "Folio creado ", "success");
                                                                                                            setTimeout(function () {
                                                                                                                window.location.reload();
                                                                                                                // thisAsync.functions3 = true
                                                                                                                // thisAsync.requestNew.imagenes = imgNames
                                                                                                                // thisAsync.requestNew.pantalla= screen.width+" x "+ screen.height
                                                                                                                // thisAsync.requestNew.dispositivo= navigator.userAgent
                                                                                                                // thisAsync.requestNew.version= thisAsync.version
                                                                                                                //   if(imgNames.length == imgArray.length){
                                                                                                                //     thisAsync._requestNewService.newRequest(thisAsync.requestNew).subscribe(
                                                                                                                //       response=>{
                                                                                                                //         thisAsync.load = false
                                                                                                                //         if(response.users.statusCallCenter){
                                                                                                                //           var asignado= "Call-Center"
                                                                                                                //         }else{
                                                                                                                //           var asignado= "Analista"
                                                                                                                //         }
                                                                                                                //         swal( "¡Éxito!", "Folio:  " + response.users.codeRequest + ",  creado: " + moment(response.users.dateOfReport).format('YYYY-MM-DD/ HH:mm') + ", - Direccionado a: " + asignado, "success")
                                                                                                                //         .then((res)=>{
                                                                                                                //           window.location.reload();
                                                                                                                //         }, error=>{
                                                                                                                //           var errorMessage = error;
                                                                                                                //           if(errorMessage != null){
                                                                                                                //             swal("Error!","errorMessage" , "error");
                                                                                                                //             window.location.reload();
                                                                                                                //           }    
                                                                                                                //         })
                                                                                                                //       }
                                                                                                                //     )
                                                                                                                //   }else{
                                                                                                                //     thisAsync.load = false
                                                                                                                //     swal("Error!","Algo salio mal por la conexión a internet, intente nuevamente y verifique su conexión a internet" , "error");
                                                                                                                //   }
                                                                                                            }, 4000);
                                                                                                        }
                                                                                                    ], function (err) {
                                                                                                        thisAsync_1.load = false;
                                                                                                        swal("Error!", "Algo salio mal vuelva a recargar la página", "error");
                                                                                                        console.log(err);
                                                                                                    });
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        else {
            swal("Error!", "Por el  momento solo sucursales, AM y CallCenter pueden levantar timcket", "error");
        }
    };
    RequestNewComponent.prototype.search1 = function (issue) {
        var _this = this;
        if (issue.length >= 1) {
            this._requestNewService.getBySearch({ letra: issue, user: this.identity }).subscribe(function (response) {
                _this.allIsues = response;
                _this.table = "segunda";
            }, function (error) {
                var errorMessage = error;
                if (errorMessage != null) {
                }
            });
        }
        if (issue.length <= 0) {
            this.allIsues = this.originAllIsues;
            this.table = "original";
        }
    };
    RequestNewComponent.prototype.fileChangeEvent1 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi') {
                if (file_path1[0].size > 5000000) {
                    this.fileToUpload1 = undefined;
                    swal("Error!", " El paso de la imagen tiene que ser menor a 5 MB", "error");
                    return;
                }
            }
            this.fileToUpload1 = fileInput.target.files;
            this.newName1 = this.fileToUpload1[0].name;
            if (this.newName1.charAt(this.newName1.length - 24)) {
                this.newName1 = ('...' + this.newName1.charAt(this.newName1.length - 21) + this.newName1.charAt(this.newName1.length - 20) + this.newName1.charAt(this.newName1.length - 19) + this.newName1.charAt(this.newName1.length - 18) + this.newName1.charAt(this.newName1.length - 17) + this.newName1.charAt(this.newName1.length - 16) + this.newName1.charAt(this.newName1.length - 15) + this.newName1.charAt(this.newName1.length - 14) + this.newName1.charAt(this.newName1.length - 13) + this.newName1.charAt(this.newName1.length - 12) + this.newName1.charAt(this.newName1.length - 11) + this.newName1.charAt(this.newName1.length - 10) + this.newName1.charAt(this.newName1.length - 9) + this.newName1.charAt(this.newName1.length - 8) + this.newName1.charAt(this.newName1.length - 7) + this.newName1.charAt(this.newName1.length - 6) + this.newName1.charAt(this.newName1.length - 5) + this.newName1.charAt(this.newName1.length - 4) + this.newName1.charAt(this.newName1.length - 3) + this.newName1.charAt(this.newName1.length - 2) + this.newName1.charAt(this.newName1.length - 1));
            }
            else {
                this.newName1 = (this.newName1.charAt(this.newName1.length - 23) + this.newName1.charAt(this.newName1.length - 22) + this.newName1.charAt(this.newName1.length - 21) + this.newName1.charAt(this.newName1.length - 20) + this.newName1.charAt(this.newName1.length - 19) + this.newName1.charAt(this.newName1.length - 18) + this.newName1.charAt(this.newName1.length - 17) + this.newName1.charAt(this.newName1.length - 16) + this.newName1.charAt(this.newName1.length - 15) + this.newName1.charAt(this.newName1.length - 14) + this.newName1.charAt(this.newName1.length - 13) + this.newName1.charAt(this.newName1.length - 12) + this.newName1.charAt(this.newName1.length - 11) + this.newName1.charAt(this.newName1.length - 10) + this.newName1.charAt(this.newName1.length - 9) + this.newName1.charAt(this.newName1.length - 8) + this.newName1.charAt(this.newName1.length - 7) + this.newName1.charAt(this.newName1.length - 6) + this.newName1.charAt(this.newName1.length - 5) + this.newName1.charAt(this.newName1.length - 4) + this.newName1.charAt(this.newName1.length - 3) + this.newName1.charAt(this.newName1.length - 2) + this.newName1.charAt(this.newName1.length - 1));
            }
        }
        else {
            this.fileToUpload1 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .mp4, .avi, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestNewComponent.prototype.fileChangeEvent2 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi') {
                if (file_path1[0].size > 5000000) {
                    this.fileToUpload1 = undefined;
                    swal("Error!", " El paso de la imagen tiene que ser menor a 5 MB", "error");
                    return;
                }
            }
            this.fileToUpload2 = fileInput.target.files;
            this.newName2 = this.fileToUpload2[0].name;
            if (this.newName2.charAt(this.newName2.length - 24)) {
                this.newName2 = ('...' + this.newName2.charAt(this.newName2.length - 21) + this.newName2.charAt(this.newName2.length - 20) + this.newName2.charAt(this.newName2.length - 19) + this.newName2.charAt(this.newName2.length - 18) + this.newName2.charAt(this.newName2.length - 17) + this.newName2.charAt(this.newName2.length - 16) + this.newName2.charAt(this.newName2.length - 15) + this.newName2.charAt(this.newName2.length - 14) + this.newName2.charAt(this.newName2.length - 13) + this.newName2.charAt(this.newName2.length - 12) + this.newName2.charAt(this.newName2.length - 11) + this.newName2.charAt(this.newName2.length - 10) + this.newName2.charAt(this.newName2.length - 9) + this.newName2.charAt(this.newName2.length - 8) + this.newName2.charAt(this.newName2.length - 7) + this.newName2.charAt(this.newName2.length - 6) + this.newName2.charAt(this.newName2.length - 5) + this.newName2.charAt(this.newName2.length - 4) + this.newName2.charAt(this.newName2.length - 3) + this.newName2.charAt(this.newName2.length - 2) + this.newName2.charAt(this.newName2.length - 1));
            }
            else {
                this.newName2 = (this.newName2.charAt(this.newName2.length - 23) + this.newName2.charAt(this.newName2.length - 22) + this.newName2.charAt(this.newName2.length - 21) + this.newName2.charAt(this.newName2.length - 20) + this.newName2.charAt(this.newName2.length - 19) + this.newName2.charAt(this.newName2.length - 18) + this.newName2.charAt(this.newName2.length - 17) + this.newName2.charAt(this.newName2.length - 16) + this.newName2.charAt(this.newName2.length - 15) + this.newName2.charAt(this.newName2.length - 14) + this.newName2.charAt(this.newName2.length - 13) + this.newName2.charAt(this.newName2.length - 12) + this.newName2.charAt(this.newName2.length - 11) + this.newName2.charAt(this.newName2.length - 10) + this.newName2.charAt(this.newName2.length - 9) + this.newName2.charAt(this.newName2.length - 8) + this.newName2.charAt(this.newName2.length - 7) + this.newName2.charAt(this.newName2.length - 6) + this.newName2.charAt(this.newName2.length - 5) + this.newName2.charAt(this.newName2.length - 4) + this.newName2.charAt(this.newName2.length - 3) + this.newName2.charAt(this.newName2.length - 2) + this.newName2.charAt(this.newName2.length - 1));
            }
        }
        else {
            this.fileToUpload2 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .mp4, .avi, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestNewComponent.prototype.fileChangeEvent3 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi') {
                if (file_path1[0].size > 5000000) {
                    this.fileToUpload1 = undefined;
                    swal("Error!", " El paso de la imagen tiene que ser menor a 5 MB", "error");
                    return;
                }
            }
            this.fileToUpload3 = fileInput.target.files;
            this.newName3 = this.fileToUpload3[0].name;
            if (this.newName3.charAt(this.newName3.length - 24)) {
                this.newName3 = ('...' + this.newName3.charAt(this.newName3.length - 21) + this.newName3.charAt(this.newName3.length - 20) + this.newName3.charAt(this.newName3.length - 19) + this.newName3.charAt(this.newName3.length - 18) + this.newName3.charAt(this.newName3.length - 17) + this.newName3.charAt(this.newName3.length - 16) + this.newName3.charAt(this.newName3.length - 15) + this.newName3.charAt(this.newName3.length - 14) + this.newName3.charAt(this.newName3.length - 13) + this.newName3.charAt(this.newName3.length - 12) + this.newName3.charAt(this.newName3.length - 11) + this.newName3.charAt(this.newName3.length - 10) + this.newName3.charAt(this.newName3.length - 9) + this.newName3.charAt(this.newName3.length - 8) + this.newName3.charAt(this.newName3.length - 7) + this.newName3.charAt(this.newName3.length - 6) + this.newName3.charAt(this.newName3.length - 5) + this.newName3.charAt(this.newName3.length - 4) + this.newName3.charAt(this.newName3.length - 3) + this.newName3.charAt(this.newName3.length - 2) + this.newName3.charAt(this.newName3.length - 1));
            }
            else {
                this.newName3 = (this.newName3.charAt(this.newName3.length - 23) + this.newName3.charAt(this.newName3.length - 22) + this.newName3.charAt(this.newName3.length - 21) + this.newName3.charAt(this.newName3.length - 20) + this.newName3.charAt(this.newName3.length - 19) + this.newName3.charAt(this.newName3.length - 18) + this.newName3.charAt(this.newName3.length - 17) + this.newName3.charAt(this.newName3.length - 16) + this.newName3.charAt(this.newName3.length - 15) + this.newName3.charAt(this.newName3.length - 14) + this.newName3.charAt(this.newName3.length - 13) + this.newName3.charAt(this.newName3.length - 12) + this.newName3.charAt(this.newName3.length - 11) + this.newName3.charAt(this.newName3.length - 10) + this.newName3.charAt(this.newName3.length - 9) + this.newName3.charAt(this.newName3.length - 8) + this.newName3.charAt(this.newName3.length - 7) + this.newName3.charAt(this.newName3.length - 6) + this.newName3.charAt(this.newName3.length - 5) + this.newName3.charAt(this.newName3.length - 4) + this.newName3.charAt(this.newName3.length - 3) + this.newName3.charAt(this.newName3.length - 2) + this.newName3.charAt(this.newName3.length - 1));
            }
        }
        else {
            this.fileToUpload3 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .mp4, .avi, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestNewComponent.prototype.fileChangeEvent4 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi') {
                if (file_path1[0].size > 5000000) {
                    this.fileToUpload1 = undefined;
                    swal("Error!", " El paso de la imagen tiene que ser menor a 5 MB", "error");
                    return;
                }
            }
            this.fileToUpload4 = fileInput.target.files;
            this.newName4 = this.fileToUpload4[0].name;
            if (this.newName4.charAt(this.newName4.length - 24)) {
                this.newName4 = ('...' + this.newName4.charAt(this.newName4.length - 21) + this.newName4.charAt(this.newName4.length - 20) + this.newName4.charAt(this.newName4.length - 19) + this.newName4.charAt(this.newName4.length - 18) + this.newName4.charAt(this.newName4.length - 17) + this.newName4.charAt(this.newName4.length - 16) + this.newName4.charAt(this.newName4.length - 15) + this.newName4.charAt(this.newName4.length - 14) + this.newName4.charAt(this.newName4.length - 13) + this.newName4.charAt(this.newName4.length - 12) + this.newName4.charAt(this.newName4.length - 11) + this.newName4.charAt(this.newName4.length - 10) + this.newName4.charAt(this.newName4.length - 9) + this.newName4.charAt(this.newName4.length - 8) + this.newName4.charAt(this.newName4.length - 7) + this.newName4.charAt(this.newName4.length - 6) + this.newName4.charAt(this.newName4.length - 5) + this.newName4.charAt(this.newName4.length - 4) + this.newName4.charAt(this.newName4.length - 3) + this.newName4.charAt(this.newName4.length - 2) + this.newName4.charAt(this.newName4.length - 1));
            }
            else {
                this.newName4 = (this.newName4.charAt(this.newName4.length - 23) + this.newName4.charAt(this.newName4.length - 22) + this.newName4.charAt(this.newName4.length - 21) + this.newName4.charAt(this.newName4.length - 20) + this.newName4.charAt(this.newName4.length - 19) + this.newName4.charAt(this.newName4.length - 18) + this.newName4.charAt(this.newName4.length - 17) + this.newName4.charAt(this.newName4.length - 16) + this.newName4.charAt(this.newName4.length - 15) + this.newName4.charAt(this.newName4.length - 14) + this.newName4.charAt(this.newName4.length - 13) + this.newName4.charAt(this.newName4.length - 12) + this.newName4.charAt(this.newName4.length - 11) + this.newName4.charAt(this.newName4.length - 10) + this.newName4.charAt(this.newName4.length - 9) + this.newName4.charAt(this.newName4.length - 8) + this.newName4.charAt(this.newName4.length - 7) + this.newName4.charAt(this.newName4.length - 6) + this.newName4.charAt(this.newName4.length - 5) + this.newName4.charAt(this.newName4.length - 4) + this.newName4.charAt(this.newName4.length - 3) + this.newName4.charAt(this.newName4.length - 2) + this.newName4.charAt(this.newName4.length - 1));
            }
        }
        else {
            this.fileToUpload4 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .mp4, .avi, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestNewComponent.prototype.fileChangeEvent5 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi') {
                if (file_path1[0].size > 5000000) {
                    this.fileToUpload1 = undefined;
                    swal("Error!", " El paso de la imagen tiene que ser menor a 5 MB", "error");
                    return;
                }
            }
            this.fileToUpload5 = fileInput.target.files;
            this.newName5 = this.fileToUpload5[0].name;
            if (this.newName5.charAt(this.newName5.length - 24)) {
                this.newName5 = ('...' + this.newName5.charAt(this.newName5.length - 21) + this.newName5.charAt(this.newName5.length - 20) + this.newName5.charAt(this.newName5.length - 19) + this.newName5.charAt(this.newName5.length - 18) + this.newName5.charAt(this.newName5.length - 17) + this.newName5.charAt(this.newName5.length - 16) + this.newName5.charAt(this.newName5.length - 15) + this.newName5.charAt(this.newName5.length - 14) + this.newName5.charAt(this.newName5.length - 13) + this.newName5.charAt(this.newName5.length - 12) + this.newName5.charAt(this.newName5.length - 11) + this.newName5.charAt(this.newName5.length - 10) + this.newName5.charAt(this.newName5.length - 9) + this.newName5.charAt(this.newName5.length - 8) + this.newName5.charAt(this.newName5.length - 7) + this.newName5.charAt(this.newName5.length - 6) + this.newName5.charAt(this.newName5.length - 5) + this.newName5.charAt(this.newName5.length - 4) + this.newName5.charAt(this.newName5.length - 3) + this.newName5.charAt(this.newName5.length - 2) + this.newName5.charAt(this.newName5.length - 1));
            }
            else {
                this.newName5 = (this.newName5.charAt(this.newName5.length - 23) + this.newName5.charAt(this.newName5.length - 22) + this.newName5.charAt(this.newName5.length - 21) + this.newName5.charAt(this.newName5.length - 20) + this.newName5.charAt(this.newName5.length - 19) + this.newName5.charAt(this.newName5.length - 18) + this.newName5.charAt(this.newName5.length - 17) + this.newName5.charAt(this.newName5.length - 16) + this.newName5.charAt(this.newName5.length - 15) + this.newName5.charAt(this.newName5.length - 14) + this.newName5.charAt(this.newName5.length - 13) + this.newName5.charAt(this.newName5.length - 12) + this.newName5.charAt(this.newName5.length - 11) + this.newName5.charAt(this.newName5.length - 10) + this.newName5.charAt(this.newName5.length - 9) + this.newName5.charAt(this.newName5.length - 8) + this.newName5.charAt(this.newName5.length - 7) + this.newName5.charAt(this.newName5.length - 6) + this.newName5.charAt(this.newName5.length - 5) + this.newName5.charAt(this.newName5.length - 4) + this.newName5.charAt(this.newName5.length - 3) + this.newName5.charAt(this.newName5.length - 2) + this.newName5.charAt(this.newName5.length - 1));
            }
        }
        else {
            this.fileToUpload5 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .mp4, .avi, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestNewComponent.prototype.fileChangeEvent6 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi') {
                if (file_path1[0].size > 5000000) {
                    this.fileToUpload1 = undefined;
                    swal("Error!", " El paso de la imagen tiene que ser menor a 5 MB", "error");
                    return;
                }
            }
            this.fileToUpload6 = fileInput.target.files;
            this.newName6 = this.fileToUpload6[0].name;
            if (this.newName6.charAt(this.newName6.length - 24)) {
                this.newName6 = ('...' + this.newName6.charAt(this.newName6.length - 21) + this.newName6.charAt(this.newName6.length - 20) + this.newName6.charAt(this.newName6.length - 19) + this.newName6.charAt(this.newName6.length - 18) + this.newName6.charAt(this.newName6.length - 17) + this.newName6.charAt(this.newName6.length - 16) + this.newName6.charAt(this.newName6.length - 15) + this.newName6.charAt(this.newName6.length - 14) + this.newName6.charAt(this.newName6.length - 13) + this.newName6.charAt(this.newName6.length - 12) + this.newName6.charAt(this.newName6.length - 11) + this.newName6.charAt(this.newName6.length - 10) + this.newName6.charAt(this.newName6.length - 9) + this.newName6.charAt(this.newName6.length - 8) + this.newName6.charAt(this.newName6.length - 7) + this.newName6.charAt(this.newName6.length - 6) + this.newName6.charAt(this.newName6.length - 5) + this.newName6.charAt(this.newName6.length - 4) + this.newName6.charAt(this.newName6.length - 3) + this.newName6.charAt(this.newName6.length - 2) + this.newName6.charAt(this.newName6.length - 1));
            }
            else {
                this.newName6 = (this.newName6.charAt(this.newName6.length - 23) + this.newName6.charAt(this.newName6.length - 22) + this.newName6.charAt(this.newName6.length - 21) + this.newName6.charAt(this.newName6.length - 20) + this.newName6.charAt(this.newName6.length - 19) + this.newName6.charAt(this.newName6.length - 18) + this.newName6.charAt(this.newName6.length - 17) + this.newName6.charAt(this.newName6.length - 16) + this.newName6.charAt(this.newName6.length - 15) + this.newName6.charAt(this.newName6.length - 14) + this.newName6.charAt(this.newName6.length - 13) + this.newName6.charAt(this.newName6.length - 12) + this.newName6.charAt(this.newName6.length - 11) + this.newName6.charAt(this.newName6.length - 10) + this.newName6.charAt(this.newName6.length - 9) + this.newName6.charAt(this.newName6.length - 8) + this.newName6.charAt(this.newName6.length - 7) + this.newName6.charAt(this.newName6.length - 6) + this.newName6.charAt(this.newName6.length - 5) + this.newName6.charAt(this.newName6.length - 4) + this.newName6.charAt(this.newName6.length - 3) + this.newName6.charAt(this.newName6.length - 2) + this.newName6.charAt(this.newName6.length - 1));
            }
        }
        else {
            this.fileToUpload6 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .mp4, .avi, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestNewComponent.prototype.fileChangeEvent7 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi') {
                if (file_path1[0].size > 5000000) {
                    this.fileToUpload1 = undefined;
                    swal("Error!", " El paso de la imagen tiene que ser menor a 5 MB", "error");
                    return;
                }
            }
            this.fileToUpload7 = fileInput.target.files;
            this.newName7 = this.fileToUpload7[0].name;
            if (this.newName7.charAt(this.newName7.length - 24)) {
                this.newName7 = ('...' + this.newName7.charAt(this.newName7.length - 21) + this.newName7.charAt(this.newName7.length - 20) + this.newName7.charAt(this.newName7.length - 19) + this.newName7.charAt(this.newName7.length - 18) + this.newName7.charAt(this.newName7.length - 17) + this.newName7.charAt(this.newName7.length - 16) + this.newName7.charAt(this.newName7.length - 15) + this.newName7.charAt(this.newName7.length - 14) + this.newName7.charAt(this.newName7.length - 13) + this.newName7.charAt(this.newName7.length - 12) + this.newName7.charAt(this.newName7.length - 11) + this.newName7.charAt(this.newName7.length - 10) + this.newName7.charAt(this.newName7.length - 9) + this.newName7.charAt(this.newName7.length - 8) + this.newName7.charAt(this.newName7.length - 7) + this.newName7.charAt(this.newName7.length - 6) + this.newName7.charAt(this.newName7.length - 5) + this.newName7.charAt(this.newName7.length - 4) + this.newName7.charAt(this.newName7.length - 3) + this.newName7.charAt(this.newName7.length - 2) + this.newName7.charAt(this.newName7.length - 1));
            }
            else {
                this.newName7 = (this.newName7.charAt(this.newName7.length - 23) + this.newName7.charAt(this.newName7.length - 22) + this.newName7.charAt(this.newName7.length - 21) + this.newName7.charAt(this.newName7.length - 20) + this.newName7.charAt(this.newName7.length - 19) + this.newName7.charAt(this.newName7.length - 18) + this.newName7.charAt(this.newName7.length - 17) + this.newName7.charAt(this.newName7.length - 16) + this.newName7.charAt(this.newName7.length - 15) + this.newName7.charAt(this.newName7.length - 14) + this.newName7.charAt(this.newName7.length - 13) + this.newName7.charAt(this.newName7.length - 12) + this.newName7.charAt(this.newName7.length - 11) + this.newName7.charAt(this.newName7.length - 10) + this.newName7.charAt(this.newName7.length - 9) + this.newName7.charAt(this.newName7.length - 8) + this.newName7.charAt(this.newName7.length - 7) + this.newName7.charAt(this.newName7.length - 6) + this.newName7.charAt(this.newName7.length - 5) + this.newName7.charAt(this.newName7.length - 4) + this.newName7.charAt(this.newName7.length - 3) + this.newName7.charAt(this.newName7.length - 2) + this.newName7.charAt(this.newName7.length - 1));
            }
        }
        else {
            this.fileToUpload7 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .mp4, .avi, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestNewComponent.prototype.fileChangeEvent8 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi') {
                if (file_path1[0].size > 5000000) {
                    this.fileToUpload1 = undefined;
                    swal("Error!", " El paso de la imagen tiene que ser menor a 5 MB", "error");
                    return;
                }
            }
            this.fileToUpload8 = fileInput.target.files;
            this.newName8 = this.fileToUpload8[0].name;
            if (this.newName8.charAt(this.newName8.length - 24)) {
                this.newName8 = ('...' + this.newName8.charAt(this.newName8.length - 21) + this.newName8.charAt(this.newName8.length - 20) + this.newName8.charAt(this.newName8.length - 19) + this.newName8.charAt(this.newName8.length - 18) + this.newName8.charAt(this.newName8.length - 17) + this.newName8.charAt(this.newName8.length - 16) + this.newName8.charAt(this.newName8.length - 15) + this.newName8.charAt(this.newName8.length - 14) + this.newName8.charAt(this.newName8.length - 13) + this.newName8.charAt(this.newName8.length - 12) + this.newName8.charAt(this.newName8.length - 11) + this.newName8.charAt(this.newName8.length - 10) + this.newName8.charAt(this.newName8.length - 9) + this.newName8.charAt(this.newName8.length - 8) + this.newName8.charAt(this.newName8.length - 7) + this.newName8.charAt(this.newName8.length - 6) + this.newName8.charAt(this.newName8.length - 5) + this.newName8.charAt(this.newName8.length - 4) + this.newName8.charAt(this.newName8.length - 3) + this.newName8.charAt(this.newName8.length - 2) + this.newName8.charAt(this.newName8.length - 1));
            }
            else {
                this.newName8 = (this.newName8.charAt(this.newName8.length - 23) + this.newName8.charAt(this.newName8.length - 22) + this.newName8.charAt(this.newName8.length - 21) + this.newName8.charAt(this.newName8.length - 20) + this.newName8.charAt(this.newName8.length - 19) + this.newName8.charAt(this.newName8.length - 18) + this.newName8.charAt(this.newName8.length - 17) + this.newName8.charAt(this.newName8.length - 16) + this.newName8.charAt(this.newName8.length - 15) + this.newName8.charAt(this.newName8.length - 14) + this.newName8.charAt(this.newName8.length - 13) + this.newName8.charAt(this.newName8.length - 12) + this.newName8.charAt(this.newName8.length - 11) + this.newName8.charAt(this.newName8.length - 10) + this.newName8.charAt(this.newName8.length - 9) + this.newName8.charAt(this.newName8.length - 8) + this.newName8.charAt(this.newName8.length - 7) + this.newName8.charAt(this.newName8.length - 6) + this.newName8.charAt(this.newName8.length - 5) + this.newName8.charAt(this.newName8.length - 4) + this.newName8.charAt(this.newName8.length - 3) + this.newName8.charAt(this.newName8.length - 2) + this.newName8.charAt(this.newName8.length - 1));
            }
        }
        else {
            this.fileToUpload8 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .mp4, .avi, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestNewComponent.prototype.fileChangeEvent9 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi') {
                if (file_path1[0].size > 5000000) {
                    this.fileToUpload1 = undefined;
                    swal("Error!", " El paso de la imagen tiene que ser menor a 5 MB", "error");
                    return;
                }
            }
            this.fileToUpload9 = fileInput.target.files;
            this.newName9 = this.fileToUpload9[0].name;
            if (this.newName9.charAt(this.newName9.length - 24)) {
                this.newName9 = ('...' + this.newName9.charAt(this.newName9.length - 21) + this.newName9.charAt(this.newName9.length - 20) + this.newName9.charAt(this.newName9.length - 19) + this.newName9.charAt(this.newName9.length - 18) + this.newName9.charAt(this.newName9.length - 17) + this.newName9.charAt(this.newName9.length - 16) + this.newName9.charAt(this.newName9.length - 15) + this.newName9.charAt(this.newName9.length - 14) + this.newName9.charAt(this.newName9.length - 13) + this.newName9.charAt(this.newName9.length - 12) + this.newName9.charAt(this.newName9.length - 11) + this.newName9.charAt(this.newName9.length - 10) + this.newName9.charAt(this.newName9.length - 9) + this.newName9.charAt(this.newName9.length - 8) + this.newName9.charAt(this.newName9.length - 7) + this.newName9.charAt(this.newName9.length - 6) + this.newName9.charAt(this.newName9.length - 5) + this.newName9.charAt(this.newName9.length - 4) + this.newName9.charAt(this.newName9.length - 3) + this.newName9.charAt(this.newName9.length - 2) + this.newName9.charAt(this.newName9.length - 1));
            }
            else {
                this.newName9 = (this.newName9.charAt(this.newName9.length - 23) + this.newName9.charAt(this.newName9.length - 22) + this.newName9.charAt(this.newName9.length - 21) + this.newName9.charAt(this.newName9.length - 20) + this.newName9.charAt(this.newName9.length - 19) + this.newName9.charAt(this.newName9.length - 18) + this.newName9.charAt(this.newName9.length - 17) + this.newName9.charAt(this.newName9.length - 16) + this.newName9.charAt(this.newName9.length - 15) + this.newName9.charAt(this.newName9.length - 14) + this.newName9.charAt(this.newName9.length - 13) + this.newName9.charAt(this.newName9.length - 12) + this.newName9.charAt(this.newName9.length - 11) + this.newName9.charAt(this.newName9.length - 10) + this.newName9.charAt(this.newName9.length - 9) + this.newName9.charAt(this.newName9.length - 8) + this.newName9.charAt(this.newName9.length - 7) + this.newName9.charAt(this.newName9.length - 6) + this.newName9.charAt(this.newName9.length - 5) + this.newName9.charAt(this.newName9.length - 4) + this.newName9.charAt(this.newName9.length - 3) + this.newName9.charAt(this.newName9.length - 2) + this.newName9.charAt(this.newName9.length - 1));
            }
        }
        else {
            this.fileToUpload9 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .mp4, .avi, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestNewComponent.prototype.fileChangeEvent10 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi') {
                if (file_path1[0].size > 5000000) {
                    this.fileToUpload1 = undefined;
                    swal("Error!", " El paso de la imagen tiene que ser menor a 5 MB", "error");
                    return;
                }
            }
            this.fileToUpload10 = fileInput.target.files;
            this.newName10 = this.fileToUpload10[0].name;
            if (this.newName10.charAt(this.newName10.length - 24)) {
                this.newName10 = ('...' + this.newName10.charAt(this.newName10.length - 21) + this.newName10.charAt(this.newName10.length - 20) + this.newName10.charAt(this.newName10.length - 19) + this.newName10.charAt(this.newName10.length - 18) + this.newName10.charAt(this.newName10.length - 17) + this.newName10.charAt(this.newName10.length - 16) + this.newName10.charAt(this.newName10.length - 15) + this.newName10.charAt(this.newName10.length - 14) + this.newName10.charAt(this.newName10.length - 13) + this.newName10.charAt(this.newName10.length - 12) + this.newName10.charAt(this.newName10.length - 11) + this.newName10.charAt(this.newName10.length - 10) + this.newName10.charAt(this.newName10.length - 9) + this.newName10.charAt(this.newName10.length - 8) + this.newName10.charAt(this.newName10.length - 7) + this.newName10.charAt(this.newName10.length - 6) + this.newName10.charAt(this.newName10.length - 5) + this.newName10.charAt(this.newName10.length - 4) + this.newName10.charAt(this.newName10.length - 3) + this.newName10.charAt(this.newName10.length - 2) + this.newName10.charAt(this.newName10.length - 1));
            }
            else {
                this.newName10 = (this.newName10.charAt(this.newName10.length - 23) + this.newName10.charAt(this.newName10.length - 22) + this.newName10.charAt(this.newName10.length - 21) + this.newName10.charAt(this.newName10.length - 20) + this.newName10.charAt(this.newName10.length - 19) + this.newName10.charAt(this.newName10.length - 18) + this.newName10.charAt(this.newName10.length - 17) + this.newName10.charAt(this.newName10.length - 16) + this.newName10.charAt(this.newName10.length - 15) + this.newName10.charAt(this.newName10.length - 14) + this.newName10.charAt(this.newName10.length - 13) + this.newName10.charAt(this.newName10.length - 12) + this.newName10.charAt(this.newName10.length - 11) + this.newName10.charAt(this.newName10.length - 10) + this.newName10.charAt(this.newName10.length - 9) + this.newName10.charAt(this.newName10.length - 8) + this.newName10.charAt(this.newName10.length - 7) + this.newName10.charAt(this.newName10.length - 6) + this.newName10.charAt(this.newName10.length - 5) + this.newName10.charAt(this.newName10.length - 4) + this.newName10.charAt(this.newName10.length - 3) + this.newName10.charAt(this.newName10.length - 2) + this.newName10.charAt(this.newName10.length - 1));
            }
        }
        else {
            this.fileToUpload10 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .mp4, .avi, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestNewComponent.prototype.fileChangeEvent11 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi') {
                if (file_path1[0].size > 5000000) {
                    this.fileToUpload1 = undefined;
                    swal("Error!", " El paso de la imagen tiene que ser menor a 5 MB", "error");
                    return;
                }
            }
            this.fileToUpload11 = fileInput.target.files;
            this.newName11 = this.fileToUpload11[0].name;
            if (this.newName11.charAt(this.newName11.length - 24)) {
                this.newName11 = ('...' + this.newName11.charAt(this.newName11.length - 21) + this.newName11.charAt(this.newName11.length - 20) + this.newName11.charAt(this.newName11.length - 19) + this.newName11.charAt(this.newName11.length - 18) + this.newName11.charAt(this.newName11.length - 17) + this.newName11.charAt(this.newName11.length - 16) + this.newName11.charAt(this.newName11.length - 15) + this.newName11.charAt(this.newName11.length - 14) + this.newName11.charAt(this.newName11.length - 13) + this.newName11.charAt(this.newName11.length - 12) + this.newName11.charAt(this.newName11.length - 11) + this.newName11.charAt(this.newName11.length - 10) + this.newName11.charAt(this.newName11.length - 9) + this.newName11.charAt(this.newName11.length - 8) + this.newName11.charAt(this.newName11.length - 7) + this.newName11.charAt(this.newName11.length - 6) + this.newName11.charAt(this.newName11.length - 5) + this.newName11.charAt(this.newName11.length - 4) + this.newName11.charAt(this.newName11.length - 3) + this.newName11.charAt(this.newName11.length - 2) + this.newName11.charAt(this.newName11.length - 1));
            }
            else {
                this.newName11 = (this.newName11.charAt(this.newName11.length - 23) + this.newName11.charAt(this.newName11.length - 22) + this.newName11.charAt(this.newName11.length - 21) + this.newName11.charAt(this.newName11.length - 20) + this.newName11.charAt(this.newName11.length - 19) + this.newName11.charAt(this.newName11.length - 18) + this.newName11.charAt(this.newName11.length - 17) + this.newName11.charAt(this.newName11.length - 16) + this.newName11.charAt(this.newName11.length - 15) + this.newName11.charAt(this.newName11.length - 14) + this.newName11.charAt(this.newName11.length - 13) + this.newName11.charAt(this.newName11.length - 12) + this.newName11.charAt(this.newName11.length - 11) + this.newName11.charAt(this.newName11.length - 10) + this.newName11.charAt(this.newName11.length - 9) + this.newName11.charAt(this.newName11.length - 8) + this.newName11.charAt(this.newName11.length - 7) + this.newName11.charAt(this.newName11.length - 6) + this.newName11.charAt(this.newName11.length - 5) + this.newName11.charAt(this.newName11.length - 4) + this.newName11.charAt(this.newName11.length - 3) + this.newName11.charAt(this.newName11.length - 2) + this.newName11.charAt(this.newName11.length - 1));
            }
        }
        else {
            this.fileToUpload11 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .mp4, .avi, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestNewComponent.prototype.fileChangeEvent12 = function (fileInput) {
        var fileToUploads1 = fileInput.target.files;
        var file_path1 = fileToUploads1;
        var file_path2 = file_path1[0].name.split(/[\\/.]+/g);
        if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi' || file_path2[file_path2.length - 1] == 'pdf' || file_path2[file_path2.length - 1] == 'xls' || file_path2[file_path2.length - 1] == 'xlsx' || file_path2[file_path2.length - 1] == 'csv' || file_path2[file_path2.length - 1] == 'doc' || file_path2[file_path2.length - 1] == 'docx' || file_path2[file_path2.length - 1] == 'ppt' || file_path2[file_path2.length - 1] == 'pptx' || file_path2[file_path2.length - 1] == 'txt') {
            if (file_path2[file_path2.length - 1] == 'png' || file_path2[file_path2.length - 1] == 'PNG' || file_path2[file_path2.length - 1] == 'jpg' || file_path2[file_path2.length - 1] == 'jpeg' || file_path2[file_path2.length - 1] == 'gif' || file_path2[file_path2.length - 1] == 'mp4' || file_path2[file_path2.length - 1] == 'mov' || file_path2[file_path2.length - 1] == 'avi') {
                if (file_path1[0].size > 5000000) {
                    this.fileToUpload1 = undefined;
                    swal("Error!", " El paso de la imagen tiene que ser menor a 5 MB", "error");
                    return;
                }
            }
            this.fileToUpload12 = fileInput.target.files;
            this.newName12 = this.fileToUpload12[0].name;
            if (this.newName12.charAt(this.newName12.length - 24)) {
                this.newName12 = ('...' + this.newName12.charAt(this.newName12.length - 21) + this.newName12.charAt(this.newName12.length - 20) + this.newName12.charAt(this.newName12.length - 19) + this.newName12.charAt(this.newName12.length - 18) + this.newName12.charAt(this.newName12.length - 17) + this.newName12.charAt(this.newName12.length - 16) + this.newName12.charAt(this.newName12.length - 15) + this.newName12.charAt(this.newName12.length - 14) + this.newName12.charAt(this.newName12.length - 13) + this.newName12.charAt(this.newName12.length - 12) + this.newName12.charAt(this.newName12.length - 11) + this.newName12.charAt(this.newName12.length - 10) + this.newName12.charAt(this.newName12.length - 9) + this.newName12.charAt(this.newName12.length - 8) + this.newName12.charAt(this.newName12.length - 7) + this.newName12.charAt(this.newName12.length - 6) + this.newName12.charAt(this.newName12.length - 5) + this.newName12.charAt(this.newName12.length - 4) + this.newName12.charAt(this.newName12.length - 3) + this.newName12.charAt(this.newName12.length - 2) + this.newName12.charAt(this.newName12.length - 1));
            }
            else {
                this.newName12 = (this.newName12.charAt(this.newName12.length - 23) + this.newName12.charAt(this.newName12.length - 22) + this.newName12.charAt(this.newName12.length - 21) + this.newName12.charAt(this.newName12.length - 20) + this.newName12.charAt(this.newName12.length - 19) + this.newName12.charAt(this.newName12.length - 18) + this.newName12.charAt(this.newName12.length - 17) + this.newName12.charAt(this.newName12.length - 16) + this.newName12.charAt(this.newName12.length - 15) + this.newName12.charAt(this.newName12.length - 14) + this.newName12.charAt(this.newName12.length - 13) + this.newName12.charAt(this.newName12.length - 12) + this.newName12.charAt(this.newName12.length - 11) + this.newName12.charAt(this.newName12.length - 10) + this.newName12.charAt(this.newName12.length - 9) + this.newName12.charAt(this.newName12.length - 8) + this.newName12.charAt(this.newName12.length - 7) + this.newName12.charAt(this.newName12.length - 6) + this.newName12.charAt(this.newName12.length - 5) + this.newName12.charAt(this.newName12.length - 4) + this.newName12.charAt(this.newName12.length - 3) + this.newName12.charAt(this.newName12.length - 2) + this.newName12.charAt(this.newName12.length - 1));
            }
        }
        else {
            this.fileToUpload12 = undefined;
            swal("Error!", "Extencion del archivo no valido, solo se permite .png, .jpg, .jpeg, .gif, .mp4, .avi, .pdf, .xls, .xlsx, .csv, .doc, .docx, .ppt, .pptx, .txt", "error");
        }
    };
    RequestNewComponent.prototype.makeFileRequest = function (url, params, files) {
        var token = this.token;
        return new Promise(function (resolve, reject) {
            var formData = new FormData();
            var xhr = new XMLHttpRequest();
            for (var i = 0; i < files.length; i++) {
                formData.append("image", files[i], files[i].name);
            }
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4) {
                    if (xhr.status == 200) {
                        resolve(JSON.parse(xhr.response));
                    }
                    else {
                        reject(xhr.response);
                    }
                }
            };
            xhr.open("POST", url, true);
            xhr.setRequestHeader("Authorization", token);
            xhr.send(formData);
        });
    };
    RequestNewComponent.prototype.imgCancel1 = function () {
        this.fileToUpload1 = undefined;
        this.fileToUpload2 = undefined;
        this.fileToUpload3 = undefined;
        this.fileToUpload4 = undefined;
        this.fileToUpload5 = undefined;
        this.fileToUpload6 = undefined;
        this.fileToUpload7 = undefined;
        this.fileToUpload8 = undefined;
        this.fileToUpload9 = undefined;
        this.fileToUpload10 = undefined;
        this.fileToUpload11 = undefined;
        this.fileToUpload12 = undefined;
    };
    RequestNewComponent.prototype.imgCancel2 = function () {
        this.fileToUpload2 = undefined;
        this.fileToUpload3 = undefined;
        this.fileToUpload4 = undefined;
        this.fileToUpload5 = undefined;
        this.fileToUpload6 = undefined;
        this.fileToUpload7 = undefined;
        this.fileToUpload8 = undefined;
        this.fileToUpload9 = undefined;
        this.fileToUpload10 = undefined;
        this.fileToUpload11 = undefined;
        this.fileToUpload12 = undefined;
    };
    RequestNewComponent.prototype.imgCancel3 = function () {
        this.fileToUpload3 = undefined;
        this.fileToUpload4 = undefined;
        this.fileToUpload5 = undefined;
        this.fileToUpload6 = undefined;
        this.fileToUpload7 = undefined;
        this.fileToUpload8 = undefined;
        this.fileToUpload9 = undefined;
        this.fileToUpload10 = undefined;
        this.fileToUpload11 = undefined;
        this.fileToUpload12 = undefined;
    };
    RequestNewComponent.prototype.imgCancel4 = function () {
        this.fileToUpload4 = undefined;
        this.fileToUpload5 = undefined;
        this.fileToUpload6 = undefined;
        this.fileToUpload7 = undefined;
        this.fileToUpload8 = undefined;
        this.fileToUpload9 = undefined;
        this.fileToUpload10 = undefined;
        this.fileToUpload11 = undefined;
        this.fileToUpload12 = undefined;
    };
    RequestNewComponent.prototype.imgCancel5 = function () {
        this.fileToUpload5 = undefined;
        this.fileToUpload6 = undefined;
        this.fileToUpload7 = undefined;
        this.fileToUpload8 = undefined;
        this.fileToUpload9 = undefined;
        this.fileToUpload10 = undefined;
        this.fileToUpload11 = undefined;
        this.fileToUpload12 = undefined;
    };
    RequestNewComponent.prototype.imgCancel6 = function () {
        this.fileToUpload6 = undefined;
        this.fileToUpload7 = undefined;
        this.fileToUpload8 = undefined;
        this.fileToUpload9 = undefined;
        this.fileToUpload10 = undefined;
        this.fileToUpload11 = undefined;
        this.fileToUpload12 = undefined;
    };
    RequestNewComponent.prototype.imgCancel7 = function () {
        this.fileToUpload7 = undefined;
        this.fileToUpload8 = undefined;
        this.fileToUpload9 = undefined;
        this.fileToUpload10 = undefined;
        this.fileToUpload11 = undefined;
        this.fileToUpload12 = undefined;
    };
    RequestNewComponent.prototype.imgCancel8 = function () {
        this.fileToUpload8 = undefined;
        this.fileToUpload9 = undefined;
        this.fileToUpload10 = undefined;
        this.fileToUpload11 = undefined;
        this.fileToUpload12 = undefined;
    };
    RequestNewComponent.prototype.imgCancel9 = function () {
        this.fileToUpload9 = undefined;
        this.fileToUpload10 = undefined;
        this.fileToUpload11 = undefined;
        this.fileToUpload12 = undefined;
    };
    RequestNewComponent.prototype.imgCancel10 = function () {
        this.fileToUpload10 = undefined;
        this.fileToUpload11 = undefined;
        this.fileToUpload12 = undefined;
    };
    RequestNewComponent.prototype.imgCancel11 = function () {
        this.fileToUpload11 = undefined;
        this.fileToUpload12 = undefined;
    };
    RequestNewComponent.prototype.imgCancel12 = function () {
        this.fileToUpload12 = undefined;
    };
    RequestNewComponent.prototype.onClickdismis = function () {
        this.table = "original";
    };
    RequestNewComponent.prototype.onClickmore = function () {
        this.table = "segunda";
    };
    RequestNewComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'requestNew',
            template: __webpack_require__(1062),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */], __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__["a" /* RequestNewService */], __WEBPACK_IMPORTED_MODULE_3__services_upload_service__["a" /* UploadService */], __WEBPACK_IMPORTED_MODULE_10__services_requestProces_service__["a" /* RequestProcesService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__["a" /* RequestNewService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__services_requestNew_service__["a" /* RequestNewService */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3__services_upload_service__["a" /* UploadService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__services_upload_service__["a" /* UploadService */]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_5__angular_http__["c" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_5__angular_http__["c" /* Http */]) === 'function' && _d) || Object, (typeof (_e = typeof __WEBPACK_IMPORTED_MODULE_8__angular_platform_browser__["c" /* DomSanitizer */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_8__angular_platform_browser__["c" /* DomSanitizer */]) === 'function' && _e) || Object, (typeof (_f = typeof __WEBPACK_IMPORTED_MODULE_10__services_requestProces_service__["a" /* RequestProcesService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_10__services_requestProces_service__["a" /* RequestProcesService */]) === 'function' && _f) || Object])
    ], RequestNewComponent);
    return RequestNewComponent;
    var _a, _b, _c, _d, _e, _f;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/requestNew.component.js.map

/***/ }),

/***/ 437:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_xlsx__ = __webpack_require__(332);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_file_saver__ = __webpack_require__(302);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_file_saver___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_file_saver__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RequestProcesComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var swal = __webpack_require__(20);
var momentTimezone = __webpack_require__(303);
var RequestProcesComponent = (function () {
    function RequestProcesComponent(_userService, _requestProcesService) {
        this._userService = _userService;
        this._requestProcesService = _requestProcesService;
        this.sortBy1 = "dateOfReport";
        this.sortBy2 = "dateOfReport";
        this.sortBy3 = "dateOfReport";
        this.sortBy4 = "dateOfReport";
        this.sortBy5 = "dateOfReport";
        this.sortBy6 = "dateOfReport";
        this.sortBy7 = "dateOfReport";
        this.sortBy8 = "dateOfReport";
        this.sortBy9 = "dateOfReport";
        this.search = [];
        this.title = 'REQUERIMIENTOS EN PROCESO';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.inProcess = [];
        this.inPending = [];
        this.inProcessNew = [];
        this.inPendingNew = [];
        this.inProcessCallCenter = [];
        this.inPendingCallCenter = [];
        this.inProcessInProgres = [];
        this.oldDataPanding = [];
        this.oldDataProcess = [];
        this.inPendingCopiados = [];
        this.oldDataPandingCopiados = [];
        this.inProcessCopiados = [];
        this.oldDataProcessCopiados = [];
        this.oldDataPandingNew = [];
        this.oldDataProcessNew = [];
        this.oldDataPandingCallCenter = [];
        this.oldDataProcessCallCenter = [];
        this.oldDataInProcessInProgres = [];
        this.issue = '';
        this.load = false;
    }
    RequestProcesComponent.prototype.momentTime = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('YYYY-MM-DD / HH:mm');
        else
            return '';
    };
    RequestProcesComponent.prototype.momentTimeDate = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('YYYY-MM-DD');
        else
            return '';
    };
    RequestProcesComponent.prototype.momentTimeHour = function (date) {
        if (date)
            return __WEBPACK_IMPORTED_MODULE_3_moment__(date).format('HH:mm');
        else
            return '';
    };
    RequestProcesComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.load = true;
        if (this.identity.type != 'callCenter') {
            this.table = 1;
            this._requestProcesService.getAnswers(this.identity).subscribe(function (response) {
                for (var i = 0; i < response.length; i++) {
                    if (_this.identity.type != "local" && _this.identity.type != "areaManager") {
                        if (response[i].issueMore && response[i].issueMore.zonesToAnalyst && response[i].issueMore.zonesToAnalyst.porEstado == true) {
                            if (response[i].issueMore.zonesNL && response[i].issueMore.zonesNL.zonesNLAnalyst.includes(_this.identity._id)) {
                                if (response[i].status == "Solucionado") {
                                }
                                else {
                                    if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                        _this.inPending.push(response[i]);
                                        _this.oldDataPanding.push(response[i]);
                                    }
                                    else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                        _this.inProcess.push(response[i]);
                                        _this.oldDataProcess.push(response[i]);
                                    }
                                    else if (response[i].status == "Asignado" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                        _this.inProcess.push(response[i]);
                                        _this.oldDataProcess.push(response[i]);
                                    }
                                }
                            }
                            else {
                                if (response[i].issueMore.zonesNL && response[i].issueMore.zonesNL.zonesNLCopiados.includes(_this.identity._id)) {
                                    if (response[i].status == "Solucionado") {
                                    }
                                    else {
                                        if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                            _this.inPendingCopiados.push(response[i]);
                                            _this.oldDataPandingCopiados.push(response[i]);
                                        }
                                        else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                            _this.inProcessCopiados.push(response[i]);
                                            _this.oldDataProcessCopiados.push(response[i]);
                                        }
                                        else if (response[i].status == "Asignado" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                            _this.inProcess.push(response[i]);
                                            _this.oldDataProcess.push(response[i]);
                                        }
                                    }
                                }
                                else {
                                    if (response[i].issueMore.zonesCoahila && response[i].issueMore.zonesCoahila.zonesCoahilaAnalyst.includes(_this.identity._id)) {
                                        if (response[i].status == "Solucionado") {
                                        }
                                        else {
                                            if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                _this.inPending.push(response[i]);
                                                _this.oldDataPanding.push(response[i]);
                                            }
                                            else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                _this.inProcess.push(response[i]);
                                                _this.oldDataProcess.push(response[i]);
                                            }
                                            else if (response[i].status == "Asignado" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                _this.inProcess.push(response[i]);
                                                _this.oldDataProcess.push(response[i]);
                                            }
                                        }
                                    }
                                    else {
                                        if (response[i].issueMore.zonesCoahila && response[i].issueMore.zonesCoahila.zonesCoahilaCopiados.includes(_this.identity._id)) {
                                            if (response[i].status == "Solucionado") {
                                            }
                                            else {
                                                if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                    _this.inPendingCopiados.push(response[i]);
                                                    _this.oldDataPandingCopiados.push(response[i]);
                                                }
                                                else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                    _this.inProcessCopiados.push(response[i]);
                                                    _this.oldDataProcessCopiados.push(response[i]);
                                                }
                                                else if (response[i].status == "Asignado" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                    _this.inProcess.push(response[i]);
                                                    _this.oldDataProcess.push(response[i]);
                                                }
                                            }
                                        }
                                        else {
                                            if (response[i].issueMore.zonesQueretaro && response[i].issueMore.zonesQueretaro.zonesQueretaroAnalyst.includes(_this.identity._id)) {
                                                if (response[i].status == "Solucionado") {
                                                }
                                                else {
                                                    if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                        _this.inPending.push(response[i]);
                                                        _this.oldDataPanding.push(response[i]);
                                                    }
                                                    else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                        _this.inProcess.push(response[i]);
                                                        _this.oldDataProcess.push(response[i]);
                                                    }
                                                    else if (response[i].status == "Asignado" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                        _this.inProcess.push(response[i]);
                                                        _this.oldDataProcess.push(response[i]);
                                                    }
                                                }
                                            }
                                            else {
                                                if (response[i].issueMore.zonesQueretaro && response[i].issueMore.zonesQueretaro.zonesQueretaroCopiados.includes(_this.identity._id)) {
                                                    if (response[i].status == "Solucionado") {
                                                    }
                                                    else {
                                                        if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                            _this.inPendingCopiados.push(response[i]);
                                                            _this.oldDataPandingCopiados.push(response[i]);
                                                        }
                                                        else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                            _this.inProcessCopiados.push(response[i]);
                                                            _this.oldDataProcessCopiados.push(response[i]);
                                                        }
                                                        else if (response[i].status == "Asignado" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                            _this.inProcess.push(response[i]);
                                                            _this.oldDataProcess.push(response[i]);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            if (response[i].issueMore.emailToSendAnalist.includes(_this.identity._id)) {
                                if (response[i].status == "Solucionado") {
                                }
                                else {
                                    if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                        _this.inPending.push(response[i]);
                                        _this.oldDataPanding.push(response[i]);
                                    }
                                    else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                        _this.inProcess.push(response[i]);
                                        _this.oldDataProcess.push(response[i]);
                                    }
                                    else if (response[i].status == "Asignado" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                        _this.inProcess.push(response[i]);
                                        _this.oldDataProcess.push(response[i]);
                                    }
                                }
                            }
                            else {
                                if (response[i].status == "Solucionado") {
                                }
                                else {
                                    if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                        _this.inPendingCopiados.push(response[i]);
                                        _this.oldDataPandingCopiados.push(response[i]);
                                    }
                                    else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                        _this.inProcessCopiados.push(response[i]);
                                        _this.oldDataProcessCopiados.push(response[i]);
                                    }
                                    else if (response[i].status == "Asignado" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                        _this.inProcess.push(response[i]);
                                        _this.oldDataProcess.push(response[i]);
                                    }
                                }
                            }
                        }
                    }
                    else {
                        if (response[i].status == "Solucionado") {
                        }
                        else {
                            if ((response[i].status == "Pendiente" || response[i].statusCallCenter == "PendienteCallCenter") && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                _this.inPending.push(response[i]);
                                _this.oldDataPanding.push(response[i]);
                            }
                            else if ((response[i].status == "Nuevo" || response[i].statusCallCenter == "NuevoCallCenter") && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                _this.inProcess.push(response[i]);
                                _this.oldDataProcess.push(response[i]);
                            }
                            else if (response[i].status == "Asignado" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                _this.inProcess.push(response[i]);
                                _this.oldDataProcess.push(response[i]);
                            }
                        }
                    }
                }
                ;
                response.forEach(function (element, indice) {
                    if (element.dateAssignmentCallCenter && _this.identity.type != "local" && _this.identity.type != "callCenter" && _this.identity.type != "areaManager") {
                        response[indice].dateOfReport = element.dateAssignmentCallCenter;
                        response[indice].dateOfReport1 = response[indice].dateOfReport;
                        element.dateOfReport = response[indice].dateOfReport;
                        if (element.dateAssignmentCallCenter && element.dateAssignmentCallCenter != null) {
                            response[indice].dateOfReport = element.dateAssignmentCallCenter;
                            element.dateOfReport = element.dateAssignmentCallCenter;
                        }
                    }
                    if (element.notes && element.notes.length > 0) {
                        // los que tienen mensajes en bitacora
                        var ars = 0;
                        element.notes.forEach(function (elementNote, indiceNote) {
                            if (elementNote.esperaRespuesta && elementNote.esperaRespuesta == true) {
                                // los que tienen minimo un "en espera de respuesta" 
                                if (elementNote.noteBy.indexOf("Call") >= 0) {
                                    ffinal = momentTimezone().tz('America/Monterrey');
                                    ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                                    momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                                    var momentDia2 = parseInt(momentDia);
                                }
                                else {
                                    if (element.notes[indiceNote + 1]) {
                                        // los que tienen mas mensajes
                                        var start = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey');
                                        var end = momentTimezone(element.notes[indiceNote + 1].dateOfNote).tz('America/Monterrey');
                                        var minutos = end.diff(start, 'minutes');
                                        ars = ars + minutos;
                                    }
                                    else {
                                        // --- este es el ultimo mensaje urgente
                                        ffinal = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey');
                                        ahora = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey').format('HH');
                                        momentDia = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey').format('DD');
                                        var momentDia2 = parseInt(momentDia);
                                    }
                                }
                            }
                            else {
                                // ---- cuando tienen mensajes pero el ultimo es el que no urge
                                ffinal = momentTimezone().tz('America/Monterrey');
                                ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                                momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                                var momentDia2 = parseInt(momentDia);
                            }
                        });
                    }
                    else {
                        // ---- los que no tienen ningun mensaje
                        var ffinal = momentTimezone().tz('America/Monterrey');
                        var ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                        var ars = 0;
                        var momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                        var momentDia2 = parseInt(momentDia);
                    }
                    var fechaFinal = momentTimezone(element.dateOfReport).tz('America/Monterrey').add(ars, 'minutes');
                    element.dateOfReport = fechaFinal;
                    var totalHorasRestadas = 0;
                    var totalMinRestadas = 0;
                    var finicial = momentTimezone(element.dateOfReport).tz('America/Monterrey');
                    var minutos = ffinal.diff(finicial, 'minutes');
                    var arr = (minutos / 60).toString().split(".");
                    var ar = parseInt(arr[0]);
                    var astring = (ar / 24).toString();
                    var totalDias = parseInt(astring, 10);
                    var puraHora = momentTimezone(element.dateOfReport).tz('America/Monterrey').format('HH');
                    var horario1 = momentTimezone('2023-04-26T14:00:00.000+00:00').tz('America/Monterrey').format('HH');
                    var horario2 = momentTimezone('2023-04-27T02:00:00.000+00:00').tz('America/Monterrey').format('HH');
                    if (totalDias >= 1) {
                        // todos los que son mayores a dos dias
                        totalDias = totalDias;
                        for (var i = 0; i < totalDias; i++) {
                            totalHorasRestadas = totalHorasRestadas + 12;
                        }
                        if (totalHorasRestadas == 12 && ar < 48) {
                            if (puraHora >= horario1 && puraHora <= horario2) {
                                totalHorasTrabajadas = (ar - (6 * (ar / 12)));
                            }
                            else {
                                if (puraHora < horario1) {
                                    if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                        totalHorasTrabajadas = (parseInt(ahora) - parseInt(horario1));
                                    }
                                    else {
                                        totalHorasTrabajadas = totalHorasRestadas + (parseInt(ahora) - parseInt(horario1));
                                    }
                                }
                                else {
                                    if (puraHora > horario2) {
                                        if (ahora < "08") {
                                            totalHorasTrabajadas = totalHorasRestadas;
                                        }
                                        else {
                                            if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == ((momentDia2) - 1).toString()) {
                                                totalHorasTrabajadas = totalHorasRestadas;
                                            }
                                            else {
                                                totalHorasTrabajadas = totalHorasRestadas + (parseInt(ahora) - parseInt(horario1));
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            var cosaRara = (((ar / totalHorasRestadas).toFixed(2)).toString()).split(".");
                            if (puraHora < horario1) {
                                totalHorasRestadas = totalHorasRestadas + ((parseInt(horario1) - parseInt(puraHora)));
                            }
                            else {
                                if (puraHora > horario2) {
                                    var newss = parseFloat(0 + "." + cosaRara[1]);
                                    totalHorasRestadas = (totalHorasRestadas) + (parseInt(ahora) - parseInt(horario1));
                                }
                            }
                            if (puraHora >= horario1 && puraHora <= horario2) {
                                if (puraHora > ahora) {
                                    totalHorasRestadas = totalHorasRestadas + ((parseInt(horario2) - parseInt(puraHora)) + parseInt(ahora) - parseInt(horario1));
                                }
                            }
                        }
                    }
                    else {
                        if (puraHora >= horario1 && puraHora <= horario2) {
                            if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                            }
                            else {
                                if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                    var totalHorasTrabajadas = ((parseInt(horario2) - parseInt(puraHora)));
                                }
                                else {
                                    var totalHorasTrabajadas = ((parseInt(ahora) - parseInt(horario1)) + (parseInt(horario2) - parseInt(puraHora)));
                                }
                            }
                        }
                        else {
                            // fuera de hora
                            if (puraHora < horario1) {
                                totalHorasRestadas = parseInt(horario1) - parseInt(puraHora);
                            }
                            else {
                                totalHorasRestadas = ((parseInt(momentTimezone('2023-04-26T04:00:00.000+00:00').tz('America/Monterrey').format('HH'))) - (parseInt(puraHora) - (parseInt(momentTimezone('2023-04-26T06:00:00.000+00:00').tz('America/Monterrey').format('HH')))));
                                totalHorasRestadas = totalHorasRestadas + 8;
                            }
                        }
                    }
                    if (totalHorasTrabajadas) {
                        totalMinRestadas = totalHorasTrabajadas * 60;
                        var newMinutos = totalMinRestadas;
                    }
                    else {
                        totalMinRestadas = totalHorasRestadas * 60;
                        var newMinutos = minutos - totalMinRestadas;
                    }
                    var arr = (newMinutos / 60).toString().split(".");
                    var ar = parseInt(arr[0]);
                    var astring = (ar / 24).toString();
                    var totalDias = parseInt(astring, 10);
                    var sums = 0;
                    for (var i = 0; i < parseInt(arr[0]); i++) {
                        var sums = sums + 60;
                    }
                    ;
                    response[indice].tiempos = arr[0] + ' h ' + (newMinutos - sums).toString() + ' m';
                    if (parseInt(arr[0]) > element.issue.sla) {
                        response[indice].color = "yellow";
                    }
                    if (element.issue.sla) {
                        var menos = element.issue.sla - parseInt(arr[0]);
                        response[indice].restantes = menos + " h";
                    }
                    if (!element.reportBy.name)
                        element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                    if (parseInt(arr[0]) > element.issue.sla) {
                        response[indice].pasado = "red";
                    }
                    else {
                        response[indice].pasado = "green";
                    }
                    if (element.analyst) {
                        response[indice].analyst.fnames = element.analyst.fname + element.analyst.lname;
                    }
                });
                _this.inProcessTable = response;
                _this.load = false;
            }, function (error) {
                var errorMessage = error;
                if (errorMessage != null) {
                    _this.load = false;
                }
            });
            if (this.identity.type != "local" && this.identity.type != "areaManager" && this.identity.type != "callCenter") {
                this._requestProcesService.getInCallCenter(this.identity).subscribe(function (response) {
                    response.forEach(function (element, indice) {
                        if (element.statusCallCenter) {
                            _this.inProcessInProgres.push(element);
                            _this.oldDataInProcessInProgres.push(element);
                        }
                        if (element.notes && element.notes.length > 0) {
                            // los que tienen mensajes en bitacora
                            var ars = 0;
                            element.notes.forEach(function (elementNote, indiceNote) {
                                if (elementNote.esperaRespuesta && elementNote.esperaRespuesta == true) {
                                    // los que tienen minimo un "en espera de respuesta" 
                                    if (elementNote.noteBy.indexOf("Call") >= 0) {
                                        ffinal = momentTimezone().tz('America/Monterrey');
                                        ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                                        momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                                        var momentDia2 = parseInt(momentDia);
                                    }
                                    else {
                                        if (element.notes[indiceNote + 1]) {
                                            // los que tienen mas mensajes
                                            var start = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey');
                                            var end = momentTimezone(element.notes[indiceNote + 1].dateOfNote).tz('America/Monterrey');
                                            var minutos = end.diff(start, 'minutes');
                                            ars = ars + minutos;
                                        }
                                        else {
                                            // --- este es el ultimo mensaje urgente
                                            ffinal = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey');
                                            ahora = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey').format('HH');
                                            momentDia = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey').format('DD');
                                            var momentDia2 = parseInt(momentDia);
                                        }
                                    }
                                }
                                else {
                                    // ---- cuando tienen mensajes pero el ultimo es el que no urge
                                    ffinal = momentTimezone().tz('America/Monterrey');
                                    ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                                    momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                                    var momentDia2 = parseInt(momentDia);
                                }
                            });
                        }
                        else {
                            // ---- los que no tienen ningun mensaje
                            var ffinal = momentTimezone().tz('America/Monterrey');
                            var ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                            var ars = 0;
                            var momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                            var momentDia2 = parseInt(momentDia);
                        }
                        var fechaFinal = momentTimezone(element.dateOfReport).tz('America/Monterrey').add(ars, 'minutes');
                        element.dateOfReport = fechaFinal;
                        var totalHorasRestadas = 0;
                        var totalMinRestadas = 0;
                        var finicial = momentTimezone(element.dateOfReport).tz('America/Monterrey');
                        var minutos = ffinal.diff(finicial, 'minutes');
                        var arr = (minutos / 60).toString().split(".");
                        var ar = parseInt(arr[0]);
                        var astring = (ar / 24).toString();
                        var totalDias = parseInt(astring, 10);
                        var puraHora = momentTimezone(element.dateOfReport).tz('America/Monterrey').format('HH');
                        var horario1 = momentTimezone('2023-04-26T14:00:00.000+00:00').tz('America/Monterrey').format('HH');
                        var horario2 = momentTimezone('2023-04-27T02:00:00.000+00:00').tz('America/Monterrey').format('HH');
                        if (totalDias >= 1) {
                            // todos los que son mayores a dos dias
                            totalDias = totalDias;
                            for (var i = 0; i < totalDias; i++) {
                                totalHorasRestadas = totalHorasRestadas + 12;
                            }
                            if (totalHorasRestadas == 12 && ar < 48) {
                                if (puraHora >= horario1 && puraHora <= horario2) {
                                    totalHorasTrabajadas = (ar - (6 * (ar / 12)));
                                }
                                else {
                                    if (puraHora < horario1) {
                                        if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                            totalHorasTrabajadas = (parseInt(ahora) - parseInt(horario1));
                                        }
                                        else {
                                            totalHorasTrabajadas = totalHorasRestadas + (parseInt(ahora) - parseInt(horario1));
                                        }
                                    }
                                    else {
                                        if (puraHora > horario2) {
                                            if (ahora < "08") {
                                                totalHorasTrabajadas = totalHorasRestadas;
                                            }
                                            else {
                                                if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == ((momentDia2) - 1).toString()) {
                                                    totalHorasTrabajadas = totalHorasRestadas;
                                                }
                                                else {
                                                    totalHorasTrabajadas = totalHorasRestadas + (parseInt(ahora) - parseInt(horario1));
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            else {
                                var cosaRara = (((ar / totalHorasRestadas).toFixed(2)).toString()).split(".");
                                if (puraHora < horario1) {
                                    totalHorasRestadas = totalHorasRestadas + ((parseInt(horario1) - parseInt(puraHora)));
                                }
                                else {
                                    if (puraHora > horario2) {
                                        var newss = parseFloat(0 + "." + cosaRara[1]);
                                        totalHorasRestadas = (totalHorasRestadas) + (parseInt(ahora) - parseInt(horario1));
                                    }
                                }
                                if (puraHora >= horario1 && puraHora <= horario2) {
                                    if (puraHora > ahora) {
                                        totalHorasRestadas = totalHorasRestadas + ((parseInt(horario2) - parseInt(puraHora)) + parseInt(ahora) - parseInt(horario1));
                                    }
                                }
                            }
                        }
                        else {
                            if (puraHora >= horario1 && puraHora <= horario2) {
                                if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                }
                                else {
                                    if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                        var totalHorasTrabajadas = ((parseInt(horario2) - parseInt(puraHora)));
                                    }
                                    else {
                                        var totalHorasTrabajadas = ((parseInt(ahora) - parseInt(horario1)) + (parseInt(horario2) - parseInt(puraHora)));
                                    }
                                }
                            }
                            else {
                                // fuera de hora
                                if (puraHora < horario1) {
                                    totalHorasRestadas = parseInt(horario1) - parseInt(puraHora);
                                }
                                else {
                                    totalHorasRestadas = ((parseInt(momentTimezone('2023-04-26T04:00:00.000+00:00').tz('America/Monterrey').format('HH'))) - (parseInt(puraHora) - (parseInt(momentTimezone('2023-04-26T06:00:00.000+00:00').tz('America/Monterrey').format('HH')))));
                                    totalHorasRestadas = totalHorasRestadas + 8;
                                }
                            }
                        }
                        if (totalHorasTrabajadas) {
                            totalMinRestadas = totalHorasTrabajadas * 60;
                            var newMinutos = totalMinRestadas;
                        }
                        else {
                            totalMinRestadas = totalHorasRestadas * 60;
                            var newMinutos = minutos - totalMinRestadas;
                        }
                        var arr = (newMinutos / 60).toString().split(".");
                        var ar = parseInt(arr[0]);
                        var astring = (ar / 24).toString();
                        var totalDias = parseInt(astring, 10);
                        var sums = 0;
                        for (var i = 0; i < parseInt(arr[0]); i++) {
                            var sums = sums + 60;
                        }
                        ;
                        response[indice].tiempos = arr[0] + ' h ' + (newMinutos - sums).toString() + ' m';
                        if (element.issue.slaCallCenter) {
                            if (parseInt(arr[0]) > element.issue.slaCallCenter) {
                                response[indice].colorCallCenter = "yellow";
                            }
                            if (element.issue.slaCallCenter) {
                                var menos = element.issue.slaCallCenter - parseInt(arr[0]);
                                response[indice].restantesCallCenter = menos + " h";
                            }
                            if (parseInt(arr[0]) > element.issue.slaCallCenter) {
                                response[indice].pasadoCallCenter = "red";
                            }
                            else {
                                response[indice].pasadoCallCenter = "green";
                            }
                        }
                        if (!element.reportBy.name)
                            element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                        if (element.analyst) {
                            response[indice].analyst.fnames = element.analyst.fname + element.analyst.lname;
                        }
                    });
                }, function (error) {
                    var errorMessage = error;
                    if (errorMessage != null) {
                        _this.load = false;
                    }
                });
            }
            this._requestProcesService.getEncuestas(this.identity).subscribe(function (response) {
                if (response.length > 0) {
                    _this.dataEncuesta = response;
                }
            }, function (error) {
                var errorMessage = error;
                if (errorMessage != null) {
                }
            });
        }
        else if (this.identity.type == 'callCenter') {
            this.table = 5;
            this._requestProcesService.allCallCenter(this.identity).subscribe(function (response) {
                response.forEach(function (element, indice) {
                    if (element.status && (element.status == 'Nuevo' || element.status == 'Pendiente' || element.status == 'Asignado' || element.status == 'Solucionado')) {
                        if (element.status == 'Solucionado') {
                        }
                        else if (element.status == "Pendiente" && element.statusCallCenter != 'SolucionadoCallCenter' && element.statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                            _this.inPendingNew.push(element);
                            _this.oldDataPandingNew.push(element);
                        }
                        else if (element.status == "Nuevo" && element.statusCallCenter != 'SolucionadoCallCenter' && element.statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                            _this.inProcessNew.push(element);
                            _this.oldDataProcessNew.push(element);
                        }
                        else if (element.status == "Asignado" && element.statusCallCenter != 'SolucionadoCallCenter' && element.statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                            _this.inProcessNew.push(element);
                            _this.oldDataProcessNew.push(element);
                        }
                    }
                    else {
                        if (element.statusCallCenter == "PendienteCallCenter") {
                            _this.inPendingCallCenter.push(element);
                            _this.oldDataPandingCallCenter.push(element);
                        }
                        else {
                            _this.inProcessCallCenter.push(element);
                            _this.oldDataProcessCallCenter.push(element);
                        }
                    }
                    if (element.notes && element.notes.length > 0) {
                        // los que tienen mensajes en bitacora
                        var ars = 0;
                        element.notes.forEach(function (elementNote, indiceNote) {
                            if (elementNote.esperaRespuesta && elementNote.esperaRespuesta == true) {
                                // los que tienen minimo un "en espera de respuesta" 
                                if (elementNote.noteBy.indexOf("Call") >= 0) {
                                    ffinal = momentTimezone().tz('America/Monterrey');
                                    ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                                    momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                                    var momentDia2 = parseInt(momentDia);
                                }
                                else {
                                    if (element.notes[indiceNote + 1]) {
                                        // los que tienen mas mensajes
                                        var start = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey');
                                        var end = momentTimezone(element.notes[indiceNote + 1].dateOfNote).tz('America/Monterrey');
                                        var minutos = end.diff(start, 'minutes');
                                        ars = ars + minutos;
                                    }
                                    else {
                                        // --- este es el ultimo mensaje urgente
                                        ffinal = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey');
                                        ahora = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey').format('HH');
                                        momentDia = momentTimezone(elementNote.dateOfNote).tz('America/Monterrey').format('DD');
                                        var momentDia2 = parseInt(momentDia);
                                    }
                                }
                            }
                            else {
                                // ---- cuando tienen mensajes pero el ultimo es el que no urge
                                ffinal = momentTimezone().tz('America/Monterrey');
                                ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                                momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                                var momentDia2 = parseInt(momentDia);
                            }
                        });
                    }
                    else {
                        // ---- los que no tienen ningun mensaje
                        var ffinal = momentTimezone().tz('America/Monterrey');
                        var ahora = momentTimezone(new Date()).tz('America/Monterrey').format('HH');
                        var ars = 0;
                        var momentDia = momentTimezone().tz('America/Monterrey').format('DD');
                        var momentDia2 = parseInt(momentDia);
                    }
                    var fechaFinal = momentTimezone(element.dateOfReport).tz('America/Monterrey').add(ars, 'minutes');
                    element.dateOfReport = fechaFinal;
                    var totalHorasRestadas = 0;
                    var totalMinRestadas = 0;
                    var finicial = momentTimezone(element.dateOfReport).tz('America/Monterrey');
                    var minutos = ffinal.diff(finicial, 'minutes');
                    var arr = (minutos / 60).toString().split(".");
                    var ar = parseInt(arr[0]);
                    var astring = (ar / 24).toString();
                    var totalDias = parseInt(astring, 10);
                    var puraHora = momentTimezone(element.dateOfReport).tz('America/Monterrey').format('HH');
                    var horario1 = momentTimezone('2023-04-26T14:00:00.000+00:00').tz('America/Monterrey').format('HH');
                    var horario2 = momentTimezone('2023-04-27T02:00:00.000+00:00').tz('America/Monterrey').format('HH');
                    if (totalDias >= 1) {
                        // todos los que son mayores a dos dias
                        totalDias = totalDias;
                        for (var i = 0; i < totalDias; i++) {
                            totalHorasRestadas = totalHorasRestadas + 12;
                        }
                        if (totalHorasRestadas == 12 && ar < 48) {
                            if (puraHora >= horario1 && puraHora <= horario2) {
                                totalHorasTrabajadas = (ar - (6 * (ar / 12)));
                            }
                            else {
                                if (puraHora < horario1) {
                                    if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                        totalHorasTrabajadas = (parseInt(ahora) - parseInt(horario1));
                                    }
                                    else {
                                        totalHorasTrabajadas = totalHorasRestadas + (parseInt(ahora) - parseInt(horario1));
                                    }
                                }
                                else {
                                    if (puraHora > horario2) {
                                        if (ahora < "08") {
                                            totalHorasTrabajadas = totalHorasRestadas;
                                        }
                                        else {
                                            if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == ((momentDia2) - 1).toString()) {
                                                totalHorasTrabajadas = totalHorasRestadas;
                                            }
                                            else {
                                                totalHorasTrabajadas = totalHorasRestadas + (parseInt(ahora) - parseInt(horario1));
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            var cosaRara = (((ar / totalHorasRestadas).toFixed(2)).toString()).split(".");
                            if (puraHora < horario1) {
                                totalHorasRestadas = totalHorasRestadas + ((parseInt(horario1) - parseInt(puraHora)));
                            }
                            else {
                                if (puraHora > horario2) {
                                    var newss = parseFloat(0 + "." + cosaRara[1]);
                                    totalHorasRestadas = (totalHorasRestadas) + (parseInt(ahora) - parseInt(horario1));
                                }
                            }
                            if (puraHora >= horario1 && puraHora <= horario2) {
                                if (puraHora > ahora) {
                                    totalHorasRestadas = totalHorasRestadas + ((parseInt(horario2) - parseInt(puraHora)) + parseInt(ahora) - parseInt(horario1));
                                }
                            }
                        }
                    }
                    else {
                        if (puraHora >= horario1 && puraHora <= horario2) {
                            if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                            }
                            else {
                                if (momentTimezone(element.dateOfReport).tz('America/Monterrey').format('DD') == momentDia) {
                                    var totalHorasTrabajadas = ((parseInt(horario2) - parseInt(puraHora)));
                                }
                                else {
                                    var totalHorasTrabajadas = ((parseInt(ahora) - parseInt(horario1)) + (parseInt(horario2) - parseInt(puraHora)));
                                }
                            }
                        }
                        else {
                            // fuera de hora
                            if (puraHora < horario1) {
                                totalHorasRestadas = parseInt(horario1) - parseInt(puraHora);
                            }
                            else {
                                totalHorasRestadas = ((parseInt(momentTimezone('2023-04-26T04:00:00.000+00:00').tz('America/Monterrey').format('HH'))) - (parseInt(puraHora) - (parseInt(momentTimezone('2023-04-26T06:00:00.000+00:00').tz('America/Monterrey').format('HH')))));
                                totalHorasRestadas = totalHorasRestadas + 8;
                            }
                        }
                    }
                    if (totalHorasTrabajadas) {
                        totalMinRestadas = totalHorasTrabajadas * 60;
                        var newMinutos = totalMinRestadas;
                    }
                    else {
                        totalMinRestadas = totalHorasRestadas * 60;
                        var newMinutos = minutos - totalMinRestadas;
                    }
                    var arr = (newMinutos / 60).toString().split(".");
                    var ar = parseInt(arr[0]);
                    var astring = (ar / 24).toString();
                    var totalDias = parseInt(astring, 10);
                    var sums = 0;
                    for (var i = 0; i < parseInt(arr[0]); i++) {
                        var sums = sums + 60;
                    }
                    ;
                    response[indice].tiempos = arr[0] + ' h ' + (newMinutos - sums).toString() + ' m';
                    if (parseInt(arr[0]) > element.issue.sla) {
                        response[indice].color = "yellow";
                    }
                    if (element.issue.sla) {
                        var menos = element.issue.sla - parseInt(arr[0]);
                        response[indice].restantes = menos + " h";
                    }
                    if (parseInt(arr[0]) > element.issue.sla) {
                        response[indice].pasado = "red";
                    }
                    else {
                        response[indice].pasado = "green";
                    }
                    if (element.issue.slaCallCenter) {
                        if (parseInt(arr[0]) > element.issue.slaCallCenter) {
                            response[indice].colorCallCenter = "yellow";
                        }
                        if (element.issue.slaCallCenter) {
                            var menos = element.issue.slaCallCenter - parseInt(arr[0]);
                            response[indice].restantesCallCenter = menos + " h";
                        }
                        if (parseInt(arr[0]) > element.issue.slaCallCenter) {
                            response[indice].pasadoCallCenter = "red";
                        }
                        else {
                            response[indice].pasadoCallCenter = "green";
                        }
                    }
                    if (!element.reportBy.name)
                        element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                    if (element.analyst) {
                        response[indice].analyst.fnames = element.analyst.fname + element.analyst.lname;
                    }
                });
                _this.load = false;
            }, function (error) {
                _this.load = false;
                var errorMessage = error;
                if (errorMessage != null) {
                    _this.load = false;
                }
            });
        }
    };
    RequestProcesComponent.prototype.onSubmit = function () {
    };
    RequestProcesComponent.prototype.searchFolio1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldDataProcess.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    RequestProcesComponent.prototype.searchFolio5 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldDataProcessCallCenter.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessCallCenter = newData;
        }
        else {
            this.inProcessCallCenter = this.oldDataProcessCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchFolio6 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldDataPandingCallCenter.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingCallCenter = newData;
        }
        else {
            this.inPendingCallCenter = this.oldDataPandingCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchFolio7 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldDataProcessNew.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessNew = newData;
        }
        else {
            this.inProcessNew = this.oldDataProcessNew;
        }
    };
    RequestProcesComponent.prototype.searchFolio8 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldDataPandingNew.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingNew = newData;
        }
        else {
            this.inPendingNew = this.oldDataPandingNew;
        }
    };
    RequestProcesComponent.prototype.searchFolio9 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldDataInProcessInProgres.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessInProgres = newData;
        }
        else {
            this.inProcessInProgres = this.oldDataInProcessInProgres;
        }
    };
    RequestProcesComponent.prototype.searchSubcategoria1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    RequestProcesComponent.prototype.searchSubcategoria5 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCallCenter.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessCallCenter = newData;
        }
        else {
            this.inProcessCallCenter = this.oldDataProcessCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchSubcategoria6 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCallCenter.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingCallCenter = newData;
        }
        else {
            this.inPendingCallCenter = this.oldDataPandingCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchSubcategoria7 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessNew.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessNew = newData;
        }
        else {
            this.inProcessNew = this.oldDataProcessNew;
        }
    };
    RequestProcesComponent.prototype.searchSubcategoria8 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingNew.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingNew = newData;
        }
        else {
            this.inPendingNew = this.oldDataPandingNew;
        }
    };
    RequestProcesComponent.prototype.searchSubcategoria9 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataInProcessInProgres.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessInProgres = newData;
        }
        else {
            this.inProcessInProgres = this.oldDataInProcessInProgres;
        }
    };
    RequestProcesComponent.prototype.searchNumSerie9 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataInProcessInProgres.forEach(function (element) {
                if (element && element.numSerie) {
                    element.numSerie2 = element.numSerie.toUpperCase();
                    if (element.numSerie2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcessInProgres = newData;
        }
        else {
            this.inProcessInProgres = this.oldDataInProcessInProgres;
        }
    };
    RequestProcesComponent.prototype.searchServicio1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    RequestProcesComponent.prototype.searchServicio5 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCallCenter.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessCallCenter = newData;
        }
        else {
            this.inProcessCallCenter = this.oldDataProcessCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchNumSerie5 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCallCenter.forEach(function (element) {
                if (element && element.numSerie) {
                    element.numSerie2 = element.numSerie.toUpperCase();
                    if (element.numSerie2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcessCallCenter = newData;
        }
        else {
            this.inProcessCallCenter = this.oldDataProcessCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchServicio6 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCallCenter.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingCallCenter = newData;
        }
        else {
            this.inPendingCallCenter = this.oldDataPandingCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchNumSerie6 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCallCenter.forEach(function (element) {
                if (element && element.numSerie) {
                    element.numSerie2 = element.numSerie.toUpperCase();
                    if (element.numSerie2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inPendingCallCenter = newData;
        }
        else {
            this.inPendingCallCenter = this.oldDataPandingCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchServicio7 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessNew.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessNew = newData;
        }
        else {
            this.inProcessNew = this.oldDataProcessNew;
        }
    };
    RequestProcesComponent.prototype.searchNumSerie7 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessNew.forEach(function (element) {
                if (element && element.numSerie) {
                    element.numSerie2 = element.numSerie.toUpperCase();
                    if (element.numSerie2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcessNew = newData;
        }
        else {
            this.inProcessNew = this.oldDataProcessNew;
        }
    };
    RequestProcesComponent.prototype.searchServicio8 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingNew.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingNew = newData;
        }
        else {
            this.inPendingNew = this.oldDataPandingNew;
        }
    };
    RequestProcesComponent.prototype.searchNumSerie8 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingNew.forEach(function (element) {
                if (element && element.numSerie) {
                    element.numSerie2 = element.numSerie.toUpperCase();
                    if (element.numSerie2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inPendingNew = newData;
        }
        else {
            this.inPendingNew = this.oldDataPandingNew;
        }
    };
    RequestProcesComponent.prototype.searchServicio9 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataInProcessInProgres.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessInProgres = newData;
        }
        else {
            this.inProcessInProgres = this.oldDataInProcessInProgres;
        }
    };
    RequestProcesComponent.prototype.searchArea1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    RequestProcesComponent.prototype.searchArea5 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCallCenter.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessCallCenter = newData;
        }
        else {
            this.inProcessCallCenter = this.oldDataProcessCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchArea6 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCallCenter.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingCallCenter = newData;
        }
        else {
            this.inPendingCallCenter = this.oldDataPandingCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchArea7 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessNew.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessNew = newData;
        }
        else {
            this.inProcessNew = this.oldDataProcessNew;
        }
    };
    RequestProcesComponent.prototype.searchArea8 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingNew.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingNew = newData;
        }
        else {
            this.inPendingNew = this.oldDataPandingNew;
        }
    };
    RequestProcesComponent.prototype.searchArea9 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataInProcessInProgres.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessInProgres = newData;
        }
        else {
            this.inProcessInProgres = this.oldDataInProcessInProgres;
        }
    };
    RequestProcesComponent.prototype.searchEstatus1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                element.status2 = element.status.toUpperCase();
                if (element.status2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    RequestProcesComponent.prototype.searchEstatus5 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCallCenter.forEach(function (element) {
                element.statusCallCenter2 = element.statusCallCenter.toUpperCase();
                if (element.statusCallCenter2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessCallCenter = newData;
        }
        else {
            this.inProcessCallCenter = this.oldDataProcessCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchEstatus6 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCallCenter.forEach(function (element) {
                element.statusCallCenter2 = element.statusCallCenter.toUpperCase();
                if (element.statusCallCenter2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingCallCenter = newData;
        }
        else {
            this.inPendingCallCenter = this.oldDataPandingCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchEstatus7 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessNew.forEach(function (element) {
                element.status2 = element.status.toUpperCase();
                if (element.status2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessNew = newData;
        }
        else {
            this.inProcessNew = this.oldDataProcessNew;
        }
    };
    RequestProcesComponent.prototype.searchEstatus8 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingNew.forEach(function (element) {
                element.status2 = element.status.toUpperCase();
                if (element.status2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingNew = newData;
        }
        else {
            this.inPendingNew = this.oldDataPandingNew;
        }
    };
    RequestProcesComponent.prototype.searchEstatus9 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataInProcessInProgres.forEach(function (element) {
                element.statusCallCenter2 = element.statusCallCenter.toUpperCase();
                if (element.statusCallCenter2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessInProgres = newData;
        }
        else {
            this.inProcessInProgres = this.oldDataInProcessInProgres;
        }
    };
    RequestProcesComponent.prototype.searchReportBy1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    RequestProcesComponent.prototype.searchReportBy5 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCallCenter.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessCallCenter = newData;
        }
        else {
            this.inProcessCallCenter = this.oldDataProcessCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchReportBy6 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCallCenter.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingCallCenter = newData;
        }
        else {
            this.inPendingCallCenter = this.oldDataPandingCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchReportBy7 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessNew.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessNew = newData;
        }
        else {
            this.inProcessNew = this.oldDataProcessNew;
        }
    };
    RequestProcesComponent.prototype.searchReportBy8 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingNew.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingNew = newData;
        }
        else {
            this.inPendingNew = this.oldDataPandingNew;
        }
    };
    RequestProcesComponent.prototype.searchReportBy9 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataInProcessInProgres.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessInProgres = newData;
        }
        else {
            this.inProcessInProgres = this.oldDataInProcessInProgres;
        }
    };
    RequestProcesComponent.prototype.searchAnalista1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    RequestProcesComponent.prototype.searchNumSerie = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldDataProcess.forEach(function (element) {
                if (element.numSerie) {
                    element.numSerie2 = element.numSerie.toUpperCase();
                    if (element.numSerie2.indexOf(go) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    RequestProcesComponent.prototype.searchNumSerie2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldDataPanding.forEach(function (element) {
                if (element.numSerie) {
                    element.numSerie2 = element.numSerie.toUpperCase();
                    if (element.numSerie2.indexOf(go) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inPending = newData;
        }
        else {
            this.inPending = this.oldDataPanding;
        }
    };
    RequestProcesComponent.prototype.searchAnalista5 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCallCenter.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcessCallCenter = newData;
        }
        else {
            this.inProcessCallCenter = this.oldDataProcessCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchAnalista6 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCallCenter.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inPendingCallCenter = newData;
        }
        else {
            this.inPendingCallCenter = this.oldDataPandingCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchAnalista7 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessNew.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcessNew = newData;
        }
        else {
            this.inProcessNew = this.oldDataProcessNew;
        }
    };
    RequestProcesComponent.prototype.searchAnalista8 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingNew.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inPendingNew = newData;
        }
        else {
            this.inPendingNew = this.oldDataPandingNew;
        }
    };
    RequestProcesComponent.prototype.searchAnalista9 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataInProcessInProgres.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcessInProgres = newData;
        }
        else {
            this.inProcessInProgres = this.oldDataInProcessInProgres;
        }
    };
    RequestProcesComponent.prototype.searchVencido1 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcess.forEach(function (element) {
                if (element.pasado == "red") {
                    var pasado = "Si";
                }
                else {
                    var pasado = "No";
                }
                var pasado2 = pasado.toUpperCase();
                if (pasado2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcess = newData;
        }
        else {
            this.inProcess = this.oldDataProcess;
        }
    };
    RequestProcesComponent.prototype.searchVencido5 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCallCenter.forEach(function (element) {
                if (element.pasadoCallCenter == "red") {
                    var pasadoCallCenter = "Si";
                }
                else {
                    var pasadoCallCenter = "No";
                }
                var pasadoCallCenter2 = pasadoCallCenter.toUpperCase();
                if (pasadoCallCenter2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessCallCenter = newData;
        }
        else {
            this.inProcessCallCenter = this.oldDataProcessCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchVencido6 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCallCenter.forEach(function (element) {
                if (element.pasadoCallCenter == "red") {
                    var pasadoCallCenter = "Si";
                }
                else {
                    var pasadoCallCenter = "No";
                }
                var pasadoCallCenter2 = pasadoCallCenter.toUpperCase();
                if (pasadoCallCenter2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingCallCenter = newData;
        }
        else {
            this.inPendingCallCenter = this.oldDataPandingCallCenter;
        }
    };
    RequestProcesComponent.prototype.searchVencido7 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessNew.forEach(function (element) {
                if (element.pasado == "red") {
                    var pasado = "Si";
                }
                else {
                    var pasado = "No";
                }
                var pasado2 = pasado.toUpperCase();
                if (pasado2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessNew = newData;
        }
        else {
            this.inProcessNew = this.oldDataProcessNew;
        }
    };
    RequestProcesComponent.prototype.searchVencido8 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingNew.forEach(function (element) {
                if (element.pasado == "red") {
                    var pasado = "Si";
                }
                else {
                    var pasado = "No";
                }
                var pasado2 = pasado.toUpperCase();
                if (pasado2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingNew = newData;
        }
        else {
            this.inPendingNew = this.oldDataPandingNew;
        }
    };
    RequestProcesComponent.prototype.searchVencido9 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataInProcessInProgres.forEach(function (element) {
                if (element.pasadoCallCenter == "red") {
                    var pasadoCallCenter = "Si";
                }
                else {
                    var pasadoCallCenter = "No";
                }
                var pasadoCallCenter2 = pasadoCallCenter.toUpperCase();
                if (pasadoCallCenter2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessInProgres = newData;
        }
        else {
            this.inProcessInProgres = this.oldDataInProcessInProgres;
        }
    };
    RequestProcesComponent.prototype.searchFolio2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldDataPanding.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPending = newData;
        }
        else {
            this.inPending = this.oldDataPanding;
        }
    };
    RequestProcesComponent.prototype.searchSubcategoria2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPanding.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPending = newData;
        }
        else {
            this.inPending = this.oldDataPanding;
        }
    };
    RequestProcesComponent.prototype.searchServicio2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPanding.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPending = newData;
        }
        else {
            this.inPending = this.oldDataPanding;
        }
    };
    RequestProcesComponent.prototype.searchArea2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPanding.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPending = newData;
        }
        else {
            this.inPending = this.oldDataPanding;
        }
    };
    RequestProcesComponent.prototype.searchEstatus2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPanding.forEach(function (element) {
                element.status2 = element.status.toUpperCase();
                if (element.status2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPending = newData;
        }
        else {
            this.inPending = this.oldDataPanding;
        }
    };
    RequestProcesComponent.prototype.searchReportBy2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPanding.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPending = newData;
        }
        else {
            this.inPending = this.oldDataPanding;
        }
    };
    RequestProcesComponent.prototype.searchAnalista2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPanding.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inPending = newData;
        }
        else {
            this.inPending = this.oldDataPanding;
        }
    };
    RequestProcesComponent.prototype.searchVencido2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPanding.forEach(function (element) {
                if (element.pasado == "red") {
                    var pasado = "Si";
                }
                else {
                    var pasado = "No";
                }
                var pasado2 = pasado.toUpperCase();
                if (pasado2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPending = newData;
        }
        else {
            this.inPending = this.oldDataPanding;
        }
    };
    RequestProcesComponent.prototype.searchMotivoPendiente2 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPanding.forEach(function (element) {
                if (element.pending) {
                    element.pending2 = element.pending.toUpperCase();
                    if (element.pending2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inPending = newData;
        }
        else {
            this.inPending = this.oldDataPanding;
        }
    };
    RequestProcesComponent.prototype.searchFolio3 = function (toSearch) {
        // this.search=[
        //   { folio:"" },
        //   { subcategoria:"" },
        //   { servicio:"" },
        //   { area:"" },
        //   { estatus:"" },
        //   { reportadoPor:"" },
        //   { analista:"" },
        //   { vencido:"" },
        // ]
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldDataProcessCopiados.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessCopiados = newData;
        }
        else {
            this.inProcessCopiados = this.oldDataProcessCopiados;
        }
    };
    RequestProcesComponent.prototype.searchSubcategoria3 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCopiados.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessCopiados = newData;
        }
        else {
            this.inProcessCopiados = this.oldDataProcessCopiados;
        }
    };
    RequestProcesComponent.prototype.searchServicio3 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCopiados.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessCopiados = newData;
        }
        else {
            this.inProcessCopiados = this.oldDataProcessCopiados;
        }
    };
    RequestProcesComponent.prototype.searchNumSerie3 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCopiados.forEach(function (element) {
                if (element && element.numSerie) {
                    element.numSerie2 = element.numSerie.toUpperCase();
                    if (element.numSerie2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcessCopiados = newData;
        }
        else {
            this.inProcessCopiados = this.oldDataProcessCopiados;
        }
    };
    RequestProcesComponent.prototype.searchArea3 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCopiados.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessCopiados = newData;
        }
        else {
            this.inProcessCopiados = this.oldDataProcessCopiados;
        }
    };
    RequestProcesComponent.prototype.searchEstatus3 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCopiados.forEach(function (element) {
                element.status2 = element.status.toUpperCase();
                if (element.status2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessCopiados = newData;
        }
        else {
            this.inProcessCopiados = this.oldDataProcessCopiados;
        }
    };
    RequestProcesComponent.prototype.searchReportBy3 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCopiados.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessCopiados = newData;
        }
        else {
            this.inProcessCopiados = this.oldDataProcessCopiados;
        }
    };
    RequestProcesComponent.prototype.searchAnalista3 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCopiados.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inProcessCopiados = newData;
        }
        else {
            this.inProcessCopiados = this.oldDataProcessCopiados;
        }
    };
    RequestProcesComponent.prototype.searchVencido3 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataProcessCopiados.forEach(function (element) {
                if (element.pasado == "red") {
                    var pasado = "Si";
                }
                else {
                    var pasado = "No";
                }
                var pasado2 = pasado.toUpperCase();
                if (pasado2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inProcessCopiados = newData;
        }
        else {
            this.inProcessCopiados = this.oldDataProcessCopiados;
        }
    };
    RequestProcesComponent.prototype.searchFolio4 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            var go = toSearch.toUpperCase();
            go = go.toString();
            this.oldDataPandingCopiados.forEach(function (element) {
                element.codeRequest2 = element.codeRequest.toUpperCase();
                if (element.codeRequest2.indexOf(go) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingCopiados = newData;
        }
        else {
            this.inPendingCopiados = this.oldDataPandingCopiados;
        }
    };
    RequestProcesComponent.prototype.searchSubcategoria4 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCopiados.forEach(function (element) {
                element.subCategory2 = element.subCategory.toUpperCase();
                if (element.subCategory2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingCopiados = newData;
        }
        else {
            this.inPendingCopiados = this.oldDataPandingCopiados;
        }
    };
    RequestProcesComponent.prototype.searchServicio4 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCopiados.forEach(function (element) {
                element.service2 = element.service.toUpperCase();
                if (element.service2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingCopiados = newData;
        }
        else {
            this.inPendingCopiados = this.oldDataPandingCopiados;
        }
    };
    RequestProcesComponent.prototype.searchNumSerie4 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCopiados.forEach(function (element) {
                if (element && element.numSerie) {
                    element.numSerie2 = element.numSerie.toUpperCase();
                    if (element.numSerie2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inPendingCopiados = newData;
        }
        else {
            this.inPendingCopiados = this.oldDataPandingCopiados;
        }
    };
    RequestProcesComponent.prototype.searchArea4 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCopiados.forEach(function (element) {
                element.issue.category2 = element.issue.category.toUpperCase();
                if (element.issue.category2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingCopiados = newData;
        }
        else {
            this.inPendingCopiados = this.oldDataPandingCopiados;
        }
    };
    RequestProcesComponent.prototype.searchEstatus4 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCopiados.forEach(function (element) {
                element.status2 = element.status.toUpperCase();
                if (element.status2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingCopiados = newData;
        }
        else {
            this.inPendingCopiados = this.oldDataPandingCopiados;
        }
    };
    RequestProcesComponent.prototype.searchReportBy4 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCopiados.forEach(function (element) {
                element.reportBy.name2 = element.reportBy.name.toUpperCase();
                if (element.reportBy.name2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingCopiados = newData;
        }
        else {
            this.inPendingCopiados = this.oldDataPandingCopiados;
        }
    };
    RequestProcesComponent.prototype.searchAnalista4 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCopiados.forEach(function (element) {
                if (element.analyst) {
                    element.analyst.fnames2 = element.analyst.fnames.toUpperCase();
                    if (element.analyst.fnames2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inPendingCopiados = newData;
        }
        else {
            this.inPendingCopiados = this.oldDataPandingCopiados;
        }
    };
    RequestProcesComponent.prototype.searchVencido4 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCopiados.forEach(function (element) {
                if (element.pasado == "red") {
                    var pasado = "Si";
                }
                else {
                    var pasado = "No";
                }
                var pasado2 = pasado.toUpperCase();
                if (pasado2.indexOf(toSearch) >= 0) {
                    newData.push(element);
                }
                else {
                }
            });
            this.inPendingCopiados = newData;
        }
        else {
            this.inPendingCopiados = this.oldDataPandingCopiados;
        }
    };
    RequestProcesComponent.prototype.searchMotivoPendiente4 = function (toSearch) {
        toSearch = toSearch.toUpperCase();
        var newData = [];
        if (toSearch != "") {
            this.oldDataPandingCopiados.forEach(function (element) {
                if (element.pending) {
                    element.pending2 = element.pending.toUpperCase();
                    if (element.pending2.indexOf(toSearch) >= 0) {
                        newData.push(element);
                    }
                    else {
                    }
                }
            });
            this.inPendingCopiados = newData;
        }
        else {
            this.inPendingCopiados = this.oldDataPandingCopiados;
        }
    };
    RequestProcesComponent.prototype.goToSearch = function (toSearch) {
        var _this = this;
        this.inProcess = [];
        this.inPending = [];
        this.inProcessNew = [];
        this.inPendingNew = [];
        this.inProcessCallCenter = [];
        this.inPendingCallCenter = [];
        this.oldDataPanding = [];
        this.oldDataProcess = [];
        this.inPendingCopiados = [];
        this.oldDataPandingCopiados = [];
        this.inProcessCopiados = [];
        this.oldDataProcessCopiados = [];
        this.oldDataPandingNew = [];
        this.oldDataProcessNew = [];
        this.oldDataPandingCallCenter = [];
        this.oldDataProcessCallCenter = [];
        if (toSearch && toSearch.length > 0) {
            var go = toSearch.toUpperCase();
            var go2 = go.trim();
            this._requestProcesService.getOnlyOne({ ruta: go2 }).subscribe(function (response) {
                if (response[0]) {
                    for (var i = 0; i < response.length; i++) {
                        if (_this.identity.type != "local" && _this.identity.type != "areaManager") {
                            if (response[i].issueMore && response[i].issueMore.zonesToAnalyst && response[i].issueMore.zonesToAnalyst.porEstado == true) {
                                if (response[i].issueMore.zonesNL && response[i].issueMore.zonesNL.zonesNLAnalyst.includes(_this.identity._id)) {
                                    if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                        swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                    }
                                    else {
                                        if (_this.identity.type == 'callCenter') {
                                            if (response[i].status) {
                                                _this.inProcessNew.push(response[i]);
                                            }
                                            else {
                                                _this.inProcessCallCenter.push(response[i]);
                                            }
                                        }
                                        else {
                                            _this.inProcess.push(response[i]);
                                        }
                                    }
                                }
                                if (response[i].issueMore.zonesNL && response[i].issueMore.zonesNL.zonesNLCopiados.includes(_this.identity._id)) {
                                    if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                        swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                    }
                                    else {
                                        if (_this.identity.type == 'callCenter') {
                                            if (response[i].status) {
                                                _this.inProcessNew.push(response[i]);
                                            }
                                            else {
                                                _this.inProcessCallCenter.push(response[i]);
                                            }
                                        }
                                        else {
                                            _this.inProcessCopiados.push(response[i]);
                                        }
                                    }
                                }
                                if (response[i].issueMore.zonesCoahila && response[i].issueMore.zonesCoahila.zonesCoahilaAnalyst.includes(_this.identity._id)) {
                                    if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                        swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                    }
                                    else {
                                        if (_this.identity.type == 'callCenter') {
                                            if (response[i].status) {
                                                _this.inProcessNew.push(response[i]);
                                            }
                                            else {
                                                _this.inProcessCallCenter.push(response[i]);
                                            }
                                        }
                                        else {
                                            _this.inProcess.push(response[i]);
                                        }
                                    }
                                }
                                if (response[i].issueMore.zonesCoahila && response[i].issueMore.zonesCoahila.zonesCoahilaCopiados.includes(_this.identity._id)) {
                                    if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                        swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                    }
                                    else {
                                        if (_this.identity.type == 'callCenter') {
                                            if (response[i].status) {
                                                _this.inProcessNew.push(response[i]);
                                            }
                                            else {
                                                _this.inProcessCallCenter.push(response[i]);
                                            }
                                        }
                                        else {
                                            _this.inProcessCopiados.push(response[i]);
                                        }
                                    }
                                }
                                if (response[i].issueMore.zonesQueretaro && response[i].issueMore.zonesQueretaro.zonesQueretaroAnalyst.includes(_this.identity._id)) {
                                    if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                        swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                    }
                                    else {
                                        if (_this.identity.type == 'callCenter') {
                                            if (response[i].status) {
                                                _this.inProcessNew.push(response[i]);
                                            }
                                            else {
                                                _this.inProcessCallCenter.push(response[i]);
                                            }
                                        }
                                        else {
                                            _this.inProcess.push(response[i]);
                                        }
                                    }
                                }
                                if (response[i].issueMore.zonesQueretaro && response[i].issueMore.zonesQueretaro.zonesQueretaroCopiados.includes(_this.identity._id)) {
                                    if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                        swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                    }
                                    else {
                                        if (_this.identity.type == 'callCenter') {
                                            if (response[i].status) {
                                                _this.inProcessNew.push(response[i]);
                                            }
                                            else {
                                                _this.inProcessCallCenter.push(response[i]);
                                            }
                                        }
                                        else {
                                            _this.inProcessCopiados.push(response[i]);
                                        }
                                    }
                                }
                            }
                            else {
                                if (response[i].issueMore.emailToSendAnalist.includes(_this.identity._id)) {
                                    if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                        swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                    }
                                    else {
                                        if (_this.identity.type == 'callCenter') {
                                            if (response[i].status) {
                                                _this.inProcessNew.push(response[i]);
                                            }
                                            else {
                                                _this.inProcessCallCenter.push(response[i]);
                                            }
                                        }
                                        else {
                                            _this.inProcess.push(response[i]);
                                        }
                                    }
                                }
                                else {
                                    if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                        swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                    }
                                    else {
                                        if (_this.identity.type == 'callCenter') {
                                            if (response[i].status) {
                                                _this.inProcessNew.push(response[i]);
                                            }
                                            else {
                                                _this.inProcessCallCenter.push(response[i]);
                                            }
                                        }
                                        else {
                                            _this.inProcessCopiados.push(response[i]);
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                            }
                            else {
                                if (_this.identity.type == 'callCenter') {
                                    if (response[i].status) {
                                        _this.inProcessNew.push(response[i]);
                                    }
                                    else {
                                        _this.inProcessCallCenter.push(response[i]);
                                    }
                                }
                                else {
                                    _this.inProcess.push(response[i]);
                                }
                            }
                        }
                    }
                    ;
                    _this.inProcessTable = response;
                    response.forEach(function (element, indice) {
                        var finicial = __WEBPACK_IMPORTED_MODULE_3_moment__(element.dateOfReport);
                        var ffinal = __WEBPACK_IMPORTED_MODULE_3_moment__();
                        var minutos = ffinal.diff(finicial, 'minutes');
                        var arr = (minutos / 60).toString().split(".");
                        var sums = 0;
                        for (var i = 0; i < parseInt(arr[0]); i++) {
                            var sums = sums + 60;
                        }
                        ;
                        response[indice].tiempos = arr[0] + ' h ' + (minutos - sums).toString() + ' m';
                        if (element.issue.sla) {
                            var menos = element.issue.sla - parseInt(arr[0]);
                            response[indice].restantes = menos + " h";
                        }
                        if (!element.reportBy.name)
                            element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                    });
                }
                else {
                    swal("Error!", "No se encontraron datos", "error");
                }
            });
        }
        else {
            this.load = true;
            if (this.identity.type != 'callCenter') {
                this.table = 1;
                this._requestProcesService.getAnswers(this.identity).subscribe(function (response) {
                    for (var i = 0; i < response.length; i++) {
                        if (_this.identity.type != "local" && _this.identity.type != "areaManager") {
                            if (response[i].issueMore && response[i].issueMore.zonesToAnalyst && response[i].issueMore.zonesToAnalyst.porEstado == true) {
                                if (response[i].issueMore.zonesNL && response[i].issueMore.zonesNL.zonesNLAnalyst.includes(_this.identity._id)) {
                                    if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                        swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                    }
                                    else {
                                        if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                            _this.inPending.push(response[i]);
                                            _this.oldDataPanding.push(response[i]);
                                        }
                                        else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                            _this.inProcess.push(response[i]);
                                            _this.oldDataProcess.push(response[i]);
                                        }
                                    }
                                }
                                else {
                                    if (response[i].issueMore.zonesNL && response[i].issueMore.zonesNL.zonesNLCopiados.includes(_this.identity._id)) {
                                        if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                            swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                        }
                                        else {
                                            if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                _this.inPendingCopiados.push(response[i]);
                                                _this.oldDataPandingCopiados.push(response[i]);
                                            }
                                            else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                _this.inProcessCopiados.push(response[i]);
                                                _this.oldDataProcessCopiados.push(response[i]);
                                            }
                                        }
                                    }
                                    else {
                                        if (response[i].issueMore.zonesCoahila && response[i].issueMore.zonesCoahila.zonesCoahilaAnalyst.includes(_this.identity._id)) {
                                            if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                                swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                            }
                                            else {
                                                if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                    _this.inPending.push(response[i]);
                                                    _this.oldDataPanding.push(response[i]);
                                                }
                                                else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                    _this.inProcess.push(response[i]);
                                                    _this.oldDataProcess.push(response[i]);
                                                }
                                            }
                                        }
                                        else {
                                            if (response[i].issueMore.zonesCoahila && response[i].issueMore.zonesCoahila.zonesCoahilaCopiados.includes(_this.identity._id)) {
                                                if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                                    swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                                }
                                                else {
                                                    if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                        _this.inPendingCopiados.push(response[i]);
                                                        _this.oldDataPandingCopiados.push(response[i]);
                                                    }
                                                    else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                        _this.inProcessCopiados.push(response[i]);
                                                        _this.oldDataProcessCopiados.push(response[i]);
                                                    }
                                                }
                                            }
                                            else {
                                                if (response[i].issueMore.zonesQueretaro && response[i].issueMore.zonesQueretaro.zonesQueretaroAnalyst.includes(_this.identity._id)) {
                                                    if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                                        swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                                    }
                                                    else {
                                                        if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                            _this.inPending.push(response[i]);
                                                            _this.oldDataPanding.push(response[i]);
                                                        }
                                                        else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                            _this.inProcess.push(response[i]);
                                                            _this.oldDataProcess.push(response[i]);
                                                        }
                                                    }
                                                }
                                                else {
                                                    if (response[i].issueMore.zonesQueretaro && response[i].issueMore.zonesQueretaro.zonesQueretaroCopiados.includes(_this.identity._id)) {
                                                        if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                                            swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                                        }
                                                        else {
                                                            if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                                _this.inPendingCopiados.push(response[i]);
                                                                _this.oldDataPandingCopiados.push(response[i]);
                                                            }
                                                            else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                                                _this.inProcessCopiados.push(response[i]);
                                                                _this.oldDataProcessCopiados.push(response[i]);
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            else {
                                if (response[i].issueMore.emailToSendAnalist.includes(_this.identity._id)) {
                                    if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                        swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                    }
                                    else {
                                        if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                            _this.inPending.push(response[i]);
                                            _this.oldDataPanding.push(response[i]);
                                        }
                                        else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                            _this.inProcess.push(response[i]);
                                            _this.oldDataProcess.push(response[i]);
                                        }
                                    }
                                }
                                else {
                                    if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                        swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                                    }
                                    else {
                                        if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                            _this.inPendingCopiados.push(response[i]);
                                            _this.oldDataPandingCopiados.push(response[i]);
                                        }
                                        else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                            _this.inProcessCopiados.push(response[i]);
                                            _this.oldDataProcessCopiados.push(response[i]);
                                        }
                                    }
                                }
                            }
                        }
                        else {
                            if (response[i].status == "Solucionado" || response[i].status == "SolucionadoPreventivo" || response[i].statusCallCenter == "SolucionadoPreventivoCallCenter" || response[i].statusCallCenter == "SolucionadoCallCenter") {
                                swal("Error!", "El timcket ya fue solucionado, favor de buscarlo en 'Solucionados'", "error");
                            }
                            else {
                                if (response[i].status == "Pendiente" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                    _this.inPending.push(response[i]);
                                    _this.oldDataPanding.push(response[i]);
                                }
                                else if (response[i].status == "Nuevo" && response[i].statusCallCenter != 'SolucionadoCallCenter' && response[i].statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                    _this.inProcess.push(response[i]);
                                    _this.oldDataProcess.push(response[i]);
                                }
                            }
                        }
                    }
                    ;
                    _this.inProcessTable = response;
                    response.forEach(function (element, indice) {
                        var finicial = __WEBPACK_IMPORTED_MODULE_3_moment__(element.dateOfReport);
                        var ffinal = __WEBPACK_IMPORTED_MODULE_3_moment__();
                        var minutos = ffinal.diff(finicial, 'minutes');
                        var arr = (minutos / 60).toString().split(".");
                        var sums = 0;
                        for (var i = 0; i < parseInt(arr[0]); i++) {
                            var sums = sums + 60;
                        }
                        ;
                        response[indice].tiempos = arr[0] + ' h ' + (minutos - sums).toString() + ' m';
                        if (parseInt(arr[0]) > element.issue.sla) {
                            response[indice].color = "yellow";
                        }
                        if (element.issue.sla) {
                            var menos = element.issue.sla - parseInt(arr[0]);
                            response[indice].restantes = menos + " h";
                        }
                        if (!element.reportBy.name)
                            element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                        if (parseInt(arr[0]) > element.issue.sla) {
                            response[indice].pasado = "red";
                        }
                        else {
                            response[indice].pasado = "green";
                        }
                        if (element.analyst) {
                            response[indice].analyst.fnames = element.analyst.fname + element.analyst.lname;
                        }
                    });
                    _this.load = false;
                }, function (error) {
                    var errorMessage = error;
                    if (errorMessage != null) {
                        _this.load = false;
                    }
                });
                this._requestProcesService.getEncuestas(this.identity).subscribe(function (response) {
                    if (response.length > 0) {
                        _this.dataEncuesta = response;
                    }
                }, function (error) {
                    var errorMessage = error;
                    if (errorMessage != null) {
                    }
                });
            }
            else if (this.identity.type == 'callCenter') {
                this.table = 5;
                this._requestProcesService.allCallCenter(this.identity).subscribe(function (response) {
                    response.forEach(function (element, indice) {
                        if (element.status && (element.status == 'Nuevo' || element.status == 'Pendiente' || element.status == 'Asignado')) {
                            if (element.status == "Pendiente" && element.statusCallCenter != 'SolucionadoCallCenter' && element.statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                _this.inPendingNew.push(element);
                                _this.oldDataPandingNew.push(element);
                            }
                            else if (element.status == "Nuevo" && element.statusCallCenter != 'SolucionadoCallCenter' && element.statusCallCenter != 'SolucionadoPreventivoCallCenter') {
                                _this.inProcessNew.push(element);
                                _this.oldDataProcessNew.push(element);
                            }
                        }
                        else {
                            if (element.statusCallCenter == "PendienteCallCenter") {
                                _this.inPendingCallCenter.push(element);
                                _this.oldDataPandingCallCenter.push(element);
                            }
                            else {
                                _this.inProcessCallCenter.push(element);
                                _this.oldDataProcessCallCenter.push(element);
                            }
                        }
                        var finicial = __WEBPACK_IMPORTED_MODULE_3_moment__(element.dateOfReport);
                        var ffinal = __WEBPACK_IMPORTED_MODULE_3_moment__();
                        var minutos = ffinal.diff(finicial, 'minutes');
                        var arr = (minutos / 60).toString().split(".");
                        var sums = 0;
                        for (var i = 0; i < parseInt(arr[0]); i++) {
                            var sums = sums + 60;
                        }
                        ;
                        response[indice].tiempos = arr[0] + ' h ' + (minutos - sums).toString() + ' m';
                        if (parseInt(arr[0]) > element.issue.sla) {
                            response[indice].color = "yellow";
                        }
                        if (element.issue.sla) {
                            var menos = element.issue.sla - parseInt(arr[0]);
                            response[indice].restantes = menos + " h";
                        }
                        if (parseInt(arr[0]) > element.issue.sla) {
                            response[indice].pasado = "red";
                        }
                        else {
                            response[indice].pasado = "green";
                        }
                        if (element.issue.slaCallCenter) {
                            if (parseInt(arr[0]) > element.issue.slaCallCenter) {
                                response[indice].colorCallCenter = "yellow";
                            }
                            if (element.issue.slaCallCenter) {
                                var menos = element.issue.slaCallCenter - parseInt(arr[0]);
                                response[indice].restantesCallCenter = menos + " h";
                            }
                            if (parseInt(arr[0]) > element.issue.slaCallCenter) {
                                response[indice].pasadoCallCenter = "red";
                            }
                            else {
                                response[indice].pasadoCallCenter = "green";
                            }
                        }
                        if (!element.reportBy.name)
                            element.reportBy.name = element.reportBy.fname + " " + element.reportBy.lname;
                        if (element.analyst) {
                            response[indice].analyst.fnames = element.analyst.fname + element.analyst.lname;
                        }
                    });
                    _this.load = false;
                }, function (error) {
                    _this.load = false;
                    var errorMessage = error;
                    if (errorMessage != null) {
                        _this.load = false;
                    }
                });
            }
        }
    };
    RequestProcesComponent.prototype.onClickIssue = function (item) {
        this.issue = item;
    };
    RequestProcesComponent.prototype.sendNotes = function (issue) {
        if (issue.reportBy.name == undefined)
            issue.reportBy.name = issue.reportBy.fname + " " + issue.reportBy.lname;
        issue.typeNote = "public";
        this._requestProcesService.addNote(issue).subscribe(function (response) {
            swal("¡Éxito!", "mensaje  " + "  enviado", "success")
                .then(function (res) {
                window.location.reload();
            });
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                swal("Error!", "errorMessage", "error");
            }
        });
    };
    RequestProcesComponent.prototype.exportFunction = function (inSolution) {
        var _this = this;
        this.load = true;
        var EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';
        var EXCEL_EXTENSION = '.xlsx';
        if (this.table == 1) {
            var data = [];
            var name = 'timcketsNuevos';
            inSolution.forEach(function (element, index) {
                data.push({ '#': index + 1, 'nombreComun': element.codeRequest, 'fechaInicio': _this.momentTimeDate(element.dateOfReport), 'hora': _this.momentTimeHour(element.dateOfReport), 'subcategoria': ((element.subCategory) ? element.subCategory : ''), 'servicio': ((element.service) ? element.service : ''), 'numSerie': ((element.numSerie) ? element.numSerie : ''), 'departamento': ((element.issue.category) ? element.issue.category : ''), 'sla': ((element.issue.sla) ? element.issue.sla : ''), 'restante': ((element.restantes) ? element.restantes : ''), 'Estatus': ((element.status) ? element.status : element.statusCallCenter) + ' ' + ((element.reaperturado && element.reaperturado[0]) ? 'Reaperturado' : ''), 'reportadoPor': ((element.reportBy.name) ? element.reportBy.name : '') + ((element.reportByAm) ? ' - ' + element.manager : ''), 'area': ((element.reportBy.area.name) ? element.reportBy.area.name : ''), 'analista': ((element.analyst) ? element.analyst.fnames : ''), 'vencido': ((element.pasado && element.pasado == 'red') ? 'Si' : '') });
            });
        }
        else if (this.table == 2) {
            var data = [];
            var name = 'timcketsPendientes';
            inSolution.forEach(function (element, index) {
                data.push({ '#': index + 1, 'nombreComun': element.codeRequest, 'fechaInicio': _this.momentTimeDate(element.dateOfReport), 'hora': _this.momentTimeHour(element.dateOfReport), 'subcategoria': ((element.subCategory) ? element.subCategory : ''), 'servicio': ((element.service) ? element.service : ''), 'numSerie': ((element.numSerie) ? element.numSerie : ''), 'departamento': ((element.issue.category) ? element.issue.category : ''), 'sla': ((element.issue.sla) ? element.issue.sla : ''), 'restante': ((element.restantes) ? element.restantes : ''), 'Estatus': ((element.status) ? element.status : element.statusCallCenter) + ' ' + ((element.reaperturado && element.reaperturado[0]) ? 'Reaperturado' : ''), 'reportadoPor': ((element.reportBy.name) ? element.reportBy.name : '') + ((element.reportByAm) ? ' - ' + element.manager : ''), 'area': ((element.reportBy.area.name) ? element.reportBy.area.name : ''), 'analista': ((element.analyst) ? element.analyst.fnames : ''), 'motivoPendiente': ((element.pending) ? element.pending : ''), 'vencido': ((element.pasado && element.pasado == 'red') ? 'Si' : '') });
            });
        }
        else if (this.table == 3) {
            var data = [];
            var name = 'timcketsNuevosCopiados';
            inSolution.forEach(function (element, index) {
                data.push({ '#': index + 1, 'nombreComun': element.codeRequest, 'fechaInicio': _this.momentTimeDate(element.dateOfReport), 'hora': _this.momentTimeHour(element.dateOfReport), 'subcategoria': ((element.subCategory) ? element.subCategory : ''), 'servicio': ((element.service) ? element.service : ''), 'numSerie': ((element.numSerie) ? element.numSerie : ''), 'departamento': ((element.issue.category) ? element.issue.category : ''), 'sla': ((element.issue.sla) ? element.issue.sla : ''), 'restante': ((element.restantes) ? element.restantes : ''), 'Estatus': ((element.status) ? element.status : element.statusCallCenter) + ' ' + ((element.reaperturado && element.reaperturado[0]) ? 'Reaperturado' : ''), 'reportadoPor': ((element.reportBy.name) ? element.reportBy.name : '') + ((element.reportByAm) ? ' - ' + element.manager : ''), 'area': ((element.reportBy.area.name) ? element.reportBy.area.name : ''), 'analista': ((element.analyst) ? element.analyst.fnames : ''), 'vencido': ((element.pasado && element.pasado == 'red') ? 'Si' : '') });
            });
        }
        else if (this.table == 4) {
            var data = [];
            var name = 'timcketsPendientesCopiados';
            inSolution.forEach(function (element, index) {
                data.push({ '#': index + 1, 'nombreComun': element.codeRequest, 'fechaInicio': _this.momentTimeDate(element.dateOfReport), 'hora': _this.momentTimeHour(element.dateOfReport), 'subcategoria': ((element.subCategory) ? element.subCategory : ''), 'servicio': ((element.service) ? element.service : ''), 'numSerie': ((element.numSerie) ? element.numSerie : ''), 'departamento': ((element.issue.category) ? element.issue.category : ''), 'sla': ((element.issue.sla) ? element.issue.sla : ''), 'restante': ((element.restantes) ? element.restantes : ''), 'Estatus': ((element.status) ? element.status : element.statusCallCenter) + ' ' + ((element.reaperturado && element.reaperturado[0]) ? 'Reaperturado' : ''), 'reportadoPor': ((element.reportBy.name) ? element.reportBy.name : '') + ((element.reportByAm) ? ' - ' + element.manager : ''), 'area': ((element.reportBy.area.name) ? element.reportBy.area.name : ''), 'analista': ((element.analyst) ? element.analyst.fnames : ''), 'motivoPendiente': ((element.pending) ? element.pending : ''), 'vencido': ((element.pasado && element.pasado == 'red') ? 'Si' : '') });
            });
        }
        else if (this.table == 9) {
            var data = [];
            var name = 'timcketsEnCallCenter';
            inSolution.forEach(function (element, index) {
                data.push({ '#': index + 1, 'nombreComun': element.codeRequest, 'fechaInicio': _this.momentTimeDate(element.dateOfReport), 'hora': _this.momentTimeHour(element.dateOfReport), 'subcategoria': ((element.subCategory) ? element.subCategory : ''), 'servicio': ((element.service) ? element.service : ''), 'numSerie': ((element.numSerie) ? element.numSerie : ''), 'departamento': ((element.issue.category) ? element.issue.category : ''), 'slacc': ((element.issue.slaCallCenter) ? element.issue.slaCallCenter : ''), 'restante': ((element.restantesCallCenter) ? element.restantesCallCenter : ''), 'Estatus': ((element.statusCallCenter) ? element.statusCallCenter : '') + ' ' + ((element.reaperturado && element.reaperturado[0]) ? 'Reaperturado' : ''), 'reportadoPor': ((element.reportBy.name) ? element.reportBy.name : '') + ((element.reportByAm) ? ' - ' + element.manager : ''), 'area': ((element.reportBy.area.name) ? element.reportBy.area.name : ''), 'analista': ((element.analyst) ? element.analyst.fnames : ''), 'motivoPendiente': ((element.pendingCallCenter) ? element.pendingCallCenter : ''), 'vencido': ((element.pasado && element.pasado == 'red') ? 'Si' : '') });
            });
        }
        else if (this.table == 5) {
            var data = [];
            var name = 'timcketsCallCenter';
            inSolution.forEach(function (element, index) {
                data.push({ '#': index + 1, 'nombreComun': element.codeRequest, 'fechaInicio': _this.momentTimeDate(element.dateOfReport), 'hora': _this.momentTimeHour(element.dateOfReport), 'subcategoria': ((element.subCategory) ? element.subCategory : ''), 'servicio': ((element.service) ? element.service : ''), 'numSerie': ((element.numSerie) ? element.numSerie : ''), 'departamento': ((element.issue.category) ? element.issue.category : ''), 'slacc': ((element.issue.slaCallCenter) ? element.issue.slaCallCenter : ''), 'restante': ((element.restantesCallCenter) ? element.restantesCallCenter : ''), 'Estatus': ((element.statusCallCenter) ? element.statusCallCenter : '') + ' ' + ((element.reaperturado && element.reaperturado[0]) ? 'Reaperturado' : ''), 'reportadoPor': ((element.reportBy.name) ? element.reportBy.name : '') + ((element.reportByAm) ? ' - ' + element.manager : ''), 'area': ((element.area.name) ? element.area.name : ''), 'analista': ((element.analyst) ? element.analyst.fnames : ''), 'vencido': ((element.pasadoCallCenter && element.pasadoCallCenter == 'red') ? 'Si' : '') });
            });
        }
        else if (this.table == 6) {
            var data = [];
            var name = 'timcketsCallCenterPendientes';
            inSolution.forEach(function (element, index) {
                data.push({ '#': index + 1, 'nombreComun': element.codeRequest, 'fechaInicio': _this.momentTimeDate(element.dateOfReport), 'hora': _this.momentTimeHour(element.dateOfReport), 'subcategoria': ((element.subCategory) ? element.subCategory : ''), 'servicio': ((element.service) ? element.service : ''), 'numSerie': ((element.numSerie) ? element.numSerie : ''), 'departamento': ((element.issue.category) ? element.issue.category : ''), 'slacc': ((element.issue.slaCallCenter) ? element.issue.slaCallCenter : ''), 'restante': ((element.restantesCallCenter) ? element.restantesCallCenter : ''), 'Estatus': ((element.statusCallCenter) ? element.statusCallCenter : '') + ' ' + ((element.reaperturado && element.reaperturado[0]) ? 'Reaperturado' : ''), 'reportadoPor': ((element.reportBy.name) ? element.reportBy.name : '') + ((element.reportByAm) ? ' - ' + element.manager : ''), 'area': ((element.area.name) ? element.area.name : ''), 'analista': ((element.analyst) ? element.analyst.fnames : ''), 'motivoPendiente': ((element.pendingCallCenter) ? element.pendingCallCenter : ''), 'vencido': ((element.pasadoCallCenter && element.pasadoCallCenter == 'red') ? 'Si' : '') });
            });
        }
        else if (this.table == 7) {
            var data = [];
            var name = 'timcketsNuevosAnalistas';
            inSolution.forEach(function (element, index) {
                data.push({ '#': index + 1, 'nombreComun': element.codeRequest, 'fechaInicio': _this.momentTimeDate(element.dateOfReport), 'hora': _this.momentTimeHour(element.dateOfReport), 'subcategoria': ((element.subCategory) ? element.subCategory : ''), 'servicio': ((element.service) ? element.service : ''), 'numSerie': ((element.numSerie) ? element.numSerie : ''), 'departamento': ((element.issue.category) ? element.issue.category : ''), 'sla': ((element.issue.sla) ? element.issue.sla : ''), 'restante': ((element.restantes) ? element.restantes : ''), 'Estatus': ((element.status) ? element.status : element.status) + ' ' + ((element.reaperturado && element.reaperturado[0]) ? 'Reaperturado' : ''), 'reportadoPor': ((element.reportBy.name) ? element.reportBy.name : '') + ((element.reportByAm) ? ' - ' + element.manager : ''), 'area': ((element.area.name) ? element.area.name : ''), 'analista': ((element.analyst) ? element.analyst.fnames : ''), 'vencido': ((element.pasado && element.pasado == 'red') ? 'Si' : '') });
            });
        }
        else if (this.table == 8) {
            var data = [];
            var name = 'timcketsPendientesAnalistas';
            inSolution.forEach(function (element, index) {
                data.push({ '#': index + 1, 'nombreComun': element.codeRequest, 'fechaInicio': _this.momentTimeDate(element.dateOfReport), 'hora': _this.momentTimeHour(element.dateOfReport), 'subcategoria': ((element.subCategory) ? element.subCategory : ''), 'servicio': ((element.service) ? element.service : ''), 'numSerie': ((element.numSerie) ? element.numSerie : ''), 'departamento': ((element.issue.category) ? element.issue.category : ''), 'sla': ((element.issue.sla) ? element.issue.sla : ''), 'restante': ((element.restantes) ? element.restantes : ''), 'Estatus': ((element.status) ? element.status : element.status) + ' ' + ((element.reaperturado && element.reaperturado[0]) ? 'Reaperturado' : ''), 'reportadoPor': ((element.reportBy.name) ? element.reportBy.name : '') + ((element.reportByAm) ? ' - ' + element.manager : ''), 'area': ((element.area.name) ? element.area.name : ''), 'analista': ((element.analyst) ? element.analyst.fnames : ''), 'motivoPendiente': ((element.pending) ? element.pending : ''), 'vencido': ((element.pasado && element.pasado == 'red') ? 'Si' : '') });
            });
        }
        else {
            this.load = false;
            return;
        }
        setTimeout(function () {
            if (data) {
                var worksheet = __WEBPACK_IMPORTED_MODULE_4_xlsx__["a" /* utils */].json_to_sheet(data);
                var workbook = {
                    Sheets: {
                        'abiertos': worksheet
                    },
                    SheetNames: ['abiertos']
                };
                var excelBuffer = __WEBPACK_IMPORTED_MODULE_4_xlsx__["b" /* write */](workbook, { bookType: 'xlsx', type: 'array' });
                var blobData = new Blob([excelBuffer], { type: EXCEL_TYPE });
                __WEBPACK_IMPORTED_MODULE_5_file_saver__["saveAs"](blobData, name);
                _this.load = false;
            }
            _this.load = false;
        }, 2000);
    };
    RequestProcesComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'requestProces',
            template: __webpack_require__(1063),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */], __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__services_requestProces_service__["a" /* RequestProcesService */]) === 'function' && _b) || Object])
    ], RequestProcesComponent);
    return RequestProcesComponent;
    var _a, _b;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/requestProces.component.js.map

/***/ }),

/***/ 438:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UsersEditComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var swal = __webpack_require__(20);
var UsersEditComponent = (function () {
    function UsersEditComponent(_userService) {
        this._userService = _userService;
        this.activeChange = false;
        this.password = null;
        this.password2 = null;
        this.title = 'Actualizar mis datos';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.users = this.identity;
    }
    UsersEditComponent.prototype.ngOnInit = function () {
    };
    UsersEditComponent.prototype.changePassword = function () {
        this.activeChange = true;
    };
    UsersEditComponent.prototype.changePassword2 = function () {
        var _this = this;
        this.activeChange = true;
        if (!this.password || !this.password2 || this.password != this.password2) {
            swal("Error!", "La contraseñas no coincide", "error");
        }
        else {
            var send = {
                user: this.users,
                newPassword: this.password
            };
            this._userService.updatePassword(send).subscribe(function (response) {
                _this.activeChange = false;
                _this.password = null;
                _this.password2 = null;
                swal("¡Éxito!", "Contraseña actualizada", "success");
            }, function (error) {
                var errorMessage = error;
                if (errorMessage != null) {
                    var body = JSON.parse(error._body);
                    swal("Error!", body.message, "error");
                }
            });
        }
    };
    UsersEditComponent.prototype.onSubmit = function () {
        var _this = this;
        this._userService.updateUser(this.users).subscribe(function (response) {
            if (!response.userUpdated) {
                swal("Error!", "Usuario no se actualizo", "error");
            }
            else {
                swal("¡Éxito!", "Usuario actualizado exitosamente", "success");
                localStorage.setItem('identity', JSON.stringify(_this.users));
            }
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                var body = JSON.parse(error._body);
            }
        });
    };
    UsersEditComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'usersEdit',
            template: __webpack_require__(1064),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object])
    ], UsersEditComponent);
    return UsersEditComponent;
    var _a;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/usersEdit.component.js.map

/***/ }),

/***/ 439:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__models_users__ = __webpack_require__(440);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UsersNewComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var swal = __webpack_require__(20);
var UsersNewComponent = (function () {
    function UsersNewComponent(_userService) {
        this._userService = _userService;
        this.title = 'Crear usuarios o sucursales';
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        this.users = new __WEBPACK_IMPORTED_MODULE_2__models_users__["a" /* Users */]('', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '');
        this.users.type = "";
        this.users.department = "";
        this.users.state = "";
        this.users.business = "";
    }
    UsersNewComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._userService.getDepartments(this.identity).subscribe(function (response) {
            _this.departments = response;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
        this._userService.getAreas().subscribe(function (response) {
            _this.areas = response;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
        this._userService.getProveedores().subscribe(function (response) {
            _this.proveedores = response;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
        this._userService.getAdminUsers().subscribe(function (usersAdmin) {
            _this.usersAdmins = usersAdmin;
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                // var body = JSON.parse(error._body)
                swal("Error!", "errrrrrr", "error");
            }
        });
    };
    UsersNewComponent.prototype.onSubmitNew = function () {
        if (this.users.password != this.users.password2) {
            swal("Error!", "La contraseñas no coincide", "error");
        }
        else {
            if (this.users.type != "") {
                if (this.users.type != "local") {
                    if (this.users.business != "") {
                        if (this.users.state != "") {
                            this._userService.newUser(this.users).subscribe(function (response) {
                                swal("¡Éxito!", "Usuario " + response.users.fname + " " + response.users.lname + " guardado exitosamente", "success")
                                    .then(function (res) {
                                    window.location.reload();
                                });
                            }, function (error) {
                                var errorMessage = error;
                                if (errorMessage != null) {
                                    var body = JSON.parse(error._body);
                                    swal("Error!", body.message, "error");
                                }
                            });
                        }
                        else {
                            swal("Error!", "Escoje el estado", "error");
                        }
                    }
                    else {
                        swal("Error!", "Escoje la empresa", "error");
                    }
                }
                else {
                    if (this.users.state != "") {
                        this.users.business = null;
                        this._userService.newUser(this.users).subscribe(function (response) {
                            swal("¡Éxito!", "Usuario " + response.users.fname + " " + response.users.lname + " guardado exitosamente", "success")
                                .then(function (res) {
                                window.location.reload();
                            });
                        }, function (error) {
                            var errorMessage = error;
                            if (errorMessage != null) {
                                var body = JSON.parse(error._body);
                                swal("Error!", body.message, "error");
                            }
                        });
                    }
                    else {
                        swal("Error!", "Escoje el estado", "error");
                    }
                }
            }
            else {
                swal("Error!", "Escoje el perfil", "error");
            }
        }
    };
    UsersNewComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'usersNew',
            template: __webpack_require__(1065),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object])
    ], UsersNewComponent);
    return UsersNewComponent;
    var _a;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/usersNew.component.js.map

/***/ }),

/***/ 440:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Users; });
var Users = (function () {
    function Users(_id, fname, lname, type, phone, name, userLog, email, password, password2, image, department, state, business, street, numInt, numExt, suburb, area, responsable) {
        this._id = _id;
        this.fname = fname;
        this.lname = lname;
        this.type = type;
        this.phone = phone;
        this.name = name;
        this.userLog = userLog;
        this.email = email;
        this.password = password;
        this.password2 = password2;
        this.image = image;
        this.department = department;
        this.state = state;
        this.business = business;
        this.street = street;
        this.numInt = numInt;
        this.numExt = numExt;
        this.suburb = suburb;
        this.area = area;
        this.responsable = responsable;
    }
    return Users;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/users.js.map

/***/ }),

/***/ 441:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VERSION; });
var VERSION = {
    v: '3.5'
};
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/version.js.map

/***/ }),

/***/ 60:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GLOBAL; });
var GLOBAL = {
    // url: 'https://nuevo-soporte-back.timhortonsmx.com/api/',
    // url: 'https://timckets-backend.timhortonsmx.com/api/',
    url: 'http://localhost:3977/api/',
    ip: '127.0.0.1'
};
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/global.js.map

/***/ }),

/***/ 61:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(108);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__global__ = __webpack_require__(60);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RequestProcesService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var RequestProcesService = (function () {
    function RequestProcesService(_http) {
        this._http = _http;
        this.url = __WEBPACK_IMPORTED_MODULE_3__global__["a" /* GLOBAL */].url;
    }
    RequestProcesService.prototype.getToken = function () {
        var token = localStorage.getItem('token');
        if (token != undefined) {
            this.token = token;
        }
        else {
            this.token = null;
        }
        return this.token;
    };
    RequestProcesService.prototype.getAnswers = function (identity) {
        var params = JSON.stringify(identity);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'requests/all', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.getInCallCenter = function (identity) {
        var params = JSON.stringify(identity);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'requests/getInCallCenter', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.allCallCenter = function (identity) {
        var params = JSON.stringify(identity);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'requests/allCallCenter', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.allSolucionadosNum = function (identity) {
        var params = JSON.stringify(identity);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'requests/allSolucionadosNum', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.allSolucionadosCallCenter = function (identity) {
        var params = JSON.stringify(identity);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'requests/allSolucionadosCallCenter', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.allSolucionadosCallCenter2 = function (identity) {
        var params = JSON.stringify(identity);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'requests/allSolucionadosCallCenter2', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.getHistory = function (identity) {
        var params = JSON.stringify(identity);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'requests/allHistory', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.getHistorySolucionado = function (identity) {
        var params = JSON.stringify(identity);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'requests/allHistorySolucionado', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.statusExtra = function (identity) {
        var params = JSON.stringify(identity);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'requests/statusExtra', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.getOnlyOne = function (request) {
        var params = JSON.stringify(request);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'requests/getOneRequest', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.allSolucionados = function (identity) {
        var params = JSON.stringify(identity);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({ 'Content-Type': 'application/json', 'Authorization': this.getToken() });
        return this._http.post(this.url + 'requests/allSolucionados', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.addNote = function (requests_to_Do) {
        var params = JSON.stringify(requests_to_Do);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/addNote/', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.getOneRequest = function (requests_to_Do) {
        var params = JSON.stringify(requests_to_Do);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/getOneRequest', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.asign = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/asign', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.asignCallCenter = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/asignCallCenter', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.reAsign = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/reAsign', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.eventos = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/eventos', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.addPending = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/pending', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.addPendingCallCenter = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/pendingCallCenter', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.editPending = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/editPending', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.editPendingCC = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/editPendingCC', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.addReaperturar = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/reaperturar', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.addEncuesta = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/encuesta', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.getEncuestas = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/getEncuesta', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.getMessages = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/getMessages', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.addSolution = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/solution', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.addSolutionCallCenter = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/solutionCallCenter', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService.prototype.addSolutionPreventivo = function (issue) {
        var params = JSON.stringify(issue);
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Headers */]({
            'Content-Type': 'application/json',
            'Authorization': this.getToken()
        });
        return this._http.post(this.url + 'requests/solutionPreventivo', params, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    RequestProcesService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["c" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["c" /* Http */]) === 'function' && _a) || Object])
    ], RequestProcesService);
    return RequestProcesService;
    var _a;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/requestProces.service.js.map

/***/ }),

/***/ 738:
/***/ (function(module, exports) {

function webpackEmptyContext(req) {
	throw new Error("Cannot find module '" + req + "'.");
}
webpackEmptyContext.keys = function() { return []; };
webpackEmptyContext.resolve = webpackEmptyContext;
module.exports = webpackEmptyContext;
webpackEmptyContext.id = 738;


/***/ }),

/***/ 739:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__ = __webpack_require__(831);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_environment__ = __webpack_require__(866);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__app_app_module__ = __webpack_require__(862);




if (__WEBPACK_IMPORTED_MODULE_2__environments_environment__["a" /* environment */].production) {
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["enableProdMode"])();
}
__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__["a" /* platformBrowserDynamic */])().bootstrapModule(__WEBPACK_IMPORTED_MODULE_3__app_app_module__["a" /* AppModule */]);
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/main.js.map

/***/ }),

/***/ 861:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_users_service__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__models_users__ = __webpack_require__(440);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_version__ = __webpack_require__(441);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var swal = __webpack_require__(20);
var audio = new Audio('https://dev-soporte.timhortonsmx.com/img/err.mp3');
var AppComponent = (function () {
    function AppComponent(_userService) {
        this._userService = _userService;
        this.title = 'Timckets 2.0';
        this.password = null;
        this.password2 = null;
        this.version = __WEBPACK_IMPORTED_MODULE_3__services_version__["a" /* VERSION */].v;
        this.users = new __WEBPACK_IMPORTED_MODULE_2__models_users__["a" /* Users */]('', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '');
        this.changePass = false;
        this.medida = "grande";
    }
    AppComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (screen.width >= 1200) {
            this.medida = "grande";
        }
        else {
            this.medida = "chica";
            this.menu = false;
        }
        var arreglo = window.location.pathname.split("/");
        var request = arreglo[2];
        if (window.location.pathname.indexOf("changePassword") > 0) {
            this.changePass = true;
            this._userService.oneUser(request).subscribe(function (response) {
                _this.users = response[0];
            });
        }
        else {
            this.changePass = false;
        }
        this.identity = this._userService.getIdentity();
        this.token = this._userService.getToken();
        if (!this.identity) {
            this.message = null;
        }
        else {
            if (this.identity.type == "admin" || this.identity.type == "superAdmin" || this.identity.type == "areaManager" || this.identity.type == "proveedor" || this.identity.type == "callCenter") {
                if (this.identity.type == "superAdmin") {
                    this.message = "Super-Admin";
                }
                if (this.identity.type == "admin") {
                    this.message = "Administrador";
                }
                if (this.identity.type == "areaManager") {
                    this.message = "Area-Manager";
                }
                if (this.identity.type == "proveedor") {
                    this.message = "Proveedor";
                }
                if (this.identity.type == "callCenter") {
                    this.message = "CallCenter";
                }
            }
            else {
                this.message = "Sucursal";
            }
        }
        this._userService.ensureAuth(this.users).subscribe(function (response) {
        }, function (error) {
            var errorMessage = error;
            if (errorMessage != null) {
                var body = JSON.parse(error._body);
                // swal("Error!", body.message, "error");
                localStorage.removeItem('identity');
                localStorage.removeItem('token');
                localStorage.clear();
                _this.identity = null;
                _this.token = null;
                _this.message = null;
            }
        });
    };
    AppComponent.prototype.onSubmit = function () {
        var _this = this;
        if (!this.users.email || !this.users.password) {
            // audio.play();
            swal({
                icon: "error",
                title: "Error!",
                text: "Introduce la informacion completa",
                button: {
                    text: "OK",
                },
            });
        }
        else {
            this._userService.signup(this.users).subscribe(function (response) {
                var identity = response.user;
                _this.identity = identity;
                if (!_this.identity._id) {
                    alert("El usuario no está correctamente identificado");
                }
                else {
                    localStorage.setItem('identity', JSON.stringify(identity));
                    _this._userService.signup(_this.users, 'true').subscribe(function (response) {
                        var token = response.token;
                        _this.token = token;
                        if (_this.token.length <= 0) {
                            alert("El token no se ha generado correctamente");
                        }
                        else {
                            localStorage.setItem('token', token);
                            _this.users = new __WEBPACK_IMPORTED_MODULE_2__models_users__["a" /* Users */]('', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '');
                            window.location.reload();
                        }
                    }, function (error) {
                        var errorMessage = error;
                        if (errorMessage != null) {
                            var body = JSON.parse(error._body);
                            // audio.play();
                            swal("Error!", body.message, "error");
                        }
                    });
                }
            }, function (error) {
                var errorMessage = error;
                if (errorMessage != null) {
                    var body = JSON.parse(error._body);
                    // audio.play();
                    swal("Error!", body.message, "error");
                }
            });
        }
    };
    AppComponent.prototype.resumePasword = function () {
        var _this = this;
        swal({
            text: "Ingresa el usuario ó email para enviar un correo electrónico.",
            icon: "warning",
            content: "input",
            buttons: {
                confirm: {},
            },
        })
            .then(function (value) {
            if (value && value != "") {
                _this._userService.resumePasword(value).subscribe(function (response) {
                    swal("¡Éxito!", response.message, "success");
                }, function (error) {
                    var errorMessage = error;
                    if (errorMessage != null) {
                        var body = JSON.parse(error._body);
                        // audio.play();
                        swal("Error!", body.message, "error");
                    }
                });
            }
            else {
                // audio.play();
                swal("", "Ingresa el usuario \u00F3 email", "error");
            }
        });
    };
    AppComponent.prototype.changePassword2 = function () {
        var _this = this;
        if (!this.password || !this.password2 || this.password != this.password2) {
            swal("Error!", "La contraseñas no coincide", "error");
        }
        else {
            var send = {
                user: this.users,
                newPassword: this.password
            };
            this._userService.updatePassword(send).subscribe(function (response) {
                _this.password = null;
                _this.password2 = null;
                swal("¡Éxito!", "Contraseña actualizada", "success");
                window.location.reload();
            }, function (error) {
                var errorMessage = error;
                if (errorMessage != null) {
                    var body = JSON.parse(error._body);
                    swal("Error!", body.message, "error");
                }
            });
        }
    };
    AppComponent.prototype.logout = function () {
        localStorage.removeItem('identity');
        localStorage.removeItem('token');
        localStorage.clear();
        this.identity = null;
        this.token = null;
        this.home();
    };
    AppComponent.prototype.prfile = function () {
        // window.location.assign("https://soporte.timhortonsmx.com/usersEdit");
        // window.location.assign("https://timckets.timhortonsmx.com/usersEdit");
        window.location.assign("http://localhost:4200/usersEdit");
    };
    AppComponent.prototype.home = function () {
        // window.location.assign("https://soporte.timhortonsmx.com/");
        // window.location.assign("https://timckets.timhortonsmx.com/");
        window.location.assign("http://localhost:4200/");
    };
    AppComponent.prototype.menus = function () {
        if (this.menu == false) {
            this.menu = true;
        }
        else {
            this.menu = false;
        }
    };
    AppComponent = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-root',
            template: __webpack_require__(1044),
            providers: [__WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]]
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__services_users_service__["a" /* UsersService */]) === 'function' && _a) || Object])
    ], AppComponent);
    return AppComponent;
    var _a;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/app.component.js.map

/***/ }),

/***/ 862:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__ = __webpack_require__(131);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(822);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_angular2_datatable__ = __webpack_require__(867);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_angular2_datatable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_angular2_datatable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__app_routing__ = __webpack_require__(863);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__app_component__ = __webpack_require__(861);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_usersEdit_component__ = __webpack_require__(438);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_usersNew_component__ = __webpack_require__(439);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_home_component__ = __webpack_require__(427);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_requestNew_component__ = __webpack_require__(436);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__components_requestProces_component__ = __webpack_require__(437);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__components_answer_component__ = __webpack_require__(419);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__components_answerNew_component__ = __webpack_require__(420);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__components_requestClosed_component__ = __webpack_require__(434);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__components_homeAdmin_component__ = __webpack_require__(428);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__components_departmentsNew_component__ = __webpack_require__(424);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__components_areasNew_component__ = __webpack_require__(422);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__components_requestDetail_component__ = __webpack_require__(435);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__components_issuesNew_component__ = __webpack_require__(430);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__components_areasEdit_component__ = __webpack_require__(421);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__components_departmentsEdit_component__ = __webpack_require__(423);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__components_issuesEdit_component__ = __webpack_require__(429);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__components_report_component__ = __webpack_require__(433);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__components_history_component__ = __webpack_require__(426);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__components_encuesta_component__ = __webpack_require__(425);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__components_localsEdit_component__ = __webpack_require__(431);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__components_message_component__ = __webpack_require__(432);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




























var AppModule = (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_6__app_component__["a" /* AppComponent */],
                __WEBPACK_IMPORTED_MODULE_7__components_usersEdit_component__["a" /* UsersEditComponent */],
                __WEBPACK_IMPORTED_MODULE_8__components_usersNew_component__["a" /* UsersNewComponent */],
                __WEBPACK_IMPORTED_MODULE_9__components_home_component__["a" /* HomeComponent */],
                __WEBPACK_IMPORTED_MODULE_10__components_requestNew_component__["a" /* RequestNewComponent */],
                __WEBPACK_IMPORTED_MODULE_11__components_requestProces_component__["a" /* RequestProcesComponent */],
                __WEBPACK_IMPORTED_MODULE_12__components_answer_component__["a" /* AnswerComponent */],
                __WEBPACK_IMPORTED_MODULE_13__components_answerNew_component__["a" /* AnswerNewComponent */],
                __WEBPACK_IMPORTED_MODULE_14__components_requestClosed_component__["a" /* RequestClosedComponent */],
                __WEBPACK_IMPORTED_MODULE_15__components_homeAdmin_component__["a" /* HomeAdminComponent */],
                __WEBPACK_IMPORTED_MODULE_17__components_areasNew_component__["a" /* AreasNewComponent */],
                __WEBPACK_IMPORTED_MODULE_16__components_departmentsNew_component__["a" /* DepartmentsNewComponent */],
                __WEBPACK_IMPORTED_MODULE_18__components_requestDetail_component__["a" /* RequestDetailComponent */],
                __WEBPACK_IMPORTED_MODULE_19__components_issuesNew_component__["a" /* IssuesNewComponent */],
                __WEBPACK_IMPORTED_MODULE_20__components_areasEdit_component__["a" /* AreasEditComponent */],
                __WEBPACK_IMPORTED_MODULE_21__components_departmentsEdit_component__["a" /* DepartmentsEditComponent */],
                __WEBPACK_IMPORTED_MODULE_22__components_issuesEdit_component__["a" /* IssuesEditComponent */],
                __WEBPACK_IMPORTED_MODULE_23__components_report_component__["a" /* ReportComponent */],
                __WEBPACK_IMPORTED_MODULE_24__components_history_component__["a" /* HistoryComponent */],
                __WEBPACK_IMPORTED_MODULE_25__components_encuesta_component__["a" /* EncuestaComponent */],
                __WEBPACK_IMPORTED_MODULE_27__components_message_component__["a" /* MessageComponent */],
                __WEBPACK_IMPORTED_MODULE_26__components_localsEdit_component__["a" /* LocalsEditComponent */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__["a" /* BrowserModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormsModule */],
                __WEBPACK_IMPORTED_MODULE_3__angular_http__["a" /* HttpModule */],
                __WEBPACK_IMPORTED_MODULE_4_angular2_datatable__["DataTableModule"],
                __WEBPACK_IMPORTED_MODULE_5__app_routing__["a" /* routing */]
            ],
            providers: [__WEBPACK_IMPORTED_MODULE_5__app_routing__["b" /* appRoutingProviders */]],
            bootstrap: [__WEBPACK_IMPORTED_MODULE_6__app_component__["a" /* AppComponent */]]
        }), 
        __metadata('design:paramtypes', [])
    ], AppModule);
    return AppModule;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/app.module.js.map

/***/ }),

/***/ 863:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(413);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_usersEdit_component__ = __webpack_require__(438);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_usersNew_component__ = __webpack_require__(439);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_home_component__ = __webpack_require__(427);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_requestNew_component__ = __webpack_require__(436);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_requestProces_component__ = __webpack_require__(437);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_answer_component__ = __webpack_require__(419);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_answerNew_component__ = __webpack_require__(420);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_requestClosed_component__ = __webpack_require__(434);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_homeAdmin_component__ = __webpack_require__(428);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_departmentsNew_component__ = __webpack_require__(424);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__components_areasNew_component__ = __webpack_require__(422);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__components_requestDetail_component__ = __webpack_require__(435);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__components_issuesNew_component__ = __webpack_require__(430);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__components_areasEdit_component__ = __webpack_require__(421);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__components_departmentsEdit_component__ = __webpack_require__(423);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__components_issuesEdit_component__ = __webpack_require__(429);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__components_report_component__ = __webpack_require__(433);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__components_history_component__ = __webpack_require__(426);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__components_encuesta_component__ = __webpack_require__(425);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__components_localsEdit_component__ = __webpack_require__(431);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__components_message_component__ = __webpack_require__(432);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return appRoutingProviders; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return routing; });






















var appRoutes = [
    { path: '', component: __WEBPACK_IMPORTED_MODULE_3__components_home_component__["a" /* HomeComponent */] },
    { path: 'home', component: __WEBPACK_IMPORTED_MODULE_3__components_home_component__["a" /* HomeComponent */] },
    { path: 'requestNew', component: __WEBPACK_IMPORTED_MODULE_4__components_requestNew_component__["a" /* RequestNewComponent */] },
    { path: 'requestProces', component: __WEBPACK_IMPORTED_MODULE_5__components_requestProces_component__["a" /* RequestProcesComponent */] },
    { path: 'answer', component: __WEBPACK_IMPORTED_MODULE_6__components_answer_component__["a" /* AnswerComponent */] },
    { path: 'answerNew', component: __WEBPACK_IMPORTED_MODULE_7__components_answerNew_component__["a" /* AnswerNewComponent */] },
    { path: 'usersEdit', component: __WEBPACK_IMPORTED_MODULE_1__components_usersEdit_component__["a" /* UsersEditComponent */] },
    { path: 'usersNew', component: __WEBPACK_IMPORTED_MODULE_2__components_usersNew_component__["a" /* UsersNewComponent */] },
    { path: 'requestClosed', component: __WEBPACK_IMPORTED_MODULE_8__components_requestClosed_component__["a" /* RequestClosedComponent */] },
    { path: 'homeAdmin', component: __WEBPACK_IMPORTED_MODULE_9__components_homeAdmin_component__["a" /* HomeAdminComponent */] },
    { path: 'departmentsNew', component: __WEBPACK_IMPORTED_MODULE_10__components_departmentsNew_component__["a" /* DepartmentsNewComponent */] },
    { path: 'areasNew', component: __WEBPACK_IMPORTED_MODULE_11__components_areasNew_component__["a" /* AreasNewComponent */] },
    { path: 'issuesNew', component: __WEBPACK_IMPORTED_MODULE_13__components_issuesNew_component__["a" /* IssuesNewComponent */] },
    { path: 'areasEdit', component: __WEBPACK_IMPORTED_MODULE_14__components_areasEdit_component__["a" /* AreasEditComponent */] },
    { path: 'requestDetail/:id', component: __WEBPACK_IMPORTED_MODULE_12__components_requestDetail_component__["a" /* RequestDetailComponent */] },
    { path: 'departmentsEdit', component: __WEBPACK_IMPORTED_MODULE_15__components_departmentsEdit_component__["a" /* DepartmentsEditComponent */] },
    { path: 'issuesEdit', component: __WEBPACK_IMPORTED_MODULE_16__components_issuesEdit_component__["a" /* IssuesEditComponent */] },
    { path: 'report', component: __WEBPACK_IMPORTED_MODULE_17__components_report_component__["a" /* ReportComponent */] },
    { path: 'history', component: __WEBPACK_IMPORTED_MODULE_18__components_history_component__["a" /* HistoryComponent */] },
    { path: 'encuesta', component: __WEBPACK_IMPORTED_MODULE_19__components_encuesta_component__["a" /* EncuestaComponent */] },
    { path: 'message', component: __WEBPACK_IMPORTED_MODULE_21__components_message_component__["a" /* MessageComponent */] },
    { path: 'localsEdit', component: __WEBPACK_IMPORTED_MODULE_20__components_localsEdit_component__["a" /* LocalsEditComponent */] },
    { path: '**', component: __WEBPACK_IMPORTED_MODULE_3__components_home_component__["a" /* HomeComponent */] },
];
var appRoutingProviders = [];
var routing = __WEBPACK_IMPORTED_MODULE_0__angular_router__["a" /* RouterModule */].forRoot(appRoutes);
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/app.routing.js.map

/***/ }),

/***/ 864:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RequestNew; });
var RequestNew = (function () {
    function RequestNew(service, description, subCategory, anexos, urgency, reportBy, // nombre de usuario   
        reportBranch, // nombre de sucursal 
        status, organization, analyst, manager, dateOfReport, dateLastUpdate, dateAssignment, dateSolution, dateClosing) {
        this.service = service;
        this.description = description;
        this.subCategory = subCategory;
        this.anexos = anexos;
        this.urgency = urgency;
        this.reportBy = reportBy;
        this.reportBranch = reportBranch;
        this.status = status;
        this.organization = organization;
        this.analyst = analyst;
        this.manager = manager;
        this.dateOfReport = dateOfReport;
        this.dateLastUpdate = dateLastUpdate;
        this.dateAssignment = dateAssignment;
        this.dateSolution = dateSolution;
        this.dateClosing = dateClosing;
    }
    return RequestNew;
}());
// nuevo // se crea el timket
// asignado // cuando se asigna un analista
// pendiente // cuando el analista marca en pendiente que se esta dando seguimiento
// solucionado // cuando el analista marca solucionado
// cerrado // cuando contesta la sucursal la encuesta de satisfaccion 
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/requestNew.js.map

/***/ }),

/***/ 865:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(108);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__global__ = __webpack_require__(60);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UploadService; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var UploadService = (function () {
    function UploadService(_http) {
        this._http = _http;
        this.url = __WEBPACK_IMPORTED_MODULE_3__global__["a" /* GLOBAL */].url;
    }
    UploadService.prototype.makeFileRequest = function (url, params, files, token, name) {
        console.log("12312312312312312312312312312123123123123123123123123123123123123");
        return new Promise(function (resolve, reject) {
            var formData = new FormData();
            var xhr = new XMLHttpRequest();
            for (var i = 0; i < files.length; i++) {
                formData.append(name, files[i], files[i].name);
            }
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4) {
                    if (xhr.status == 200) {
                        resolve(JSON.parse(xhr.response));
                    }
                    else {
                        reject(xhr.response);
                    }
                }
            };
        });
    };
    UploadService = __decorate([
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__["c" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__["c" /* Http */]) === 'function' && _a) || Object])
    ], UploadService);
    return UploadService;
    var _a;
}());
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/upload.service.js.map

/***/ }),

/***/ 866:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return environment; });
// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `angular-cli.json`.
var environment = {
    production: false
};
//# sourceMappingURL=/Users/MarceloGarcia/Documents/Moy/timckets/timckets-web/src/environment.js.map

/***/ })

},[1386]);
//# sourceMappingURL=main.bundle.map